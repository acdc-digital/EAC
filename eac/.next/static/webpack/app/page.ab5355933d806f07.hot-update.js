"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./store/terminal/index.ts":
/*!*********************************!*\
  !*** ./store/terminal/index.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useTerminalStore: () => (/* binding */ useTerminalStore)\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/../node_modules/.pnpm/zustand@5.0.6_@types+react@19.1.8_react@18.3.1_use-sync-external-store@1.5.0_react@18.3.1_/node_modules/zustand/esm/react.mjs\");\n// Terminal Store\n// /Users/matthewsimon/Projects/EAC/eac/store/terminal/index.ts\n\nconst useTerminalStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)((set, get)=>({\n        isCollapsed: true,\n        currentSize: 30,\n        lastExpandedSize: 30,\n        setCollapsed: (collapsed)=>{\n            const state = get();\n            console.log('setCollapsed called:', {\n                collapsed,\n                currentLastExpandedSize: state.lastExpandedSize\n            });\n            set({\n                isCollapsed: collapsed,\n                currentSize: collapsed ? 5 : state.lastExpandedSize\n            });\n        },\n        setSize: (size)=>{\n            const state = get();\n            console.log('setSize called:', {\n                size,\n                isCollapsed: state.isCollapsed,\n                currentLastExpandedSize: state.lastExpandedSize\n            });\n            // Only update lastExpandedSize if:\n            // 1. Terminal is expanded\n            // 2. Size is reasonable (>= 15 to avoid small fluctuations)\n            // 3. Size is significantly different from current lastExpandedSize (>5% difference)\n            const sizeDifference = Math.abs(size - state.lastExpandedSize);\n            const percentDifference = sizeDifference / state.lastExpandedSize * 100;\n            const shouldUpdateLastExpandedSize = !state.isCollapsed && size >= 15 && percentDifference > 5;\n            console.log('Size difference:', sizeDifference, 'Percent difference:', percentDifference.toFixed(1) + '%', 'Should update:', shouldUpdateLastExpandedSize);\n            set({\n                currentSize: size,\n                lastExpandedSize: shouldUpdateLastExpandedSize ? size : state.lastExpandedSize\n            });\n        },\n        setLastExpandedSize: (size)=>{\n            console.log('setLastExpandedSize called:', size);\n            set({\n                lastExpandedSize: size\n            });\n        },\n        toggleCollapse: ()=>{\n            const state = get();\n            if (state.isCollapsed) {\n                // Expanding - use the saved lastExpandedSize\n                console.log('Expanding terminal to:', state.lastExpandedSize);\n                set({\n                    isCollapsed: false,\n                    currentSize: state.lastExpandedSize\n                });\n            } else {\n                // Collapsing - save current size if it's reasonable\n                const currentSize = state.currentSize;\n                const sizeToSave = currentSize >= 15 ? currentSize : state.lastExpandedSize;\n                console.log('Collapsing terminal, saving size:', sizeToSave);\n                set({\n                    isCollapsed: true,\n                    currentSize: 5,\n                    lastExpandedSize: sizeToSave\n                });\n            }\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3N0b3JlL3Rlcm1pbmFsL2luZGV4LnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsaUJBQWlCO0FBQ2pCLCtEQUErRDtBQUU5QjtBQUcxQixNQUFNQyxtQkFBbUJELCtDQUFNQSxDQUFnQixDQUFDRSxLQUFLQyxNQUFTO1FBQ25FQyxhQUFhO1FBQ2JDLGFBQWE7UUFDYkMsa0JBQWtCO1FBRWxCQyxjQUFjLENBQUNDO1lBQ2IsTUFBTUMsUUFBUU47WUFDZE8sUUFBUUMsR0FBRyxDQUFDLHdCQUF3QjtnQkFBRUg7Z0JBQVdJLHlCQUF5QkgsTUFBTUgsZ0JBQWdCO1lBQUM7WUFDakdKLElBQUk7Z0JBQ0ZFLGFBQWFJO2dCQUNiSCxhQUFhRyxZQUFZLElBQUlDLE1BQU1ILGdCQUFnQjtZQUNyRDtRQUNGO1FBRUFPLFNBQVMsQ0FBQ0M7WUFDUixNQUFNTCxRQUFRTjtZQUNkTyxRQUFRQyxHQUFHLENBQUMsbUJBQW1CO2dCQUFFRztnQkFBTVYsYUFBYUssTUFBTUwsV0FBVztnQkFBRVEseUJBQXlCSCxNQUFNSCxnQkFBZ0I7WUFBQztZQUV2SCxtQ0FBbUM7WUFDbkMsMEJBQTBCO1lBQzFCLDREQUE0RDtZQUM1RCxvRkFBb0Y7WUFDcEYsTUFBTVMsaUJBQWlCQyxLQUFLQyxHQUFHLENBQUNILE9BQU9MLE1BQU1ILGdCQUFnQjtZQUM3RCxNQUFNWSxvQkFBb0IsaUJBQWtCVCxNQUFNSCxnQkFBZ0IsR0FBSTtZQUN0RSxNQUFNYSwrQkFBK0IsQ0FBQ1YsTUFBTUwsV0FBVyxJQUNuQlUsUUFBUSxNQUNSSSxvQkFBb0I7WUFFeERSLFFBQVFDLEdBQUcsQ0FBQyxvQkFBb0JJLGdCQUFnQix1QkFBdUJHLGtCQUFrQkUsT0FBTyxDQUFDLEtBQUssS0FBSyxrQkFBa0JEO1lBQzdIakIsSUFBSTtnQkFDRkcsYUFBYVM7Z0JBQ2JSLGtCQUFrQmEsK0JBQStCTCxPQUFPTCxNQUFNSCxnQkFBZ0I7WUFDaEY7UUFDRjtRQUVBZSxxQkFBcUIsQ0FBQ1A7WUFDcEJKLFFBQVFDLEdBQUcsQ0FBQywrQkFBK0JHO1lBQzNDWixJQUFJO2dCQUFFSSxrQkFBa0JRO1lBQUs7UUFDL0I7UUFFQVEsZ0JBQWdCO1lBQ2QsTUFBTWIsUUFBUU47WUFFZCxJQUFJTSxNQUFNTCxXQUFXLEVBQUU7Z0JBQ3JCLDZDQUE2QztnQkFDN0NNLFFBQVFDLEdBQUcsQ0FBQywwQkFBMEJGLE1BQU1ILGdCQUFnQjtnQkFDNURKLElBQUk7b0JBQ0ZFLGFBQWE7b0JBQ2JDLGFBQWFJLE1BQU1ILGdCQUFnQjtnQkFDckM7WUFDRixPQUFPO2dCQUNMLG9EQUFvRDtnQkFDcEQsTUFBTUQsY0FBY0ksTUFBTUosV0FBVztnQkFDckMsTUFBTWtCLGFBQWFsQixlQUFlLEtBQUtBLGNBQWNJLE1BQU1ILGdCQUFnQjtnQkFDM0VJLFFBQVFDLEdBQUcsQ0FBQyxxQ0FBcUNZO2dCQUNqRHJCLElBQUk7b0JBQ0ZFLGFBQWE7b0JBQ2JDLGFBQWE7b0JBQ2JDLGtCQUFrQmlCO2dCQUNwQjtZQUNGO1FBQ0Y7SUFDRixJQUFJIiwic291cmNlcyI6WyIvVXNlcnMvbWF0dGhld3NpbW9uL1Byb2plY3RzL2VhYy9lYWMvc3RvcmUvdGVybWluYWwvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGVybWluYWwgU3RvcmVcbi8vIC9Vc2Vycy9tYXR0aGV3c2ltb24vUHJvamVjdHMvRUFDL2VhYy9zdG9yZS90ZXJtaW5hbC9pbmRleC50c1xuXG5pbXBvcnQgeyBjcmVhdGUgfSBmcm9tICd6dXN0YW5kJztcbmltcG9ydCB7IFRlcm1pbmFsU3RhdGUgfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IHVzZVRlcm1pbmFsU3RvcmUgPSBjcmVhdGU8VGVybWluYWxTdGF0ZT4oKHNldCwgZ2V0KSA9PiAoe1xuICBpc0NvbGxhcHNlZDogdHJ1ZSxcbiAgY3VycmVudFNpemU6IDMwLFxuICBsYXN0RXhwYW5kZWRTaXplOiAzMCxcblxuICBzZXRDb2xsYXBzZWQ6IChjb2xsYXBzZWQ6IGJvb2xlYW4pID0+IHtcbiAgICBjb25zdCBzdGF0ZSA9IGdldCgpO1xuICAgIGNvbnNvbGUubG9nKCdzZXRDb2xsYXBzZWQgY2FsbGVkOicsIHsgY29sbGFwc2VkLCBjdXJyZW50TGFzdEV4cGFuZGVkU2l6ZTogc3RhdGUubGFzdEV4cGFuZGVkU2l6ZSB9KTtcbiAgICBzZXQoe1xuICAgICAgaXNDb2xsYXBzZWQ6IGNvbGxhcHNlZCxcbiAgICAgIGN1cnJlbnRTaXplOiBjb2xsYXBzZWQgPyA1IDogc3RhdGUubGFzdEV4cGFuZGVkU2l6ZVxuICAgIH0pO1xuICB9LFxuXG4gIHNldFNpemU6IChzaXplOiBudW1iZXIpID0+IHtcbiAgICBjb25zdCBzdGF0ZSA9IGdldCgpO1xuICAgIGNvbnNvbGUubG9nKCdzZXRTaXplIGNhbGxlZDonLCB7IHNpemUsIGlzQ29sbGFwc2VkOiBzdGF0ZS5pc0NvbGxhcHNlZCwgY3VycmVudExhc3RFeHBhbmRlZFNpemU6IHN0YXRlLmxhc3RFeHBhbmRlZFNpemUgfSk7XG5cbiAgICAvLyBPbmx5IHVwZGF0ZSBsYXN0RXhwYW5kZWRTaXplIGlmOlxuICAgIC8vIDEuIFRlcm1pbmFsIGlzIGV4cGFuZGVkXG4gICAgLy8gMi4gU2l6ZSBpcyByZWFzb25hYmxlICg+PSAxNSB0byBhdm9pZCBzbWFsbCBmbHVjdHVhdGlvbnMpXG4gICAgLy8gMy4gU2l6ZSBpcyBzaWduaWZpY2FudGx5IGRpZmZlcmVudCBmcm9tIGN1cnJlbnQgbGFzdEV4cGFuZGVkU2l6ZSAoPjUlIGRpZmZlcmVuY2UpXG4gICAgY29uc3Qgc2l6ZURpZmZlcmVuY2UgPSBNYXRoLmFicyhzaXplIC0gc3RhdGUubGFzdEV4cGFuZGVkU2l6ZSk7XG4gICAgY29uc3QgcGVyY2VudERpZmZlcmVuY2UgPSAoc2l6ZURpZmZlcmVuY2UgLyBzdGF0ZS5sYXN0RXhwYW5kZWRTaXplKSAqIDEwMDtcbiAgICBjb25zdCBzaG91bGRVcGRhdGVMYXN0RXhwYW5kZWRTaXplID0gIXN0YXRlLmlzQ29sbGFwc2VkICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZSA+PSAxNSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlcmNlbnREaWZmZXJlbmNlID4gNTtcblxuICAgIGNvbnNvbGUubG9nKCdTaXplIGRpZmZlcmVuY2U6Jywgc2l6ZURpZmZlcmVuY2UsICdQZXJjZW50IGRpZmZlcmVuY2U6JywgcGVyY2VudERpZmZlcmVuY2UudG9GaXhlZCgxKSArICclJywgJ1Nob3VsZCB1cGRhdGU6Jywgc2hvdWxkVXBkYXRlTGFzdEV4cGFuZGVkU2l6ZSk7XG4gICAgc2V0KHtcbiAgICAgIGN1cnJlbnRTaXplOiBzaXplLFxuICAgICAgbGFzdEV4cGFuZGVkU2l6ZTogc2hvdWxkVXBkYXRlTGFzdEV4cGFuZGVkU2l6ZSA/IHNpemUgOiBzdGF0ZS5sYXN0RXhwYW5kZWRTaXplXG4gICAgfSk7XG4gIH0sXG5cbiAgc2V0TGFzdEV4cGFuZGVkU2l6ZTogKHNpemU6IG51bWJlcikgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdzZXRMYXN0RXhwYW5kZWRTaXplIGNhbGxlZDonLCBzaXplKTtcbiAgICBzZXQoeyBsYXN0RXhwYW5kZWRTaXplOiBzaXplIH0pO1xuICB9LFxuXG4gIHRvZ2dsZUNvbGxhcHNlOiAoKSA9PiB7XG4gICAgY29uc3Qgc3RhdGUgPSBnZXQoKTtcblxuICAgIGlmIChzdGF0ZS5pc0NvbGxhcHNlZCkge1xuICAgICAgLy8gRXhwYW5kaW5nIC0gdXNlIHRoZSBzYXZlZCBsYXN0RXhwYW5kZWRTaXplXG4gICAgICBjb25zb2xlLmxvZygnRXhwYW5kaW5nIHRlcm1pbmFsIHRvOicsIHN0YXRlLmxhc3RFeHBhbmRlZFNpemUpO1xuICAgICAgc2V0KHtcbiAgICAgICAgaXNDb2xsYXBzZWQ6IGZhbHNlLFxuICAgICAgICBjdXJyZW50U2l6ZTogc3RhdGUubGFzdEV4cGFuZGVkU2l6ZVxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIENvbGxhcHNpbmcgLSBzYXZlIGN1cnJlbnQgc2l6ZSBpZiBpdCdzIHJlYXNvbmFibGVcbiAgICAgIGNvbnN0IGN1cnJlbnRTaXplID0gc3RhdGUuY3VycmVudFNpemU7XG4gICAgICBjb25zdCBzaXplVG9TYXZlID0gY3VycmVudFNpemUgPj0gMTUgPyBjdXJyZW50U2l6ZSA6IHN0YXRlLmxhc3RFeHBhbmRlZFNpemU7XG4gICAgICBjb25zb2xlLmxvZygnQ29sbGFwc2luZyB0ZXJtaW5hbCwgc2F2aW5nIHNpemU6Jywgc2l6ZVRvU2F2ZSk7XG4gICAgICBzZXQoe1xuICAgICAgICBpc0NvbGxhcHNlZDogdHJ1ZSxcbiAgICAgICAgY3VycmVudFNpemU6IDUsXG4gICAgICAgIGxhc3RFeHBhbmRlZFNpemU6IHNpemVUb1NhdmVcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufSkpOyAiXSwibmFtZXMiOlsiY3JlYXRlIiwidXNlVGVybWluYWxTdG9yZSIsInNldCIsImdldCIsImlzQ29sbGFwc2VkIiwiY3VycmVudFNpemUiLCJsYXN0RXhwYW5kZWRTaXplIiwic2V0Q29sbGFwc2VkIiwiY29sbGFwc2VkIiwic3RhdGUiLCJjb25zb2xlIiwibG9nIiwiY3VycmVudExhc3RFeHBhbmRlZFNpemUiLCJzZXRTaXplIiwic2l6ZSIsInNpemVEaWZmZXJlbmNlIiwiTWF0aCIsImFicyIsInBlcmNlbnREaWZmZXJlbmNlIiwic2hvdWxkVXBkYXRlTGFzdEV4cGFuZGVkU2l6ZSIsInRvRml4ZWQiLCJzZXRMYXN0RXhwYW5kZWRTaXplIiwidG9nZ2xlQ29sbGFwc2UiLCJzaXplVG9TYXZlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./store/terminal/index.ts\n"));

/***/ })

});