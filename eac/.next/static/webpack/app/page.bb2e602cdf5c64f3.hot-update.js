"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./store/terminal/chat.ts":
/*!********************************!*\
  !*** ./store/terminal/chat.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useChatStore: () => (/* binding */ useChatStore)\n/* harmony export */ });\n/* harmony import */ var _convex_generated_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/convex/_generated/api */ \"(app-pages-browser)/./convex/_generated/api.js\");\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/../node_modules/.pnpm/zustand@5.0.6_@types+react@19.1.9_react@18.3.1_use-sync-external-store@1.5.0_react@18.3.1_/node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/../node_modules/.pnpm/zustand@5.0.6_@types+react@19.1.9_react@18.3.1_use-sync-external-store@1.5.0_react@18.3.1_/node_modules/zustand/esm/middleware.mjs\");\n// Terminal Chat Store with Convex Integration\n// /Users/matthewsimon/Projects/eac/eac/store/terminal/chat.ts\n\n\n\n// Generate a user-specific session ID\nconst generateUserSessionId = (userId)=>{\n    return \"user_\".concat(userId, \"_session_\").concat(Date.now());\n};\n// Generate a fallback session ID for unauthenticated users\nconst generateSessionId = ()=>{\n    return \"session_\".concat(Date.now(), \"_\").concat(Math.random().toString(36).substr(2, 9));\n};\nconst useChatStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_2__.persist)((set, get)=>({\n        messages: [],\n        isLoading: false,\n        sessionId: generateSessionId(),\n        initializeUserSession: (userId)=>{\n            const userSessionId = \"user_\".concat(userId, \"_persistent\");\n            set({\n                sessionId: userSessionId\n            });\n        },\n        addMessage: (message)=>{\n            const newMessage = {\n                ...message,\n                _id: Date.now().toString() + Math.random().toString(36).substr(2, 9),\n                createdAt: Date.now(),\n                _creationTime: Date.now()\n            };\n            set((state)=>({\n                    messages: [\n                        ...state.messages,\n                        newMessage\n                    ]\n                }));\n        },\n        addTerminalFeedback: (operation, details)=>{\n            const { sessionId } = get();\n            // Format terminal-style feedback based on operation type\n            let terminalOutput = '';\n            const timestamp = new Date().toLocaleTimeString('en-US', {\n                hour12: false,\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit'\n            });\n            switch(operation === null || operation === void 0 ? void 0 : operation.type){\n                case 'file_created':\n                    var _operation_details;\n                    terminalOutput = \"[\".concat(timestamp, \"] ✅ File created: \").concat(((_operation_details = operation.details) === null || _operation_details === void 0 ? void 0 : _operation_details.fileName) || 'unknown', \"\\n\").concat(details);\n                    break;\n                case 'project_created':\n                    var _operation_details1;\n                    terminalOutput = \"[\".concat(timestamp, \"] ✅ Project created: \").concat(((_operation_details1 = operation.details) === null || _operation_details1 === void 0 ? void 0 : _operation_details1.projectName) || 'unknown', \"\\n\").concat(details);\n                    break;\n                case 'tool_executed':\n                    var _operation_details2;\n                    terminalOutput = \"[\".concat(timestamp, \"] \\uD83D\\uDD27 Tool executed: \").concat(((_operation_details2 = operation.details) === null || _operation_details2 === void 0 ? void 0 : _operation_details2.toolName) || 'unknown', \"\\n\").concat(details);\n                    break;\n                case 'error':\n                    var _operation_details3;\n                    terminalOutput = \"[\".concat(timestamp, \"] ❌ Operation failed: \").concat(((_operation_details3 = operation.details) === null || _operation_details3 === void 0 ? void 0 : _operation_details3.error) || 'unknown error', \"\\n\").concat(details);\n                    break;\n                default:\n                    terminalOutput = \"[\".concat(timestamp, \"] ℹ️ \").concat(details);\n            }\n            const terminalMessage = {\n                _id: Date.now().toString() + Math.random().toString(36).substr(2, 9),\n                role: 'terminal',\n                content: terminalOutput,\n                sessionId,\n                createdAt: Date.now(),\n                _creationTime: Date.now(),\n                operation\n            };\n            set((state)=>({\n                    messages: [\n                        ...state.messages,\n                        terminalMessage\n                    ]\n                }));\n        },\n        sendMessage: async (content)=>{\n            // This is a placeholder - the actual sending is handled by useChat hook\n            // The chat store just maintains local state\n            console.log('Chat store sendMessage called with:', content);\n            // Add the user message locally for immediate UI feedback\n            const { sessionId, addMessage } = get();\n            addMessage({\n                role: 'user',\n                content,\n                sessionId\n            });\n        // Note: The actual Convex interaction is handled by the useChat hook\n        // This is just for local state management\n        },\n        loadMessages: async (convexQuery)=>{\n            const { sessionId } = get();\n            try {\n                const messages = await convexQuery(_convex_generated_api__WEBPACK_IMPORTED_MODULE_0__.api.chat.getChatMessages, {\n                    sessionId,\n                    limit: 500\n                });\n                set({\n                    messages: messages || []\n                });\n            } catch (error) {\n                console.error('Error loading messages:', error);\n            }\n        },\n        loadMessagesForSession: async (convexQuery, sessionId)=>{\n            try {\n                const messages = await convexQuery(_convex_generated_api__WEBPACK_IMPORTED_MODULE_0__.api.chat.getChatMessages, {\n                    sessionId,\n                    limit: 500\n                });\n                // Only update if this is still the active session\n                const currentState = get();\n                if (currentState.sessionId === sessionId) {\n                    set({\n                        messages: messages || []\n                    });\n                }\n            } catch (error) {\n                console.error('Error loading messages for session:', error);\n            }\n        },\n        clearMessages: async (convexMutation)=>{\n            const { sessionId } = get();\n            try {\n                await convexMutation(_convex_generated_api__WEBPACK_IMPORTED_MODULE_0__.api.chat.clearChatHistory, {\n                    sessionId\n                });\n                set({\n                    messages: []\n                });\n            } catch (error) {\n                console.error('Error clearing messages:', error);\n            }\n        },\n        setLoading: (loading)=>{\n            set({\n                isLoading: loading\n            });\n        },\n        setSessionId: (sessionId)=>{\n            // Clear messages when switching sessions\n            set({\n                sessionId,\n                messages: []\n            });\n        }\n    }), {\n    name: 'chat-store',\n    partialize: (state)=>({\n            sessionId: state.sessionId\n        })\n}));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./store/terminal/chat.ts\n"));

/***/ })

});