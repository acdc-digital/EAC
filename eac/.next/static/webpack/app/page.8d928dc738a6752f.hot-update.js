"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/hooks/useProjectSync.ts":
/*!*************************************!*\
  !*** ./lib/hooks/useProjectSync.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useProjectSync: () => (/* binding */ useProjectSync)\n/* harmony export */ });\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/store */ \"(app-pages-browser)/./store/index.ts\");\n/* harmony import */ var _useProjects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useProjects */ \"(app-pages-browser)/./lib/hooks/useProjects.ts\");\n/* harmony import */ var _lib_utils_stateSync__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils/stateSync */ \"(app-pages-browser)/./lib/utils/stateSync.ts\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/**\n * Custom hook for synchronizing projects between Convex and Zustand\n * Provides real-time synchronization and state management utilities\n */ \n\n\n\nconst useProjectSync = ()=>{\n    const { projects, isLoading, error } = (0,_useProjects__WEBPACK_IMPORTED_MODULE_1__.useProjects)();\n    const { createFolder, deleteFolder } = (0,_store__WEBPACK_IMPORTED_MODULE_0__.useEditorStore)();\n    const [lastSyncTime, setLastSyncTime] = react__WEBPACK_IMPORTED_MODULE_3___default().useState(null);\n    const [syncError, setSyncError] = react__WEBPACK_IMPORTED_MODULE_3___default().useState(null);\n    // Get current sync status\n    const syncStatus = react__WEBPACK_IMPORTED_MODULE_3___default().useMemo({\n        \"useProjectSync.useMemo[syncStatus]\": ()=>(0,_lib_utils_stateSync__WEBPACK_IMPORTED_MODULE_2__.getSyncStatus)(projects, isLoading)\n    }[\"useProjectSync.useMemo[syncStatus]\"], [\n        projects,\n        isLoading\n    ]);\n    // Perform automatic sync when projects change\n    react__WEBPACK_IMPORTED_MODULE_3___default().useEffect({\n        \"useProjectSync.useEffect\": ()=>{\n            if (projects && projects.length >= 0 && !isLoading) {\n                try {\n                    (0,_lib_utils_stateSync__WEBPACK_IMPORTED_MODULE_2__.performFullSync)(projects, createFolder, deleteFolder);\n                    setLastSyncTime(new Date());\n                    setSyncError(null);\n                } catch (err) {\n                    const errorMessage = err instanceof Error ? err.message : \"Sync failed\";\n                    setSyncError(errorMessage);\n                    console.error(\"‚ùå Project sync failed:\", err);\n                }\n            }\n        }\n    }[\"useProjectSync.useEffect\"], [\n        projects,\n        isLoading,\n        createFolder,\n        deleteFolder\n    ]);\n    const enhancedSyncStatus = {\n        ...syncStatus,\n        lastSyncTime,\n        error: syncError || error\n    };\n    return {\n        isLoading,\n        syncStatus: enhancedSyncStatus,\n        lastSyncTime,\n        error: syncError || error\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9ob29rcy91c2VQcm9qZWN0U3luYy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7O0NBR0MsR0FFd0M7QUFDRztBQUM0QztBQUM5RDtBQUVuQixNQUFNSyxpQkFBaUI7SUFDNUIsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLFNBQVMsRUFBRUMsS0FBSyxFQUFFLEdBQUdQLHlEQUFXQTtJQUNsRCxNQUFNLEVBQUVRLFlBQVksRUFBRUMsWUFBWSxFQUFFLEdBQUdWLHNEQUFjQTtJQUNyRCxNQUFNLENBQUNXLGNBQWNDLGdCQUFnQixHQUFHUixxREFBYyxDQUFjO0lBQ3BFLE1BQU0sQ0FBQ1UsV0FBV0MsYUFBYSxHQUFHWCxxREFBYyxDQUFnQjtJQUVoRSwwQkFBMEI7SUFDMUIsTUFBTVksYUFBYVosb0RBQWE7OENBQUMsSUFDL0JELG1FQUFhQSxDQUFDRyxVQUFVQzs2Q0FDeEI7UUFBQ0Q7UUFBVUM7S0FBVTtJQUd2Qiw4Q0FBOEM7SUFDOUNILHNEQUFlO29DQUFDO1lBQ2QsSUFBSUUsWUFBWUEsU0FBU2EsTUFBTSxJQUFJLEtBQUssQ0FBQ1osV0FBVztnQkFDbEQsSUFBSTtvQkFDRkwscUVBQWVBLENBQUNJLFVBQVVHLGNBQWNDO29CQUN4Q0UsZ0JBQWdCLElBQUlRO29CQUNwQkwsYUFBYTtnQkFDZixFQUFFLE9BQU9NLEtBQUs7b0JBQ1osTUFBTUMsZUFBZUQsZUFBZUUsUUFBUUYsSUFBSUcsT0FBTyxHQUFHO29CQUMxRFQsYUFBYU87b0JBQ2JHLFFBQVFqQixLQUFLLENBQUMsMEJBQTBCYTtnQkFDMUM7WUFDRjtRQUNGO21DQUFHO1FBQUNmO1FBQVVDO1FBQVdFO1FBQWNDO0tBQWE7SUFFcEQsTUFBTWdCLHFCQUFpQztRQUNyQyxHQUFHVixVQUFVO1FBQ2JMO1FBQ0FILE9BQU9NLGFBQWFOO0lBQ3RCO0lBRUEsT0FBTztRQUNMRDtRQUNBUyxZQUFZVTtRQUNaZjtRQUNBSCxPQUFPTSxhQUFhTjtJQUN0QjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXR0aGV3c2ltb24vUHJvamVjdHMvZWFjL2VhYy9saWIvaG9va3MvdXNlUHJvamVjdFN5bmMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDdXN0b20gaG9vayBmb3Igc3luY2hyb25pemluZyBwcm9qZWN0cyBiZXR3ZWVuIENvbnZleCBhbmQgWnVzdGFuZFxuICogUHJvdmlkZXMgcmVhbC10aW1lIHN5bmNocm9uaXphdGlvbiBhbmQgc3RhdGUgbWFuYWdlbWVudCB1dGlsaXRpZXNcbiAqL1xuXG5pbXBvcnQgeyB1c2VFZGl0b3JTdG9yZSB9IGZyb20gXCJAL3N0b3JlXCI7XG5pbXBvcnQgeyB1c2VQcm9qZWN0cyB9IGZyb20gXCIuL3VzZVByb2plY3RzXCI7XG5pbXBvcnQgeyBwZXJmb3JtRnVsbFN5bmMsIGdldFN5bmNTdGF0dXMsIHR5cGUgU3luY1N0YXR1cyB9IGZyb20gXCJAL2xpYi91dGlscy9zdGF0ZVN5bmNcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuZXhwb3J0IGNvbnN0IHVzZVByb2plY3RTeW5jID0gKCkgPT4ge1xuICBjb25zdCB7IHByb2plY3RzLCBpc0xvYWRpbmcsIGVycm9yIH0gPSB1c2VQcm9qZWN0cygpO1xuICBjb25zdCB7IGNyZWF0ZUZvbGRlciwgZGVsZXRlRm9sZGVyIH0gPSB1c2VFZGl0b3JTdG9yZSgpO1xuICBjb25zdCBbbGFzdFN5bmNUaW1lLCBzZXRMYXN0U3luY1RpbWVdID0gUmVhY3QudXNlU3RhdGU8RGF0ZSB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbc3luY0Vycm9yLCBzZXRTeW5jRXJyb3JdID0gUmVhY3QudXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG5cbiAgLy8gR2V0IGN1cnJlbnQgc3luYyBzdGF0dXNcbiAgY29uc3Qgc3luY1N0YXR1cyA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gXG4gICAgZ2V0U3luY1N0YXR1cyhwcm9qZWN0cywgaXNMb2FkaW5nKSwgXG4gICAgW3Byb2plY3RzLCBpc0xvYWRpbmddXG4gICk7XG5cbiAgLy8gUGVyZm9ybSBhdXRvbWF0aWMgc3luYyB3aGVuIHByb2plY3RzIGNoYW5nZVxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChwcm9qZWN0cyAmJiBwcm9qZWN0cy5sZW5ndGggPj0gMCAmJiAhaXNMb2FkaW5nKSB7XG4gICAgICB0cnkge1xuICAgICAgICBwZXJmb3JtRnVsbFN5bmMocHJvamVjdHMsIGNyZWF0ZUZvbGRlciwgZGVsZXRlRm9sZGVyKTtcbiAgICAgICAgc2V0TGFzdFN5bmNUaW1lKG5ldyBEYXRlKCkpO1xuICAgICAgICBzZXRTeW5jRXJyb3IobnVsbCk7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc3QgZXJyb3JNZXNzYWdlID0gZXJyIGluc3RhbmNlb2YgRXJyb3IgPyBlcnIubWVzc2FnZSA6IFwiU3luYyBmYWlsZWRcIjtcbiAgICAgICAgc2V0U3luY0Vycm9yKGVycm9yTWVzc2FnZSk7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCLinYwgUHJvamVjdCBzeW5jIGZhaWxlZDpcIiwgZXJyKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIFtwcm9qZWN0cywgaXNMb2FkaW5nLCBjcmVhdGVGb2xkZXIsIGRlbGV0ZUZvbGRlcl0pO1xuXG4gIGNvbnN0IGVuaGFuY2VkU3luY1N0YXR1czogU3luY1N0YXR1cyA9IHtcbiAgICAuLi5zeW5jU3RhdHVzLFxuICAgIGxhc3RTeW5jVGltZSxcbiAgICBlcnJvcjogc3luY0Vycm9yIHx8IGVycm9yXG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBpc0xvYWRpbmcsXG4gICAgc3luY1N0YXR1czogZW5oYW5jZWRTeW5jU3RhdHVzLFxuICAgIGxhc3RTeW5jVGltZSxcbiAgICBlcnJvcjogc3luY0Vycm9yIHx8IGVycm9yLFxuICB9O1xufTtcbiJdLCJuYW1lcyI6WyJ1c2VFZGl0b3JTdG9yZSIsInVzZVByb2plY3RzIiwicGVyZm9ybUZ1bGxTeW5jIiwiZ2V0U3luY1N0YXR1cyIsIlJlYWN0IiwidXNlUHJvamVjdFN5bmMiLCJwcm9qZWN0cyIsImlzTG9hZGluZyIsImVycm9yIiwiY3JlYXRlRm9sZGVyIiwiZGVsZXRlRm9sZGVyIiwibGFzdFN5bmNUaW1lIiwic2V0TGFzdFN5bmNUaW1lIiwidXNlU3RhdGUiLCJzeW5jRXJyb3IiLCJzZXRTeW5jRXJyb3IiLCJzeW5jU3RhdHVzIiwidXNlTWVtbyIsInVzZUVmZmVjdCIsImxlbmd0aCIsIkRhdGUiLCJlcnIiLCJlcnJvck1lc3NhZ2UiLCJFcnJvciIsIm1lc3NhZ2UiLCJjb25zb2xlIiwiZW5oYW5jZWRTeW5jU3RhdHVzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/hooks/useProjectSync.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/utils/stateSync.ts":
/*!********************************!*\
  !*** ./lib/utils/stateSync.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearAllPersistedState: () => (/* binding */ clearAllPersistedState),\n/* harmony export */   getSyncStatus: () => (/* binding */ getSyncStatus),\n/* harmony export */   performFullSync: () => (/* binding */ performFullSync),\n/* harmony export */   removeOrphanedZustandFolders: () => (/* binding */ removeOrphanedZustandFolders),\n/* harmony export */   syncConvexProjectsToZustand: () => (/* binding */ syncConvexProjectsToZustand)\n/* harmony export */ });\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/store */ \"(app-pages-browser)/./store/index.ts\");\n/* harmony import */ var _store_projects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/store/projects */ \"(app-pages-browser)/./store/projects/index.ts\");\n/**\n * State Synchronization Utilities\n * Provides utilities for syncing between Convex database and Zustand stores\n */ \n\n/**\n * Clear all persisted state data\n * Call this when you want to reset everything to match the database\n */ function clearAllPersistedState() {\n    console.log(\"üßπ Clearing all persisted state...\");\n    // Clear all localStorage keys used by the app\n    const keysToRemove = [\n        'editor-storage',\n        'project-store',\n        'sidebar-store',\n        'social-store',\n        'terminal-store',\n        'calendar-store',\n        'materials-store',\n        'daily-tracker-store'\n    ];\n    keysToRemove.forEach((key)=>{\n        localStorage.removeItem(key);\n        console.log(\"  ‚úÖ Cleared \".concat(key));\n    });\n    // Reset Zustand stores to initial state\n    _store__WEBPACK_IMPORTED_MODULE_0__.useEditorStore.getState().reset();\n    _store_projects__WEBPACK_IMPORTED_MODULE_1__.useProjectStore.getState().reset();\n    console.log(\"üéâ All persisted state cleared successfully!\");\n    console.log(\"üí° Refresh the page to see the changes\");\n}\n/**\n * Get current sync status between Convex and Zustand\n */ function getSyncStatus(convexProjects, isLoadingProjects) {\n    const { projectFolders } = _store__WEBPACK_IMPORTED_MODULE_0__.useEditorStore.getState();\n    const { projects } = _store_projects__WEBPACK_IMPORTED_MODULE_1__.useProjectStore.getState();\n    var _convexProjects_length;\n    return {\n        isLoading: isLoadingProjects,\n        lastSyncTime: new Date(),\n        convexProjectCount: (_convexProjects_length = convexProjects === null || convexProjects === void 0 ? void 0 : convexProjects.length) !== null && _convexProjects_length !== void 0 ? _convexProjects_length : 0,\n        zustandProjectCount: projects.length,\n        zustandFolderCount: projectFolders.length,\n        error: null\n    };\n}\n/**\n * Sync Convex projects to Zustand editor folders\n * This ensures the sidebar shows projects from the database\n */ function syncConvexProjectsToZustand(convexProjects, createFolder) {\n    const { projectFolders } = _store__WEBPACK_IMPORTED_MODULE_0__.useEditorStore.getState();\n    // Get existing folder names (case-insensitive)\n    const existingFolderNames = new Set(projectFolders.filter((f)=>!f.pinned) // Don't sync over pinned folders like Instructions\n    .map((f)=>f.name.toLowerCase()));\n    // Find projects that exist in Convex but not in Zustand\n    const newProjects = convexProjects.filter((project)=>project.name && !existingFolderNames.has(project.name.toLowerCase()));\n    if (newProjects.length > 0) {\n        console.log(\"\\uD83D\\uDD04 Syncing \".concat(newProjects.length, \" projects from Convex to Zustand:\"), newProjects.map((p)=>p.name));\n        // Add missing projects to editor store\n        newProjects.forEach((project, index)=>{\n            // Use setTimeout to prevent race conditions with ID generation\n            setTimeout(()=>{\n                createFolder(project.name, 'project');\n                console.log(\"  ‚úÖ Added folder: \".concat(project.name));\n            }, index * 50); // 50ms delay between folder creations\n        });\n    }\n}\n/**\n * Remove Zustand folders that don't exist in Convex\n * This cleans up old folders when projects are deleted from the database\n */ function removeOrphanedZustandFolders(convexProjects, deleteFolder) {\n    const { projectFolders } = _store__WEBPACK_IMPORTED_MODULE_0__.useEditorStore.getState();\n    // Get project names from Convex (case-insensitive)\n    const convexProjectNames = new Set(convexProjects.map((p)=>{\n        var _p_name;\n        return (_p_name = p.name) === null || _p_name === void 0 ? void 0 : _p_name.toLowerCase();\n    }).filter(Boolean));\n    // Find folders that exist in Zustand but not in Convex (exclude pinned folders)\n    const orphanedFolders = projectFolders.filter((folder)=>!folder.pinned && folder.category === 'project' && !convexProjectNames.has(folder.name.toLowerCase()));\n    if (orphanedFolders.length > 0) {\n        console.log(\"\\uD83D\\uDDD1Ô∏è Removing \".concat(orphanedFolders.length, \" orphaned folders:\"), orphanedFolders.map((f)=>f.name));\n        orphanedFolders.forEach((folder)=>{\n            deleteFolder(folder.id);\n            console.log(\"  ‚úÖ Removed folder: \".concat(folder.name));\n        });\n    }\n}\n/**\n * Full bidirectional sync between Convex and Zustand\n */ function performFullSync(convexProjects, createFolder, deleteFolder) {\n    console.log(\"üîÑ Performing full sync between Convex and Zustand...\");\n    // Sync new projects from Convex to Zustand\n    syncConvexProjectsToZustand(convexProjects, createFolder);\n    // Remove orphaned folders from Zustand\n    setTimeout(()=>{\n        removeOrphanedZustandFolders(convexProjects, deleteFolder);\n    }, convexProjects.length * 60); // Wait for all folder creations to complete\n    console.log(\"‚úÖ Full sync completed\");\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/utils/stateSync.ts\n"));

/***/ })

});