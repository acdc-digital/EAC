"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./store/editor/index.ts":
/*!*******************************!*\
  !*** ./store/editor/index.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useEditorStore: () => (/* binding */ useEditorStore)\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/../node_modules/.pnpm/zustand@5.0.6_@types+react@19.1.8_react@19.1.0_use-sync-external-store@1.5.0_react@19.1.0_/node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/../node_modules/.pnpm/zustand@5.0.6_@types+react@19.1.8_react@19.1.0_use-sync-external-store@1.5.0_react@19.1.0_/node_modules/zustand/esm/middleware.mjs\");\n/* harmony import */ var _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! __barrel_optimize__?names=Braces,FileCode,FileSpreadsheet,FileText,FileType!=!lucide-react */ \"(app-pages-browser)/../node_modules/.pnpm/lucide-react@0.525.0_react@19.1.0/node_modules/lucide-react/dist/esm/icons/file-code.js\");\n/* harmony import */ var _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! __barrel_optimize__?names=Braces,FileCode,FileSpreadsheet,FileText,FileType!=!lucide-react */ \"(app-pages-browser)/../node_modules/.pnpm/lucide-react@0.525.0_react@19.1.0/node_modules/lucide-react/dist/esm/icons/braces.js\");\n/* harmony import */ var _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=Braces,FileCode,FileSpreadsheet,FileText,FileType!=!lucide-react */ \"(app-pages-browser)/../node_modules/.pnpm/lucide-react@0.525.0_react@19.1.0/node_modules/lucide-react/dist/esm/icons/file-spreadsheet.js\");\n/* harmony import */ var _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=Braces,FileCode,FileSpreadsheet,FileText,FileType!=!lucide-react */ \"(app-pages-browser)/../node_modules/.pnpm/lucide-react@0.525.0_react@19.1.0/node_modules/lucide-react/dist/esm/icons/file-text.js\");\n/* harmony import */ var _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Braces,FileCode,FileSpreadsheet,FileText,FileType!=!lucide-react */ \"(app-pages-browser)/../node_modules/.pnpm/lucide-react@0.525.0_react@19.1.0/node_modules/lucide-react/dist/esm/icons/file-type.js\");\n// Editor Store\n// /Users/matthewsimon/Projects/EAC/eac/store/editor/index.ts\n\n\n\n// Helper function to get icon based on file type\nconst getFileIcon = (type)=>{\n    switch(type){\n        case 'typescript':\n            return _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n        case 'javascript':\n            return _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n        case 'json':\n            return _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n        case 'excel':\n            return _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n        case 'markdown':\n            return _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n        case 'pdf':\n            return _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\n        case 'generals':\n            return _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n        default:\n            return _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    }\n};\n// Helper function to get file extension\nconst getFileExtension = (type)=>{\n    switch(type){\n        case 'typescript':\n            return '.tsx';\n        case 'javascript':\n            return '.js';\n        case 'json':\n            return '.json';\n        case 'excel':\n            return '.xlsx';\n        case 'markdown':\n            return '.md';\n        case 'pdf':\n            return '.pdf';\n        case 'generals':\n            return '.generals';\n        default:\n            return '.txt';\n    }\n};\n// Helper function to generate default content for new files\nconst getDefaultContent = (type, name)=>{\n    switch(type){\n        case 'typescript':\n            return \"// \".concat(name, \"\\n// Auto-generated TypeScript file\\n\\nimport React from 'react';\\n\\ninterface \").concat(name.replace(/[^a-zA-Z0-9]/g, ''), \"Props {\\n  // Define props here\\n}\\n\\nexport function \").concat(name.replace(/[^a-zA-Z0-9]/g, ''), \"({ }: \").concat(name.replace(/[^a-zA-Z0-9]/g, ''), 'Props) {\\n  return (\\n    <div className=\"p-4\">\\n      <h1 className=\"text-xl font-bold\">New Component: ').concat(name, '</h1>\\n      <p className=\"text-gray-600\">Start building your component here...</p>\\n    </div>\\n  );\\n}');\n        case 'javascript':\n            return \"// \".concat(name, \"\\n// Auto-generated JavaScript file\\n\\nexport function \").concat(name.replace(/[^a-zA-Z0-9]/g, ''), \"() {\\n  return {\\n    message: 'Hello from \").concat(name, \"!',\\n    data: []\\n  };\\n}\");\n        case 'json':\n            return '{\\n  \"name\": \"'.concat(name, '\",\\n  \"description\": \"Auto-generated JSON file\",\\n  \"version\": \"1.0.0\",\\n  \"data\": {}\\n}');\n        case 'markdown':\n            return \"# \".concat(name, \"\\n\\n## Overview\\n\\nThis is a new markdown file created in the EAC Dashboard.\\n\\n## TODO\\n\\n- [ ] Add content\\n- [ ] Update documentation\\n- [ ] Review and finalize\");\n        case 'generals':\n            return \"// \".concat(name, \" - Project General Information\\n// This file contains general project details and financial information\\n// Created on: \").concat(new Date().toISOString(), \"\\n\\nProject: \").concat(name, \"\\nStatus: Active\\nCreated: \").concat(new Date().toLocaleDateString(), \"\\n\\n// This file will display the project generals module interface\");\n        default:\n            return \"# \".concat(name, \"\\n\\nThis is a new file created in the EAC Dashboard.\\nCreated on: \").concat(new Date().toISOString());\n    }\n};\n// Initial project files\nconst initialProjectFiles = [\n    {\n        id: 'budget-2024',\n        name: 'Q4-Budget-2024.xlsx',\n        icon: _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n        type: 'excel',\n        category: 'project',\n        content: '// Excel file content placeholder',\n        filePath: '/eac-projects/Q4-Budget-2024.xlsx',\n        createdAt: new Date('2024-01-01'),\n        modifiedAt: new Date('2024-01-15')\n    },\n    {\n        id: 'marketing-roi',\n        name: 'Marketing-ROI.tsx',\n        icon: _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n        type: 'typescript',\n        category: 'project',\n        content: '// Marketing ROI Component\\nimport React from \\'react\\';\\n\\nexport function MarketingROI() {\\n  return (\\n    <div className=\"p-4\">\\n      <h2 className=\"text-lg font-semibold\">Marketing ROI Analysis</h2>\\n      <p>ROI: 245%</p>\\n    </div>\\n  );\\n}',\n        filePath: '/eac-projects/Marketing-ROI.tsx',\n        createdAt: new Date('2024-01-05'),\n        modifiedAt: new Date('2024-01-20')\n    },\n    {\n        id: 'revenue-analysis',\n        name: 'Revenue-Analysis.json',\n        icon: _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n        type: 'json',\n        category: 'project',\n        content: '{\\n  \"quarter\": \"Q4 2024\",\\n  \"revenue\": {\\n    \"total\": 189500,\\n    \"growth\": 12.3,\\n    \"breakdown\": {\\n      \"recurring\": 145000,\\n      \"new_business\": 44500\\n    }\\n  }\\n}',\n        filePath: '/eac-projects/Revenue-Analysis.json',\n        createdAt: new Date('2024-01-10'),\n        modifiedAt: new Date('2024-01-25')\n    },\n    {\n        id: 'expense-report',\n        name: 'Expense-Report.pdf',\n        icon: _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n        type: 'pdf',\n        category: 'project',\n        content: '// PDF file content placeholder',\n        filePath: '/eac-projects/Expense-Report.pdf',\n        createdAt: new Date('2024-01-12'),\n        modifiedAt: new Date('2024-01-22')\n    }\n];\n// Initial financial files\nconst initialFinancialFiles = [\n    {\n        id: 'current-month-report',\n        name: 'Current-Month-Report.json',\n        icon: _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n        type: 'json',\n        category: 'financial',\n        content: '{\\n  \"month\": \"January 2024\",\\n  \"revenue\": {\\n    \"total\": 47382.50,\\n    \"growth\": 12.3,\\n    \"sources\": {\\n      \"subscriptions\": 35000,\\n      \"one_time\": 12382.50\\n    }\\n  },\\n  \"expenses\": {\\n    \"total\": 23451.20,\\n    \"breakdown\": {\\n      \"payroll\": 18000,\\n      \"marketing\": 3200,\\n      \"operations\": 2251.20\\n    }\\n  },\\n  \"profit\": 23931.30\\n}',\n        filePath: '/financial-data/Current-Month-Report.json',\n        createdAt: new Date('2024-01-01'),\n        modifiedAt: new Date('2024-01-31')\n    },\n    {\n        id: 'quarterly-forecast',\n        name: 'Q1-Forecast-2024.xlsx',\n        icon: _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n        type: 'excel',\n        category: 'financial',\n        content: '// Excel forecasting model with quarterly projections',\n        filePath: '/financial-data/Q1-Forecast-2024.xlsx',\n        createdAt: new Date('2024-01-01'),\n        modifiedAt: new Date('2024-01-15')\n    },\n    {\n        id: 'annual-summary',\n        name: 'Annual-Summary-2023.pdf',\n        icon: _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n        type: 'pdf',\n        category: 'financial',\n        content: '// Annual financial summary report',\n        filePath: '/financial-data/Annual-Summary-2023.pdf',\n        createdAt: new Date('2023-12-31'),\n        modifiedAt: new Date('2024-01-05')\n    },\n    {\n        id: 'budget-tracker',\n        name: 'Budget-Tracker.tsx',\n        icon: _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n        type: 'typescript',\n        category: 'financial',\n        content: \"// Budget Tracker Component\\nimport React from 'react';\\n\\nexport function BudgetTracker() {\\n  const budgets = [\\n    { category: 'Marketing', allocated: 15000, spent: 12500 },\\n    { category: 'Operations', allocated: 25000, spent: 18200 },\\n    { category: 'Development', allocated: 30000, spent: 28500 },\\n  ];\\n\\n  return (\\n    <div className=\\\"p-4\\\">\\n      <h2 className=\\\"text-lg font-semibold\\\">Budget Tracker</h2>\\n      <div className=\\\"space-y-2 mt-4\\\">\\n        {budgets.map((budget, index) => (\\n          <div key={index} className=\\\"flex justify-between\\\">\\n            <span>{budget.category}</span>\\n            <span>${budget.spent} / ${budget.allocated}</span>\\n          </div>\\n        ))}\\n      </div>\\n    </div>\\n  );\\n}\",\n        filePath: '/financial-data/Budget-Tracker.tsx',\n        createdAt: new Date('2024-01-10'),\n        modifiedAt: new Date('2024-01-28')\n    }\n];\nconst useEditorStore = (0,zustand__WEBPACK_IMPORTED_MODULE_5__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_6__.devtools)((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_6__.persist)((set, get)=>({\n        // Initial state\n        openTabs: [],\n        activeTab: '',\n        projectFiles: initialProjectFiles,\n        financialFiles: initialFinancialFiles,\n        projectFolders: [],\n        financialFolders: [],\n        showProjectsCategory: true,\n        showFinancialCategory: true,\n        isLoading: false,\n        error: null,\n        // Actions\n        openTab: (file)=>{\n            const { openTabs } = get();\n            // Check if tab is already open\n            const existingTab = openTabs.find((tab)=>tab.id === file.id);\n            if (existingTab) {\n                set({\n                    activeTab: existingTab.id\n                });\n                return;\n            }\n            // Create new tab\n            const newTab = {\n                id: file.id,\n                name: file.name,\n                icon: file.icon,\n                modified: false,\n                content: file.content,\n                filePath: file.filePath,\n                type: file.type\n            };\n            set({\n                openTabs: [\n                    ...openTabs,\n                    newTab\n                ],\n                activeTab: newTab.id\n            });\n        },\n        closeTab: (tabId)=>{\n            const { openTabs, activeTab } = get();\n            const tabIndex = openTabs.findIndex((tab)=>tab.id === tabId);\n            if (tabIndex === -1) return;\n            const newTabs = openTabs.filter((tab)=>tab.id !== tabId);\n            let newActiveTab = activeTab;\n            // If closing the active tab, switch to another tab\n            if (activeTab === tabId) {\n                if (newTabs.length > 0) {\n                    // Switch to the tab to the right, or the last tab if closing the last one\n                    const nextIndex = tabIndex < newTabs.length ? tabIndex : newTabs.length - 1;\n                    newActiveTab = newTabs[nextIndex].id;\n                } else {\n                    newActiveTab = '';\n                }\n            }\n            set({\n                openTabs: newTabs,\n                activeTab: newActiveTab\n            });\n        },\n        setActiveTab: (tabId)=>{\n            const { openTabs } = get();\n            const tabExists = openTabs.some((tab)=>tab.id === tabId);\n            if (tabExists) {\n                set({\n                    activeTab: tabId\n                });\n            }\n        },\n        updateTabContent: (tabId, content)=>{\n            const { openTabs } = get();\n            const updatedTabs = openTabs.map((tab)=>tab.id === tabId ? {\n                    ...tab,\n                    content,\n                    modified: true\n                } : tab);\n            set({\n                openTabs: updatedTabs\n            });\n        },\n        updateFileContent: (tabId, content)=>{\n            const { openTabs } = get();\n            const updatedTabs = openTabs.map((tab)=>tab.id === tabId ? {\n                    ...tab,\n                    content,\n                    modified: true\n                } : tab);\n            set({\n                openTabs: updatedTabs\n            });\n        },\n        createNewFile: function(name, type) {\n            let category = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 'project', folderId = arguments.length > 3 ? arguments[3] : void 0;\n            const { projectFiles, financialFiles } = get();\n            // Generate unique ID\n            const id = \"\".concat(name.toLowerCase().replace(/[^a-z0-9]/g, '-'), \"-\").concat(Date.now());\n            const fileName = \"\".concat(name).concat(getFileExtension(type));\n            const basePath = category === 'financial' ? '/financial-data' : '/eac-projects';\n            // Create new file\n            const newFile = {\n                id,\n                name: fileName,\n                icon: getFileIcon(type),\n                type,\n                category,\n                content: getDefaultContent(type, name),\n                filePath: \"\".concat(basePath, \"/\").concat(fileName),\n                createdAt: new Date(),\n                modifiedAt: new Date(),\n                folderId\n            };\n            // Add to appropriate file array\n            if (category === 'financial') {\n                set({\n                    financialFiles: [\n                        ...financialFiles,\n                        newFile\n                    ]\n                });\n            } else {\n                set({\n                    projectFiles: [\n                        ...projectFiles,\n                        newFile\n                    ]\n                });\n            }\n            // Automatically open the new file\n            get().openTab(newFile);\n        },\n        createFolder: (name, category)=>{\n            const { projectFolders, financialFolders } = get();\n            // Generate unique ID\n            const id = \"folder-\".concat(name.toLowerCase().replace(/[^a-z0-9]/g, '-'), \"-\").concat(Date.now());\n            // Create new folder\n            const newFolder = {\n                id,\n                name,\n                category,\n                createdAt: new Date()\n            };\n            // Add to appropriate folder array\n            if (category === 'financial') {\n                set({\n                    financialFolders: [\n                        ...financialFolders,\n                        newFolder\n                    ]\n                });\n            } else {\n                set({\n                    projectFolders: [\n                        ...projectFolders,\n                        newFolder\n                    ]\n                });\n            }\n        },\n        deleteFile: (fileId)=>{\n            const { projectFiles, financialFiles, openTabs } = get();\n            // Find and remove from appropriate array\n            const updatedProjectFiles = projectFiles.filter((file)=>file.id !== fileId);\n            const updatedFinancialFiles = financialFiles.filter((file)=>file.id !== fileId);\n            // Close tab if it's open\n            const tabToClose = openTabs.find((tab)=>tab.id === fileId);\n            if (tabToClose) {\n                get().closeTab(fileId);\n            }\n            set({\n                projectFiles: updatedProjectFiles,\n                financialFiles: updatedFinancialFiles\n            });\n        },\n        deleteFolder: (folderId)=>{\n            const { projectFolders, financialFolders, projectFiles, financialFiles } = get();\n            // Remove from appropriate folder array\n            const updatedProjectFolders = projectFolders.filter((folder)=>folder.id !== folderId);\n            const updatedFinancialFolders = financialFolders.filter((folder)=>folder.id !== folderId);\n            // Also remove any files that were in this folder\n            const updatedProjectFiles = projectFiles.filter((file)=>file.folderId !== folderId);\n            const updatedFinancialFiles = financialFiles.filter((file)=>file.folderId !== folderId);\n            set({\n                projectFolders: updatedProjectFolders,\n                financialFolders: updatedFinancialFolders,\n                projectFiles: updatedProjectFiles,\n                financialFiles: updatedFinancialFiles\n            });\n        },\n        clearProjectCategory: ()=>{\n            const { openTabs } = get();\n            // Close all project-related tabs\n            const projectTabIds = openTabs.filter((tab)=>{\n                // Find the corresponding file to check its category\n                const { projectFiles } = get();\n                const file = projectFiles.find((f)=>f.id === tab.id);\n                return (file === null || file === void 0 ? void 0 : file.category) === 'project';\n            }).map((tab)=>tab.id);\n            projectTabIds.forEach((tabId)=>get().closeTab(tabId));\n            // Clear all project files and folders\n            set({\n                projectFiles: [],\n                projectFolders: []\n            });\n        },\n        clearFinancialCategory: ()=>{\n            const { openTabs } = get();\n            // Close all financial-related tabs\n            const financialTabIds = openTabs.filter((tab)=>{\n                // Find the corresponding file to check its category\n                const { financialFiles } = get();\n                const file = financialFiles.find((f)=>f.id === tab.id);\n                return (file === null || file === void 0 ? void 0 : file.category) === 'financial';\n            }).map((tab)=>tab.id);\n            financialTabIds.forEach((tabId)=>get().closeTab(tabId));\n            // Clear all financial files and folders\n            set({\n                financialFiles: [],\n                financialFolders: []\n            });\n        },\n        deleteProjectsCategory: ()=>{\n            get().clearProjectCategory();\n            set({\n                showProjectsCategory: false\n            });\n        },\n        deleteFinancialCategory: ()=>{\n            get().clearFinancialCategory();\n            set({\n                showFinancialCategory: false\n            });\n        },\n        saveFile: (tabId)=>{\n            const { openTabs, projectFiles, financialFiles } = get();\n            const tab = openTabs.find((t)=>t.id === tabId);\n            if (!tab) return;\n            // Update the file content in appropriate array\n            const updatedProjectFiles = projectFiles.map((file)=>file.id === tabId ? {\n                    ...file,\n                    content: tab.content,\n                    modifiedAt: new Date()\n                } : file);\n            const updatedFinancialFiles = financialFiles.map((file)=>file.id === tabId ? {\n                    ...file,\n                    content: tab.content,\n                    modifiedAt: new Date()\n                } : file);\n            const updatedTabs = openTabs.map((t)=>t.id === tabId ? {\n                    ...t,\n                    modified: false\n                } : t);\n            set({\n                projectFiles: updatedProjectFiles,\n                financialFiles: updatedFinancialFiles,\n                openTabs: updatedTabs\n            });\n        },\n        setError: (error)=>{\n            set({\n                error\n            });\n        },\n        reset: ()=>{\n            set({\n                openTabs: [],\n                activeTab: '',\n                projectFiles: initialProjectFiles,\n                financialFiles: initialFinancialFiles,\n                projectFolders: [],\n                financialFolders: [],\n                isLoading: false,\n                error: null\n            });\n        }\n    }), {\n    name: 'editor-storage',\n    // Only persist specific fields\n    partialize: (state)=>({\n            openTabs: state.openTabs.map((tab)=>({\n                    id: tab.id,\n                    name: tab.name,\n                    modified: tab.modified,\n                    content: tab.content,\n                    filePath: tab.filePath,\n                    type: tab.type\n                })),\n            activeTab: state.activeTab,\n            projectFiles: state.projectFiles,\n            financialFiles: state.financialFiles,\n            projectFolders: state.projectFolders,\n            financialFolders: state.financialFolders,\n            showProjectsCategory: state.showProjectsCategory,\n            showFinancialCategory: state.showFinancialCategory\n        }),\n    // Custom storage to handle icon restoration\n    storage: {\n        getItem: (name)=>{\n            const str = localStorage.getItem(name);\n            if (!str) return null;\n            const { state } = JSON.parse(str);\n            // Restore icons based on file type\n            const restoredTabs = (state.openTabs || []).map((tab)=>{\n                let icon = _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n                switch(tab.type){\n                    case 'typescript':\n                    case 'javascript':\n                        icon = _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n                        break;\n                    case 'json':\n                        icon = _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n                        break;\n                    case 'excel':\n                        icon = _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n                        break;\n                    case 'markdown':\n                        icon = _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n                        break;\n                    case 'pdf':\n                        icon = _barrel_optimize_names_Braces_FileCode_FileSpreadsheet_FileText_FileType_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\n                        break;\n                }\n                return {\n                    ...tab,\n                    icon\n                };\n            });\n            return {\n                state: {\n                    ...state,\n                    openTabs: restoredTabs\n                }\n            };\n        },\n        setItem: (name, value)=>{\n            localStorage.setItem(name, JSON.stringify(value));\n        },\n        removeItem: (name)=>localStorage.removeItem(name)\n    }\n}), {\n    name: 'editor-store'\n}));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./store/editor/index.ts\n"));

/***/ })

});