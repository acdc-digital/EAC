"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/api/imagen.ts":
/*!***************************!*\
  !*** ./lib/api/imagen.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateLogoWithImagen: () => (/* binding */ generateLogoWithImagen),\n/* harmony export */   optimizeLogoPrompt: () => (/* binding */ optimizeLogoPrompt)\n/* harmony export */ });\n// Google Imagen API Integration\n// /Users/matthewsimon/Projects/eac/eac/lib/api/imagen.ts\n/**\n * Generate a logo using Google's Imagen model\n */ async function generateLogoWithImagen(prompt) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    try {\n        // TODO: Replace with actual Google Imagen API integration\n        // For now, return a mock response\n        console.log('üé® Generating logo with Imagen:', prompt);\n        // Mock generation delay\n        await new Promise((resolve)=>setTimeout(resolve, 3000));\n        // For development, return a placeholder/mock response\n        const mockImageData = generateMockLogoBase64();\n        const imageUrl = \"data:image/svg+xml;base64,\".concat(mockImageData);\n        console.log('üé® Mock logo generated:', {\n            imageUrl: imageUrl.substring(0, 50) + '...',\n            prompt\n        });\n        return {\n            imageUrl,\n            imageData: mockImageData,\n            prompt,\n            success: true\n        };\n    /* \n    // REAL IMPLEMENTATION (uncomment when ready to integrate)\n    const apiKey = process.env.GOOGLE_CLOUD_API_KEY;\n    if (!apiKey) {\n      throw new Error('Google Cloud API key not configured');\n    }\n\n    const requestData = {\n      instances: [{\n        prompt: prompt,\n        sampleCount: 1,\n        aspectRatio: options.aspectRatio || 'ASPECT_RATIO_1_1',\n        negativePrompt: options.negativePrompt || 'blurry, low quality, distorted, text overlay',\n        addWatermark: options.addWatermark ?? false,\n        seed: options.seed,\n        outputOptions: {\n          mimeType: options.outputMimeType || 'image/png'\n        }\n      }]\n    };\n\n    const response = await fetch(\n      `https://us-central1-aiplatform.googleapis.com/v1/projects/${process.env.GOOGLE_CLOUD_PROJECT_ID}/locations/us-central1/publishers/google/models/imagen-3.0-generate-001:predict`,\n      {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${apiKey}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestData)\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`Imagen API error: ${response.status} ${response.statusText}`);\n    }\n\n    const result: ImagenGenerationResponse = await response.json();\n    \n    if (!result.images || result.images.length === 0) {\n      throw new Error('No images generated');\n    }\n\n    const imageData = result.images[0].bytesBase64Encoded;\n    const imageUrl = `data:${result.images[0].mimeType};base64,${imageData}`;\n\n    return {\n      imageUrl,\n      imageData,\n      prompt,\n      success: true\n    };\n    */ } catch (error) {\n        console.error('‚ùå Logo generation failed:', error);\n        return {\n            imageUrl: '',\n            imageData: '',\n            prompt,\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n        };\n    }\n}\n/**\n * Generate a mock logo for development/testing\n */ function generateMockLogoBase64() {\n    // This creates a simple SVG logo as base64 for testing\n    const svgLogo = '\\n    <svg width=\"200\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\\n      <rect width=\"200\" height=\"100\" fill=\"#000000\"/>\\n      <text x=\"100\" y=\"45\" font-family=\"Arial, sans-serif\" font-size=\"24\" font-weight=\"bold\" text-anchor=\"middle\" fill=\"#ffffff\">AMCP</text>\\n      <text x=\"100\" y=\"70\" font-family=\"Arial, sans-serif\" font-size=\"10\" text-anchor=\"middle\" fill=\"#cccccc\">AUDIENCE MANAGEMENT</text>\\n      <circle cx=\"20\" cy=\"20\" r=\"8\" fill=\"#ffcc02\"/>\\n      <circle cx=\"180\" cy=\"80\" r=\"6\" fill=\"#ffcc02\"/>\\n    </svg>\\n  ';\n    // Convert SVG to base64 (browser-safe)\n    if (true) {\n        return btoa(svgLogo);\n    } else {}\n}\n/**\n * Optimize prompt for logo generation\n */ function optimizeLogoPrompt(companyName, businessDescription, style, colors, logoType, targetAudience, additionalInstructions) {\n    let prompt = 'Professional logo design for \"'.concat(companyName, '\"');\n    if (businessDescription) {\n        prompt += \", \".concat(businessDescription);\n    }\n    // Style specifications\n    const styleMap = {\n        minimalist: 'clean, simple, minimal design with negative space',\n        modern: 'contemporary, sleek, geometric, futuristic elements',\n        traditional: 'classic, established, timeless, professional',\n        playful: 'fun, creative, approachable, dynamic',\n        elegant: 'sophisticated, refined, luxury, premium',\n        bold: 'strong, impactful, confident, powerful'\n    };\n    prompt += \". Style: \".concat(styleMap[style] || style);\n    // Logo type\n    if (logoType === 'text') {\n        prompt += '. Text-only logo with stylized typography, no icons or symbols';\n    } else if (logoType === 'icon') {\n        prompt += '. Icon-only logo, symbolic design, no text';\n    } else {\n        prompt += '. Combination logo with both company name text and complementary icon';\n    }\n    // Colors\n    if (colors && !colors.toLowerCase().includes('no preference')) {\n        prompt += \". Color scheme: \".concat(colors);\n    } else {\n        prompt += '. Professional color scheme suitable for business use';\n    }\n    // Target audience consideration\n    if (targetAudience) {\n        prompt += \". Designed for \".concat(targetAudience);\n    }\n    // Additional instructions\n    if (additionalInstructions) {\n        prompt += \". \".concat(additionalInstructions);\n    }\n    // Quality and format specifications\n    prompt += '. Vector-style design, clean background, scalable, professional quality, business-appropriate, modern branding';\n    return prompt;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api/imagen.ts\n"));

/***/ })

});