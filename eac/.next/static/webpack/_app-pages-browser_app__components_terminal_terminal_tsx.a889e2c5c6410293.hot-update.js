"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_app__components_terminal_terminal_tsx",{

/***/ "(app-pages-browser)/./app/_components/terminal/_components/chatMessages.tsx":
/*!***************************************************************!*\
  !*** ./app/_components/terminal/_components/chatMessages.tsx ***!
  \***************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatMessages: () => (/* binding */ ChatMessages)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/../node_modules/.pnpm/next@15.3.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _convex_generated_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/convex/_generated/api */ \"(app-pages-browser)/./convex/_generated/api.js\");\n/* harmony import */ var _lib_chatCommands__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/chatCommands */ \"(app-pages-browser)/./lib/chatCommands.ts\");\n/* harmony import */ var _lib_hooks_useChat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/hooks/useChat */ \"(app-pages-browser)/./lib/hooks/useChat.ts\");\n/* harmony import */ var _lib_hooks_useInstructions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/hooks/useInstructions */ \"(app-pages-browser)/./lib/hooks/useInstructions.ts\");\n/* harmony import */ var _lib_hooks_useMCP__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/hooks/useMCP */ \"(app-pages-browser)/./lib/hooks/useMCP.ts\");\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/store */ \"(app-pages-browser)/./store/index.ts\");\n/* harmony import */ var _store_terminal_chat__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/store/terminal/chat */ \"(app-pages-browser)/./store/terminal/chat.ts\");\n/* harmony import */ var _store_terminal_session__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/store/terminal/session */ \"(app-pages-browser)/./store/terminal/session.ts\");\n/* harmony import */ var _clerk_nextjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @clerk/nextjs */ \"(app-pages-browser)/../node_modules/.pnpm/@clerk+clerk-react@5.38.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@clerk/clerk-react/dist/index.mjs\");\n/* harmony import */ var convex_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! convex/react */ \"(app-pages-browser)/../node_modules/.pnpm/convex@1.25.4_@clerk+clerk-react@5.38.0_react-dom@18.3.1_react@18.3.1__react@18.3.1__react@18.3.1/node_modules/convex/dist/esm/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../node_modules/.pnpm/next@15.3.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _toolSelector__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./toolSelector */ \"(app-pages-browser)/./app/_components/terminal/_components/toolSelector.tsx\");\n/* harmony import */ var _toolsToggle__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./toolsToggle */ \"(app-pages-browser)/./app/_components/terminal/_components/toolsToggle.tsx\");\n// Chat Messages Component with Convex and MCP Integration\n// /Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\n/* __next_internal_client_entry_do_not_use__ ChatMessages auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction ChatMessages() {\n    var _agents_find, _agents_find1;\n    _s();\n    const scrollRef = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);\n    const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);\n    const [message, setMessage] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(\"\");\n    const [showCommandHints, setShowCommandHints] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);\n    const [showMCPTools, setShowMCPTools] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);\n    const [selectedToolIndex, setSelectedToolIndex] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(-1);\n    const [toolsMode, setToolsMode] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)('agents');\n    const [showToolSelector, setShowToolSelector] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);\n    const [selectedSelectorIndex, setSelectedSelectorIndex] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(0);\n    const { user, isLoaded } = (0,_clerk_nextjs__WEBPACK_IMPORTED_MODULE_13__.useUser)();\n    const { initializeUserSession, addTerminalFeedback, setSessionId, loadMessagesForSession } = (0,_store_terminal_chat__WEBPACK_IMPORTED_MODULE_7__.useChatStore)();\n    const { activeSessionId } = (0,_store_terminal_session__WEBPACK_IMPORTED_MODULE_8__.useSessionStore)();\n    const { messages, isLoading: chatLoading, sendMessage, sessionId, storeChatMessage, addTerminalFeedback: useTerminalFeedback, messageCount, isNearSessionLimit, isAtSessionLimit, canAddMessages, getSessionStatus, startNewSession } = (0,_lib_hooks_useChat__WEBPACK_IMPORTED_MODULE_3__.useChat)();\n    const { isConnected: mcpConnected, isLoading: mcpLoading, error: mcpError, processNaturalLanguage, availableTools } = (0,_lib_hooks_useMCP__WEBPACK_IMPORTED_MODULE_5__.useMCP)();\n    const { agents, activeAgentId, executeAgentTool, setActiveAgent } = (0,_store__WEBPACK_IMPORTED_MODULE_6__.useAgentStore)();\n    const { createInstruction, ensureInstructionsProject } = (0,_lib_hooks_useInstructions__WEBPACK_IMPORTED_MODULE_4__.useInstructions)();\n    const instructionContext = (0,_lib_hooks_useInstructions__WEBPACK_IMPORTED_MODULE_4__.useInstructionContext)();\n    // Convex mutations for social posts\n    const upsertPost = (0,convex_react__WEBPACK_IMPORTED_MODULE_9__.useMutation)(_convex_generated_api__WEBPACK_IMPORTED_MODULE_1__.api.socialPosts.upsertPost);\n    const getChatMessages = convex_react__WEBPACK_IMPORTED_MODULE_9__.useQuery;\n    const isLoading = chatLoading || mcpLoading;\n    // Initialize user-specific session when user is loaded\n    (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)({\n        \"ChatMessages.useEffect\": ()=>{\n            if (isLoaded && (user === null || user === void 0 ? void 0 : user.id)) {\n                initializeUserSession(user.id);\n            }\n        }\n    }[\"ChatMessages.useEffect\"], [\n        isLoaded,\n        user === null || user === void 0 ? void 0 : user.id,\n        initializeUserSession\n    ]);\n    // Handle session changes - update chat store session ID when active session changes\n    (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)({\n        \"ChatMessages.useEffect\": ()=>{\n            if (activeSessionId && activeSessionId !== sessionId) {\n                setSessionId(activeSessionId);\n            }\n        }\n    }[\"ChatMessages.useEffect\"], [\n        activeSessionId,\n        sessionId,\n        setSessionId\n    ]);\n    // Helper function to strip markdown formatting and convert to plain text\n    const stripMarkdown = (text)=>{\n        return text.replace(/^#{1,6}\\s+/gm, '') // Remove # headers\n        .replace(/\\*\\*(.*?)\\*\\*/g, '$1') // Remove **bold**\n        .replace(/\\*(.*?)\\*/g, '$1') // Remove *italic*\n        .replace(/`([^`]+)`/g, '$1') // Remove `code`\n        .replace(/^\\s*[-*+]\\s+/gm, '• ') // Convert markdown lists to bullet points\n        .replace(/^\\s*\\d+\\.\\s+/gm, '• ') // Convert numbered lists to bullet points\n        .replace(/\\n\\s*\\n\\s*\\n/g, '\\n\\n') // Reduce multiple blank lines to double\n        .split('\\n') // Split into lines for processing\n        .map((line)=>{\n            // Add spacing after section headers (lines that don't start with bullet points)\n            if (line.trim() && !line.startsWith('•') && !line.startsWith(' ') && line.length > 0) {\n                return line + '\\n'; // Add extra newline after headers\n            }\n            return line;\n        }).join('\\n').replace(/\\n{3,}/g, '\\n\\n') // Clean up excessive newlines\n        .trim();\n    };\n    // Show command hints when user types '/'\n    (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)({\n        \"ChatMessages.useEffect\": ()=>{\n            setShowCommandHints(message.startsWith('/') && message.length > 1);\n        }\n    }[\"ChatMessages.useEffect\"], [\n        message\n    ]);\n    // Filter commands based on input\n    const filteredCommands = _lib_chatCommands__WEBPACK_IMPORTED_MODULE_2__.chatCommands.filter((cmd)=>message.length > 1 && cmd.command.toLowerCase().includes(message.toLowerCase()));\n    // Auto-scroll to bottom when new messages arrive\n    (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)({\n        \"ChatMessages.useEffect\": ()=>{\n            if (scrollRef.current) {\n                scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n            }\n        }\n    }[\"ChatMessages.useEffect\"], [\n        messages,\n        isLoading\n    ]);\n    // Auto-focus input on mount and after messages\n    (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)({\n        \"ChatMessages.useEffect\": ()=>{\n            if (inputRef.current && !isLoading) {\n                inputRef.current.focus();\n            }\n        }\n    }[\"ChatMessages.useEffect\"], [\n        isLoading\n    ]);\n    // Debug: Log messages when they change\n    (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)({\n        \"ChatMessages.useEffect\": ()=>{\n            console.log(\"🖥️ Messages updated:\", {\n                totalMessages: (messages === null || messages === void 0 ? void 0 : messages.length) || 0,\n                messageTypes: (messages === null || messages === void 0 ? void 0 : messages.map({\n                    \"ChatMessages.useEffect\": (m)=>m.role\n                }[\"ChatMessages.useEffect\"])) || [],\n                terminalMessages: (messages === null || messages === void 0 ? void 0 : messages.filter({\n                    \"ChatMessages.useEffect\": (m)=>m.role === 'terminal'\n                }[\"ChatMessages.useEffect\"]).length) || 0,\n                lastMessage: messages === null || messages === void 0 ? void 0 : messages[messages.length - 1],\n                sessionId,\n                sessionStatus: getSessionStatus().status,\n                limit: '500 messages'\n            });\n        }\n    }[\"ChatMessages.useEffect\"], [\n        messages,\n        sessionId,\n        getSessionStatus\n    ]);\n    // Helper function to detect MCP-related queries (excluding direct tool commands)\n    const isMCPQuery = (input)=>{\n        // Don't treat direct tool commands as NLP queries\n        if (input.startsWith('/') && input.includes('eac_')) {\n            return false;\n        }\n        // Skip simple greetings and short messages\n        const msg = input.toLowerCase().trim();\n        if (msg.length < 10 || [\n            'hi',\n            'hello',\n            'hey',\n            'thanks',\n            'thank you',\n            'ok',\n            'okay',\n            'yes',\n            'no'\n        ].includes(msg) || msg.match(/^(hi|hello|hey|thanks?|ok|okay|yes|no)[!.?]*$/)) {\n            return false;\n        }\n        // Only trigger on very specific, explicit requests\n        const explicitMCPPatterns = [\n            /analyze.+(reddit|project|workflow|integration)/,\n            /generate.+(post|content|component)/,\n            /optimize.+(workflow|process)/,\n            /show.+(reddit|project|component|architecture)/,\n            /create.+(project|component).+/,\n            /reddit.+(analyze|post|integration)/\n        ];\n        const lowerInput = input.toLowerCase();\n        return explicitMCPPatterns.some((pattern)=>pattern.test(lowerInput)) || input.startsWith('/reddit') || input.startsWith('/mcp') || input.startsWith('/workflow');\n    };\n    // ToolSelector handlers\n    const handleToolSelectorSelect = (command)=>{\n        var _inputRef_current;\n        setMessage(command + \" \");\n        setShowToolSelector(false);\n        (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();\n    };\n    const handleToolSelectorClose = ()=>{\n        var _inputRef_current;\n        setShowToolSelector(false);\n        setMessage(\"\");\n        (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();\n    };\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        // Check session limit before processing\n        if (!canAddMessages()) {\n            console.warn(\"Cannot send message: Session limit reached\");\n            // Optionally add a terminal feedback message about the limit\n            await storeChatMessage({\n                role: \"terminal\",\n                content: \"[\".concat(new Date().toLocaleTimeString('en-US', {\n                    hour12: false,\n                    hour: '2-digit',\n                    minute: '2-digit',\n                    second: '2-digit'\n                }), \"] \\uD83D\\uDEA8 Message not sent: Session limit reached (500 messages)\\nPlease start a new session to continue chatting.\"),\n                sessionId\n            });\n            return;\n        }\n        if (message.trim() && !isLoading) {\n            const messageContent = message.trim();\n            setMessage(\"\");\n            setShowMCPTools(false);\n            setSelectedToolIndex(-1);\n            // Check for agent tool commands (e.g., /twitter, /instructions)\n            if (messageContent.startsWith('/')) {\n                const command = messageContent.split(' ')[0];\n                // Find agent that has this command\n                let targetAgent = null;\n                let agentTool = null;\n                for (const agent of agents){\n                    const tool = agent.tools.find((t)=>t.command === command);\n                    if (tool) {\n                        targetAgent = agent;\n                        agentTool = tool;\n                        break;\n                    }\n                }\n                if (targetAgent && agentTool) {\n                    // Set the active agent if it's not already set or if it's different\n                    if (activeAgentId !== targetAgent.id) {\n                        setActiveAgent(targetAgent.id);\n                    }\n                    try {\n                        // Create Convex mutations object for database operations\n                        const convexMutations = {\n                            ensureInstructionsProject,\n                            // Only pass createInstructionFile to the instructions agent, not other agents\n                            ...targetAgent.id === 'instructions' ? {\n                                createInstructionFile: createInstruction\n                            } : {},\n                            upsertPost\n                        };\n                        const result = await executeAgentTool(targetAgent.id, agentTool.id, messageContent, convexMutations);\n                        console.log(\"🎯 Agent execution completed, storing messages...\", {\n                            result,\n                            sessionId\n                        });\n                        // Extract filename from result for better terminal feedback\n                        let extractedFileName = 'unknown';\n                        const fileMatch = result.match(/\\*\\*File:\\*\\*\\s*`([^`]+)`/);\n                        if (fileMatch) {\n                            extractedFileName = fileMatch[1];\n                        } else if (messageContent.startsWith('/twitter')) {\n                            // Try to extract from Twitter agent result\n                            const twitterFileMatch = result.match(/File:\\s*([^\\s\\n]+)/);\n                            if (twitterFileMatch) {\n                                extractedFileName = twitterFileMatch[1];\n                            }\n                        }\n                        // Prepare all messages to store\n                        const messagesToStore = [\n                            // User message\n                            storeChatMessage({\n                                role: \"user\",\n                                content: messageContent,\n                                sessionId\n                            }),\n                            // Assistant result message\n                            storeChatMessage({\n                                role: \"assistant\",\n                                content: \"\\uD83E\\uDD16 Agent Result:\\n\\n\".concat(result),\n                                sessionId\n                            })\n                        ];\n                        // Add terminal feedback message\n                        const isFileCreation = messageContent.startsWith('/instructions') || messageContent.startsWith('/twitter');\n                        const hasSuccess = result.includes('Created Successfully!');\n                        console.log(\"🔍 Terminal feedback debug:\", {\n                            isFileCreation,\n                            hasSuccess,\n                            messageContent,\n                            resultSnippet: result.substring(0, 200)\n                        });\n                        if (isFileCreation && hasSuccess) {\n                            const terminalFeedback = \"[\".concat(new Date().toLocaleTimeString('en-US', {\n                                hour12: false,\n                                hour: '2-digit',\n                                minute: '2-digit',\n                                second: '2-digit'\n                            }), \"] ✅ \").concat(targetAgent.name, \" file created: \").concat(extractedFileName, \"\\nOperation: \").concat(targetAgent.name, \" created \").concat(messageContent.startsWith('/instructions') ? 'instruction document' : 'Twitter post', \"\\nStatus: Ready for editing and publishing\");\n                            console.log(\"📝 Adding terminal feedback:\", terminalFeedback);\n                            messagesToStore.push(storeChatMessage({\n                                role: \"terminal\",\n                                content: terminalFeedback,\n                                sessionId,\n                                operation: {\n                                    type: \"file_created\",\n                                    details: {\n                                        agentId: targetAgent.id,\n                                        agentName: targetAgent.name,\n                                        toolId: agentTool.id,\n                                        fileName: extractedFileName\n                                    }\n                                }\n                            }));\n                        } else if (isFileCreation) {\n                            // Fallback for file creation without \"Created Successfully!\" \n                            const terminalFeedback = \"[\".concat(new Date().toLocaleTimeString('en-US', {\n                                hour12: false,\n                                hour: '2-digit',\n                                minute: '2-digit',\n                                second: '2-digit'\n                            }), \"] \\uD83D\\uDCC4 \").concat(targetAgent.name, \" operation: \").concat(extractedFileName, \"\\nOperation: \").concat(targetAgent.name, \" \").concat(messageContent.startsWith('/instructions') ? 'instruction document' : 'Twitter post', \" processing\\nResult: \").concat(result.substring(0, 150)).concat(result.length > 150 ? '...' : '');\n                            console.log(\"📝 Adding fallback terminal feedback:\", terminalFeedback);\n                            messagesToStore.push(storeChatMessage({\n                                role: \"terminal\",\n                                content: terminalFeedback,\n                                sessionId,\n                                operation: {\n                                    type: \"file_created\",\n                                    details: {\n                                        agentId: targetAgent.id,\n                                        agentName: targetAgent.name,\n                                        toolId: agentTool.id,\n                                        fileName: extractedFileName\n                                    }\n                                }\n                            }));\n                        } else {\n                            const terminalFeedback = \"[\".concat(new Date().toLocaleTimeString('en-US', {\n                                hour12: false,\n                                hour: '2-digit',\n                                minute: '2-digit',\n                                second: '2-digit'\n                            }), \"] \\uD83D\\uDD27 \").concat(targetAgent.name, \" executed: \").concat(agentTool.command, \"\\nOperation: Agent tool execution completed\\nResult: \").concat(result.substring(0, 100)).concat(result.length > 100 ? '...' : '');\n                            console.log(\"📝 Adding terminal feedback:\", terminalFeedback);\n                            messagesToStore.push(storeChatMessage({\n                                role: \"terminal\",\n                                content: terminalFeedback,\n                                sessionId,\n                                operation: {\n                                    type: \"tool_executed\",\n                                    details: {\n                                        agentId: targetAgent.id,\n                                        agentName: targetAgent.name,\n                                        toolId: agentTool.id,\n                                        success: true\n                                    }\n                                }\n                            }));\n                        }\n                        // Store all messages together\n                        const messageResults = await Promise.all(messagesToStore);\n                        console.log(\"✅ Agent executed and messages stored:\", {\n                            messageCount: messageResults.length,\n                            messages: messageResults.map((m)=>m ? 'success' : 'failed'),\n                            result: result.substring(0, 100) + '...',\n                            sessionId,\n                            terminalMessageStored: messageResults[2] ? 'YES' : 'NO'\n                        });\n                        // Small delay to ensure database consistency, then scroll to bottom\n                        setTimeout(()=>{\n                            if (scrollRef.current) {\n                                scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n                            }\n                        }, 100);\n                        return;\n                    } catch (error) {\n                        console.error('Agent tool error:', error);\n                        // Add terminal feedback for agent tool errors\n                        const terminalFeedback = \"[\".concat(new Date().toLocaleTimeString('en-US', {\n                            hour12: false,\n                            hour: '2-digit',\n                            minute: '2-digit',\n                            second: '2-digit'\n                        }), \"] ❌ \").concat(targetAgent.name, \" failed: \").concat(agentTool.command, \"\\nOperation: Agent tool execution failed\\nError: \").concat(error instanceof Error ? error.message : 'Unknown error');\n                        await storeChatMessage({\n                            role: \"terminal\",\n                            content: terminalFeedback,\n                            sessionId,\n                            operation: {\n                                type: \"error\",\n                                details: {\n                                    agentId: targetAgent.id,\n                                    agentName: targetAgent.name,\n                                    toolId: agentTool.id,\n                                    error: error instanceof Error ? error.message : 'Unknown error'\n                                }\n                            }\n                        });\n                        const errorResults = await Promise.all([\n                            storeChatMessage({\n                                role: \"user\",\n                                content: messageContent,\n                                sessionId\n                            }),\n                            storeChatMessage({\n                                role: \"assistant\",\n                                content: \"❌ Agent tool failed: \".concat(error instanceof Error ? error.message : 'Unknown error'),\n                                sessionId\n                            })\n                        ]);\n                        console.log(\"❌ Error messages stored:\", errorResults);\n                        return;\n                    }\n                }\n            }\n            // Check if message starts with MCP tool command (e.g., /eac_project_analyze)\n            if (mcpConnected && messageContent.startsWith('/') && messageContent.includes('eac_')) {\n                try {\n                    // Extract tool name and arguments from the command\n                    const parts = messageContent.slice(1).split(' ');\n                    const toolName = parts[0];\n                    const query = parts.slice(1).join(' ') || \"Execute \".concat(toolName, \" with default parameters\");\n                    // Create a direct tool call request instead of using natural language processing\n                    const response = await fetch('/api/mcp', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({\n                            action: 'call-tool',\n                            data: {\n                                name: toolName,\n                                arguments: {\n                                    query: query,\n                                    includePatterns: true,\n                                    includeRecommendations: true,\n                                    includeProps: true,\n                                    includeHooks: true,\n                                    includeUsage: true,\n                                    includeSchema: true,\n                                    includeFunctions: true\n                                }\n                            }\n                        })\n                    });\n                    const mcpResponse = await response.json();\n                    if (mcpResponse.success && mcpResponse.result) {\n                        // Extract text content from the direct tool result\n                        let textContent = '';\n                        if (mcpResponse.result.content && Array.isArray(mcpResponse.result.content)) {\n                            textContent = mcpResponse.result.content.filter((item)=>item.type === 'text').map((item)=>item.text || '').join('\\n');\n                        } else if (typeof mcpResponse.result === 'string') {\n                            textContent = mcpResponse.result;\n                        } else {\n                            textContent = JSON.stringify(mcpResponse.result, null, 2);\n                        }\n                        // Strip markdown formatting and convert to plain text\n                        const plainText = stripMarkdown(textContent);\n                        // Add terminal feedback for MCP tool execution\n                        const terminalFeedback = \"[\".concat(new Date().toLocaleTimeString('en-US', {\n                            hour12: false,\n                            hour: '2-digit',\n                            minute: '2-digit',\n                            second: '2-digit'\n                        }), \"] \\uD83D\\uDD27 MCP tool executed: \").concat(toolName, \"\\nOperation: MCP tool execution completed\\nResult: \").concat(plainText.substring(0, 100)).concat(plainText.length > 100 ? '...' : '');\n                        await storeChatMessage({\n                            role: \"terminal\",\n                            content: terminalFeedback,\n                            sessionId,\n                            operation: {\n                                type: \"tool_executed\",\n                                details: {\n                                    toolName: toolName,\n                                    success: true\n                                }\n                            }\n                        });\n                        await sendMessage(\"\\uD83D\\uDD27 \".concat(toolName, \" Results:\\n\\n\").concat(plainText));\n                    } else {\n                        // Add terminal feedback for failed MCP tool execution\n                        const terminalFeedback = \"[\".concat(new Date().toLocaleTimeString('en-US', {\n                            hour12: false,\n                            hour: '2-digit',\n                            minute: '2-digit',\n                            second: '2-digit'\n                        }), \"] ❌ MCP tool failed: \").concat(toolName, \"\\nOperation: MCP tool execution failed\\nError: \").concat(mcpResponse.error || 'Unknown error');\n                        await storeChatMessage({\n                            role: \"terminal\",\n                            content: terminalFeedback,\n                            sessionId,\n                            operation: {\n                                type: \"error\",\n                                details: {\n                                    toolName: toolName,\n                                    error: mcpResponse.error || 'Unknown error'\n                                }\n                            }\n                        });\n                        await sendMessage(\"❌ Failed to execute \".concat(toolName, \": \").concat(mcpResponse.error || 'Unknown error'));\n                    }\n                } catch (error) {\n                    console.error('MCP Tool Error:', error);\n                    await sendMessage(\"❌ Error executing MCP tool: \".concat(error));\n                }\n            } else if (mcpConnected && isMCPQuery(messageContent)) {\n                // Check if this looks like a natural language MCP query\n                try {\n                    const mcpResponse = await processNaturalLanguage(messageContent);\n                    if (mcpResponse.success && mcpResponse.content && mcpResponse.content.length > 0) {\n                        // Extract the actual text content from the MCP response\n                        const textContent = mcpResponse.content[0].text;\n                        // Strip markdown formatting and convert to plain text\n                        const plainText = stripMarkdown(textContent);\n                        // Send the MCP response with clean text content\n                        await sendMessage(\"\\uD83E\\uDD16 MCP Analysis:\\n\\n\".concat(plainText));\n                    } else {\n                        await sendMessage(messageContent);\n                    }\n                } catch (error) {\n                    console.error('MCP Error:', error);\n                    // Fall back to regular chat\n                    await sendMessage(messageContent);\n                }\n            } else {\n                // Regular chat message - add instruction context if available\n                let contextualMessage = messageContent;\n                if (instructionContext) {\n                    contextualMessage = \"\".concat(instructionContext, \"\\n\\n---\\n\\n\").concat(messageContent);\n                }\n                // Use the useChat hook which will call the sendChatMessage action\n                // We need to modify the useChat hook to support passing the original message\n                await sendMessage(contextualMessage, messageContent);\n            }\n        }\n    };\n    const handleKeyDown = (e)=>{\n        // If ToolSelector is open, let it handle keyboard events\n        if (showToolSelector) {\n            return; // ToolSelector component will handle its own keyboard events\n        }\n        if (showMCPTools && filteredTools.length > 0) {\n            if (e.key === 'ArrowDown') {\n                e.preventDefault();\n                setSelectedToolIndex((prev)=>prev < filteredTools.length - 1 ? prev + 1 : 0);\n            } else if (e.key === 'ArrowUp') {\n                e.preventDefault();\n                setSelectedToolIndex((prev)=>prev > 0 ? prev - 1 : filteredTools.length - 1);\n            } else if (e.key === 'Tab' || e.key === 'Enter') {\n                e.preventDefault();\n                if (selectedToolIndex >= 0 && selectedToolIndex < filteredTools.length) {\n                    var _inputRef_current;\n                    const selectedTool = filteredTools[selectedToolIndex];\n                    const commandToUse = 'command' in selectedTool ? selectedTool.command : \"/\".concat(selectedTool.name);\n                    setMessage(\"\".concat(commandToUse, \" \"));\n                    setShowMCPTools(false);\n                    setSelectedToolIndex(-1);\n                    (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();\n                }\n            } else if (e.key === 'Escape') {\n                setShowMCPTools(false);\n                setSelectedToolIndex(-1);\n            }\n        } else if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            handleSubmit(e);\n        }\n    };\n    const handleInputChange = (e)=>{\n        const value = e.target.value;\n        setMessage(value);\n        // Show ToolSelector when message is exactly '/'\n        if (value === '/') {\n            setShowToolSelector(true);\n            setSelectedSelectorIndex(0);\n            setShowMCPTools(false);\n            setShowCommandHints(false);\n            return;\n        } else {\n            setShowToolSelector(false);\n        }\n        // Show tools menu when message starts with '/' and is just one character or when typing tool name\n        if (value.startsWith('/') && !value.includes(' ')) {\n            setShowMCPTools(true);\n            setShowCommandHints(false);\n            // Auto-select first matching tool if typing\n            if (value.length > 1) {\n                const searchTerm = value.slice(1).toLowerCase();\n                const currentFiltered = filteredTools.filter((tool)=>{\n                    const toolName = 'command' in tool && tool.command ? tool.command.slice(1) : tool.name;\n                    return toolName.toLowerCase().includes(searchTerm);\n                });\n                setSelectedToolIndex(currentFiltered.length > 0 ? 0 : -1);\n            } else {\n                setSelectedToolIndex(0);\n            }\n        } else if (value.startsWith('/') && value.includes(' ')) {\n            // Hide menu once user has selected a tool and added space\n            setShowMCPTools(false);\n            setSelectedToolIndex(-1);\n        } else if (!value.startsWith('/')) {\n            setShowMCPTools(false);\n            setSelectedToolIndex(-1);\n            // Show regular command hints for other commands (keep existing logic)\n            setShowCommandHints(value.startsWith('/') && value.length > 1);\n        }\n    };\n    // Helper function to get available tools based on current mode\n    const getAvailableTools = ()=>{\n        if (toolsMode === 'agents') {\n            if (activeAgentId) {\n                const activeAgent = agents.find((a)=>a.id === activeAgentId);\n                return (activeAgent === null || activeAgent === void 0 ? void 0 : activeAgent.tools.map((tool)=>({\n                        name: tool.command.slice(1),\n                        description: tool.description,\n                        command: tool.command\n                    }))) || [];\n            } else {\n                // Return empty array when in agent mode but no agent is selected\n                return [];\n            }\n        } else {\n            // MCP mode - return MCP tools\n            return availableTools || [];\n        }\n    };\n    const currentTools = getAvailableTools();\n    const handleToolSelect = (tool)=>{\n        var _inputRef_current;\n        const commandToUse = tool.command || \"/\".concat(tool.name);\n        setMessage(\"\".concat(commandToUse, \" \"));\n        setShowMCPTools(false);\n        setSelectedToolIndex(-1);\n        (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();\n    };\n    // Filter tools based on input and current mode\n    const filteredTools = currentTools.filter((tool)=>{\n        if (!message.startsWith('/') || message.length === 1) return true;\n        const searchTerm = message.slice(1).split(' ')[0].toLowerCase();\n        const toolName = 'command' in tool && tool.command ? tool.command.slice(1) : tool.name;\n        return toolName.toLowerCase().includes(searchTerm);\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: scrollRef,\n        className: \"flex-1 overflow-y-auto bg-[#0e0e0e] p-2 min-h-0 scrollbar-hidden\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"font-mono text-xs space-y-2 min-h-full\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-[#cccccc] space-y-1 mb-4\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: \"EAC Financial Dashboard - AI Assistant\"\n                        }, void 0, false, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 705,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-[#4ec9b0]\",\n                            children: \"▲ Next.js 15.0.0 + Convex Backend\"\n                        }, void 0, false, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 706,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: \"- Anthropic Claude 3.5 Sonnet Integration\"\n                        }, void 0, false, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 707,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-xs \".concat(mcpConnected ? 'text-[#4ec9b0]' : 'text-[#f48771]'),\n                            children: [\n                                \"\\uD83D\\uDD0C MCP Server: \",\n                                mcpConnected ? 'Connected' : 'Disconnected',\n                                mcpConnected && \" (\".concat(availableTools.length, \" tools)\")\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 708,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-xs \".concat(activeAgentId ? 'text-[#4ec9b0]' : 'text-[#858585]'),\n                            children: [\n                                \"\\uD83E\\uDD16 Agents: \",\n                                activeAgentId ? \"Active (\".concat((_agents_find = agents.find((a)=>a.id === activeAgentId)) === null || _agents_find === void 0 ? void 0 : _agents_find.name, \")\") : 'None selected',\n                                activeAgentId && \" (\".concat(((_agents_find1 = agents.find((a)=>a.id === activeAgentId)) === null || _agents_find1 === void 0 ? void 0 : _agents_find1.tools.length) || 0, \" tools)\")\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 712,\n                            columnNumber: 11\n                        }, this),\n                        mcpError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-[#f48771] text-xs\",\n                            children: [\n                                \"MCP Error: \",\n                                mcpError\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 717,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-[#858585] mt-2\",\n                            children: \"AI Assistant ready for EAC project questions.\"\n                        }, void 0, false, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 719,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-[#858585] text-xs\",\n                            children: [\n                                \"Session: \",\n                                sessionId.slice(-8)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 720,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-[#858585] text-xs\",\n                            children: [\n                                \"Messages: \",\n                                messageCount,\n                                \"/500\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 721,\n                            columnNumber: 11\n                        }, this),\n                        isAtSessionLimit && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-[#f48771] text-xs bg-[#1a1a1a] border border-[#f48771] rounded px-2 py-1 mt-2\",\n                            children: [\n                                \"\\uD83D\\uDEA8 Session limit reached (500 messages). Please start a new session to continue.\",\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: startNewSession,\n                                    className: \"ml-2 px-2 py-1 bg-[#007acc] text-white rounded text-xs hover:bg-[#005a9e] transition-colors\",\n                                    children: \"Start New Session\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 727,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 725,\n                            columnNumber: 13\n                        }, this),\n                        isNearSessionLimit && !isAtSessionLimit && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-[#ffcc02] text-xs bg-[#1a1a1a] border border-[#ffcc02] rounded px-2 py-1 mt-2\",\n                            children: [\n                                \"⚠️ Approaching session limit (\",\n                                messageCount,\n                                \"/500 messages). Consider starting a new session soon.\",\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: startNewSession,\n                                    className: \"ml-2 px-2 py-1 bg-[#ffcc02] text-black rounded text-xs hover:bg-[#e6b800] transition-colors\",\n                                    children: \"Start New Session\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 738,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 736,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-[#858585] border-t border-[#333] pt-2 mt-3\",\n                            children: [\n                                \"Type your questions about projects, financials, Reddit integration, or development below.\",\n                                mcpConnected && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-xs text-[#4ec9b0] mt-1\",\n                                    children: \"Enhanced: Try “analyze my reddit integration” or “optimize my workflow”\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 749,\n                                    columnNumber: 30\n                                }, this),\n                                activeAgentId && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-xs text-[#4ec9b0] mt-1\",\n                                    children: \"Agent Active: Type “/” to see available agent tools\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 750,\n                                    columnNumber: 31\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 747,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                    lineNumber: 704,\n                    columnNumber: 9\n                }, this),\n                messages === null || messages === void 0 ? void 0 : messages.map((msg)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-1\",\n                        children: [\n                            msg.role === 'user' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-[#cccccc]\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-[#007acc]\",\n                                        children: \"$ user:\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 759,\n                                        columnNumber: 17\n                                    }, this),\n                                    \" \",\n                                    msg.content\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                lineNumber: 758,\n                                columnNumber: 15\n                            }, this),\n                            msg.role === 'assistant' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-[#cccccc]\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-[#4ec9b0]\",\n                                        children: \"$ system:\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 765,\n                                        columnNumber: 17\n                                    }, this),\n                                    \" \",\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"whitespace-pre-wrap\",\n                                        children: msg.content\n                                    }, void 0, false, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 765,\n                                        columnNumber: 67\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                lineNumber: 764,\n                                columnNumber: 15\n                            }, this),\n                            msg.role === 'system' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-[#f48771]\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-[#f48771]\",\n                                        children: \"$ error:\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 771,\n                                        columnNumber: 17\n                                    }, this),\n                                    \" \",\n                                    msg.content\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                lineNumber: 770,\n                                columnNumber: 15\n                            }, this),\n                            msg.role === 'terminal' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-[#cccccc] font-mono\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"whitespace-pre-wrap bg-[#1a1a1a] border-l-2 border-[#4ec9b0] pl-3 py-1 my-1\",\n                                    children: msg.content\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 777,\n                                    columnNumber: 17\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                lineNumber: 776,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, msg._id, true, {\n                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                        lineNumber: 756,\n                        columnNumber: 11\n                    }, this)),\n                isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-[#cccccc]\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"text-[#4ec9b0]\",\n                            children: \"$ system:\"\n                        }, void 0, false, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 788,\n                            columnNumber: 13\n                        }, this),\n                        \" \",\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"text-[#858585] animate-pulse\",\n                            children: \"thinking...\"\n                        }, void 0, false, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 788,\n                            columnNumber: 63\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                    lineNumber: 787,\n                    columnNumber: 11\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex flex-col pt-2\",\n                    children: [\n                        showMCPTools && currentTools && currentTools.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mb-2 bg-[#1a1a1a] border border-[#333] rounded text-xs max-h-48 overflow-y-auto\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center justify-between p-2 border-b border-[#333]\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-[#4ec9b0] text-xs font-medium\",\n                                            children: [\n                                                toolsMode === 'mcp' ? 'MCP Tools' : 'Agent Tools',\n                                                \" (\",\n                                                filteredTools.length,\n                                                \" of \",\n                                                currentTools.length,\n                                                \" available)\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                            lineNumber: 799,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_toolsToggle__WEBPACK_IMPORTED_MODULE_12__.ToolsToggle, {\n                                            mode: toolsMode,\n                                            onModeChange: setToolsMode,\n                                            className: \"scale-90\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                            lineNumber: 802,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 798,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"p-2 space-y-1\",\n                                    children: filteredTools.length > 0 ? filteredTools.map((tool, index)=>{\n                                        const displayName = 'command' in tool && tool.command ? tool.command : \"/\".concat(tool.name);\n                                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-[#cccccc] py-1 px-2 rounded cursor-pointer hover:bg-[#2a2a2a] \".concat(selectedToolIndex === index ? 'bg-[#0e639c] text-white' : ''),\n                                            onClick: ()=>handleToolSelect(tool),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"font-semibold\",\n                                                    children: displayName\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                    lineNumber: 822,\n                                                    columnNumber: 25\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"text-[#858585] text-xs mt-0.5\",\n                                                    children: tool.description\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                    lineNumber: 823,\n                                                    columnNumber: 25\n                                                }, this)\n                                            ]\n                                        }, tool.name, true, {\n                                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                            lineNumber: 815,\n                                            columnNumber: 23\n                                        }, this);\n                                    }) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-[#858585] py-2 text-center\",\n                                        children: toolsMode === 'agents' && !activeAgentId ? 'No agent selected. Select an agent from the Agents panel.' : \"No \".concat(toolsMode === 'mcp' ? 'MCP' : 'agent', \" tools available.\")\n                                    }, void 0, false, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 828,\n                                        columnNumber: 19\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 810,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-[#858585] text-xs p-2 border-t border-[#333]\",\n                                    children: \"↑↓ navigate • Enter/Tab select • Esc cancel\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 837,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 796,\n                            columnNumber: 13\n                        }, this),\n                        showToolSelector && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mb-2 relative\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_toolSelector__WEBPACK_IMPORTED_MODULE_11__.ToolSelector, {\n                                onToolSelect: handleToolSelectorSelect,\n                                onClose: handleToolSelectorClose,\n                                selectedIndex: selectedSelectorIndex,\n                                onIndexChange: setSelectedSelectorIndex\n                            }, void 0, false, {\n                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                lineNumber: 846,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 845,\n                            columnNumber: 13\n                        }, this),\n                        showCommandHints && filteredCommands.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mb-2 p-2 bg-[#1a1a1a] border border-[#333] rounded text-xs\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-[#4ec9b0] mb-1\",\n                                    children: \"Available Commands:\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 858,\n                                    columnNumber: 15\n                                }, this),\n                                filteredCommands.slice(0, 5).map((cmd)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-[#858585] py-0.5\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-[#cccccc]\",\n                                                children: cmd.command\n                                            }, void 0, false, {\n                                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                lineNumber: 861,\n                                                columnNumber: 19\n                                            }, this),\n                                            \" - \",\n                                            cmd.description\n                                        ]\n                                    }, cmd.command, true, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 860,\n                                        columnNumber: 17\n                                    }, this))\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 857,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-[#007acc]\",\n                                    children: \"$ user:\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 868,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                                    onSubmit: handleSubmit,\n                                    className: \"flex-1 ml-1\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        ref: inputRef,\n                                        type: \"text\",\n                                        value: message,\n                                        onChange: handleInputChange,\n                                        onKeyDown: handleKeyDown,\n                                        placeholder: isAtSessionLimit ? \"Session limit reached - Start new session to continue...\" : isLoading ? \"AI is thinking...\" : \"Type / for MCP tools or ask about your EAC project...\",\n                                        disabled: isLoading || isAtSessionLimit,\n                                        className: \"w-full bg-transparent border-none outline-none placeholder:text-[#858585] disabled:opacity-50 disabled:cursor-not-allowed caret-[#cccccc] \".concat(isAtSessionLimit ? 'text-[#f48771]' : 'text-[#cccccc]')\n                                    }, void 0, false, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 870,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 869,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 867,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                    lineNumber: 793,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n            lineNumber: 702,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n        lineNumber: 698,\n        columnNumber: 5\n    }, this);\n}\n_s(ChatMessages, \"D48VqCefn+3zkDHH5SXIkzc3JgI=\", false, function() {\n    return [\n        _clerk_nextjs__WEBPACK_IMPORTED_MODULE_13__.useUser,\n        _store_terminal_chat__WEBPACK_IMPORTED_MODULE_7__.useChatStore,\n        _store_terminal_session__WEBPACK_IMPORTED_MODULE_8__.useSessionStore,\n        _lib_hooks_useChat__WEBPACK_IMPORTED_MODULE_3__.useChat,\n        _lib_hooks_useMCP__WEBPACK_IMPORTED_MODULE_5__.useMCP,\n        _store__WEBPACK_IMPORTED_MODULE_6__.useAgentStore,\n        _lib_hooks_useInstructions__WEBPACK_IMPORTED_MODULE_4__.useInstructions,\n        _lib_hooks_useInstructions__WEBPACK_IMPORTED_MODULE_4__.useInstructionContext,\n        convex_react__WEBPACK_IMPORTED_MODULE_9__.useMutation\n    ];\n});\n_c = ChatMessages;\nvar _c;\n$RefreshReg$(_c, \"ChatMessages\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9fY29tcG9uZW50cy90ZXJtaW5hbC9fY29tcG9uZW50cy9jaGF0TWVzc2FnZXMudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwwREFBMEQ7QUFDMUQsNkZBQTZGOzs7QUFJL0M7QUFDSTtBQUNKO0FBQ3VDO0FBQ3pDO0FBQ0o7QUFDYTtBQUNNO0FBQ25CO0FBQ2E7QUFDTTtBQUNiO0FBQ0Y7QUFFckMsU0FBU2tCO1FBcXJCbUNDLGNBQ2hCQTs7SUFyckJqQyxNQUFNQyxZQUFZTiw4Q0FBTUEsQ0FBaUI7SUFDekMsTUFBTU8sV0FBV1AsOENBQU1BLENBQW1CO0lBQzFDLE1BQU0sQ0FBQ1EsU0FBU0MsV0FBVyxHQUFHUixnREFBUUEsQ0FBQztJQUN2QyxNQUFNLENBQUNTLGtCQUFrQkMsb0JBQW9CLEdBQUdWLGdEQUFRQSxDQUFDO0lBQ3pELE1BQU0sQ0FBQ1csY0FBY0MsZ0JBQWdCLEdBQUdaLGdEQUFRQSxDQUFDO0lBQ2pELE1BQU0sQ0FBQ2EsbUJBQW1CQyxxQkFBcUIsR0FBR2QsZ0RBQVFBLENBQUMsQ0FBQztJQUM1RCxNQUFNLENBQUNlLFdBQVdDLGFBQWEsR0FBR2hCLGdEQUFRQSxDQUFtQjtJQUM3RCxNQUFNLENBQUNpQixrQkFBa0JDLG9CQUFvQixHQUFHbEIsZ0RBQVFBLENBQUM7SUFDekQsTUFBTSxDQUFDbUIsdUJBQXVCQyx5QkFBeUIsR0FBR3BCLGdEQUFRQSxDQUFDO0lBRW5FLE1BQU0sRUFBRXFCLElBQUksRUFBRUMsUUFBUSxFQUFFLEdBQUc1Qix1REFBT0E7SUFDbEMsTUFBTSxFQUFFNkIscUJBQXFCLEVBQUVDLG1CQUFtQixFQUFFQyxZQUFZLEVBQUVDLHNCQUFzQixFQUFFLEdBQUdsQyxrRUFBWUE7SUFDekcsTUFBTSxFQUFFbUMsZUFBZSxFQUFFLEdBQUdsQyx3RUFBZUE7SUFDM0MsTUFBTSxFQUNKbUMsUUFBUSxFQUNSQyxXQUFXQyxXQUFXLEVBQ3RCQyxXQUFXLEVB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TG1ELE9BQU9sTDt3Q0FDUDZNLFVBQVU1Qjt3Q0FDVjZCLFdBQVdwQzt3Q0FDWHFDLGFBQ0VqTCxtQkFDSSw2REFDQVIsWUFDRSxzQkFDQTt3Q0FFUjBMLFVBQVUxTCxhQUFhUTt3Q0FDdkJnSyxXQUFXLDZJQUVWLE9BRENoSyxtQkFBbUIsbUJBQW1COzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBU3hEO0dBMTJCZ0JsQzs7UUFXYVQsbURBQU9BO1FBQzJERiw4REFBWUE7UUFDN0VDLG9FQUFlQTtRQWN2Q04sdURBQU9BO1FBT1BHLHFEQUFNQTtRQUUwREMsaURBQWFBO1FBQ3hCRix1RUFBZUE7UUFDN0NELDZFQUFxQkE7UUFHN0JPLHFEQUFXQTs7O0tBekNoQlEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXR0aGV3c2ltb24vUHJvamVjdHMvZWFjL2VhYy9hcHAvX2NvbXBvbmVudHMvdGVybWluYWwvX2NvbXBvbmVudHMvY2hhdE1lc3NhZ2VzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDaGF0IE1lc3NhZ2VzIENvbXBvbmVudCB3aXRoIENvbnZleCBhbmQgTUNQIEludGVncmF0aW9uXG4vLyAvVXNlcnMvbWF0dGhld3NpbW9uL1Byb2plY3RzL2VhYy9lYWMvYXBwL19jb21wb25lbnRzL3Rlcm1pbmFsL19jb21wb25lbnRzL2NoYXRNZXNzYWdlcy50c3hcblxuXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IGFwaSB9IGZyb20gXCJAL2NvbnZleC9fZ2VuZXJhdGVkL2FwaVwiO1xuaW1wb3J0IHsgY2hhdENvbW1hbmRzIH0gZnJvbSBcIkAvbGliL2NoYXRDb21tYW5kc1wiO1xuaW1wb3J0IHsgdXNlQ2hhdCB9IGZyb20gXCJAL2xpYi9ob29rcy91c2VDaGF0XCI7XG5pbXBvcnQgeyB1c2VJbnN0cnVjdGlvbkNvbnRleHQsIHVzZUluc3RydWN0aW9ucyB9IGZyb20gXCJAL2xpYi9ob29rcy91c2VJbnN0cnVjdGlvbnNcIjtcbmltcG9ydCB7IHVzZU1DUCB9IGZyb20gXCJAL2xpYi9ob29rcy91c2VNQ1BcIjtcbmltcG9ydCB7IHVzZUFnZW50U3RvcmUgfSBmcm9tIFwiQC9zdG9yZVwiO1xuaW1wb3J0IHsgdXNlQ2hhdFN0b3JlIH0gZnJvbSBcIkAvc3RvcmUvdGVybWluYWwvY2hhdFwiO1xuaW1wb3J0IHsgdXNlU2Vzc2lvblN0b3JlIH0gZnJvbSBcIkAvc3RvcmUvdGVybWluYWwvc2Vzc2lvblwiO1xuaW1wb3J0IHsgdXNlVXNlciB9IGZyb20gXCJAY2xlcmsvbmV4dGpzXCI7XG5pbXBvcnQgeyB1c2VNdXRhdGlvbiwgdXNlUXVlcnkgfSBmcm9tIFwiY29udmV4L3JlYWN0XCI7XG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBUb29sU2VsZWN0b3IgfSBmcm9tIFwiLi90b29sU2VsZWN0b3JcIjtcbmltcG9ydCB7IFRvb2xzVG9nZ2xlIH0gZnJvbSBcIi4vdG9vbHNUb2dnbGVcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIENoYXRNZXNzYWdlcygpIHtcbiAgY29uc3Qgc2Nyb2xsUmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcbiAgY29uc3QgaW5wdXRSZWYgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IFttZXNzYWdlLCBzZXRNZXNzYWdlXSA9IHVzZVN0YXRlKFwiXCIpO1xuICBjb25zdCBbc2hvd0NvbW1hbmRIaW50cywgc2V0U2hvd0NvbW1hbmRIaW50c10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtzaG93TUNQVG9vbHMsIHNldFNob3dNQ1BUb29sc10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtzZWxlY3RlZFRvb2xJbmRleCwgc2V0U2VsZWN0ZWRUb29sSW5kZXhdID0gdXNlU3RhdGUoLTEpO1xuICBjb25zdCBbdG9vbHNNb2RlLCBzZXRUb29sc01vZGVdID0gdXNlU3RhdGU8J21jcCcgfCAnYWdlbnRzJz4oJ2FnZW50cycpO1xuICBjb25zdCBbc2hvd1Rvb2xTZWxlY3Rvciwgc2V0U2hvd1Rvb2xTZWxlY3Rvcl0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtzZWxlY3RlZFNlbGVjdG9ySW5kZXgsIHNldFNlbGVjdGVkU2VsZWN0b3JJbmRleF0gPSB1c2VTdGF0ZSgwKTtcbiAgXG4gIGNvbnN0IHsgdXNlciwgaXNMb2FkZWQgfSA9IHVzZVVzZXIoKTtcbiAgY29uc3QgeyBpbml0aWFsaXplVXNlclNlc3Npb24sIGFkZFRlcm1pbmFsRmVlZGJhY2ssIHNldFNlc3Npb25JZCwgbG9hZE1lc3NhZ2VzRm9yU2Vzc2lvbiB9ID0gdXNlQ2hhdFN0b3JlKCk7XG4gIGNvbnN0IHsgYWN0aXZlU2Vzc2lvbklkIH0gPSB1c2VTZXNzaW9uU3RvcmUoKTtcbiAgY29uc3QgeyBcbiAgICBtZXNzYWdlcywgXG4gICAgaXNMb2FkaW5nOiBjaGF0TG9hZGluZywgXG4gICAgc2VuZE1lc3NhZ2UsIFxuICAgIHNlc3Npb25JZCwgXG4gICAgc3RvcmVDaGF0TWVzc2FnZSwgXG4gICAgYWRkVGVybWluYWxGZWVkYmFjazogdXNlVGVybWluYWxGZWVkYmFjayxcbiAgICBtZXNzYWdlQ291bnQsXG4gICAgaXNOZWFyU2Vzc2lvbkxpbWl0LFxuICAgIGlzQXRTZXNzaW9uTGltaXQsXG4gICAgY2FuQWRkTWVzc2FnZXMsXG4gICAgZ2V0U2Vzc2lvblN0YXR1cyxcbiAgICBzdGFydE5ld1Nlc3Npb25cbiAgfSA9IHVzZUNoYXQoKTtcbiAgY29uc3Qge1xuICAgIGlzQ29ubmVjdGVkOiBtY3BDb25uZWN0ZWQsXG4gICAgaXNMb2FkaW5nOiBtY3BMb2FkaW5nLFxuICAgIGVycm9yOiBtY3BFcnJvcixcbiAgICBwcm9jZXNzTmF0dXJhbExhbmd1YWdlLFxuICAgIGF2YWlsYWJsZVRvb2xzXG4gIH0gPSB1c2VNQ1AoKTtcblxuICBjb25zdCB7IGFnZW50cywgYWN0aXZlQWdlbnRJZCwgZXhlY3V0ZUFnZW50VG9vbCwgc2V0QWN0aXZlQWdlbnQgfSA9IHVzZUFnZW50U3RvcmUoKTtcbiAgY29uc3QgeyBjcmVhdGVJbnN0cnVjdGlvbiwgZW5zdXJlSW5zdHJ1Y3Rpb25zUHJvamVjdCB9ID0gdXNlSW5zdHJ1Y3Rpb25zKCk7XG4gIGNvbnN0IGluc3RydWN0aW9uQ29udGV4dCA9IHVzZUluc3RydWN0aW9uQ29udGV4dCgpO1xuICBcbiAgLy8gQ29udmV4IG11dGF0aW9ucyBmb3Igc29jaWFsIHBvc3RzXG4gIGNvbnN0IHVwc2VydFBvc3QgPSB1c2VNdXRhdGlvbihhcGkuc29jaWFsUG9zdHMudXBzZXJ0UG9zdCk7XG4gIGNvbnN0IGdldENoYXRNZXNzYWdlcyA9IHVzZVF1ZXJ5O1xuXG4gIGNvbnN0IGlzTG9hZGluZyA9IGNoYXRMb2FkaW5nIHx8IG1jcExvYWRpbmc7XG5cbiAgLy8gSW5pdGlhbGl6ZSB1c2VyLXNwZWNpZmljIHNlc3Npb24gd2hlbiB1c2VyIGlzIGxvYWRlZFxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChpc0xvYWRlZCAmJiB1c2VyPy5pZCkge1xuICAgICAgaW5pdGlhbGl6ZVVzZXJTZXNzaW9uKHVzZXIuaWQpO1xuICAgIH1cbiAgfSwgW2lzTG9hZGVkLCB1c2VyPy5pZCwgaW5pdGlhbGl6ZVVzZXJTZXNzaW9uXSk7XG5cbiAgLy8gSGFuZGxlIHNlc3Npb24gY2hhbmdlcyAtIHVwZGF0ZSBjaGF0IHN0b3JlIHNlc3Npb24gSUQgd2hlbiBhY3RpdmUgc2Vzc2lvbiBjaGFuZ2VzXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGFjdGl2ZVNlc3Npb25JZCAmJiBhY3RpdmVTZXNzaW9uSWQgIT09IHNlc3Npb25JZCkge1xuICAgICAgc2V0U2Vzc2lvbklkKGFjdGl2ZVNlc3Npb25JZCk7XG4gICAgfVxuICB9LCBbYWN0aXZlU2Vzc2lvbklkLCBzZXNzaW9uSWQsIHNldFNlc3Npb25JZF0pO1xuXG4gIC8vIEhlbHBlciBmdW5jdGlvbiB0byBzdHJpcCBtYXJrZG93biBmb3JtYXR0aW5nIGFuZCBjb252ZXJ0IHRvIHBsYWluIHRleHRcbiAgY29uc3Qgc3RyaXBNYXJrZG93biA9ICh0ZXh0OiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICAgIHJldHVybiB0ZXh0XG4gICAgICAucmVwbGFjZSgvXiN7MSw2fVxccysvZ20sICcnKSAvLyBSZW1vdmUgIyBoZWFkZXJzXG4gICAgICAucmVwbGFjZSgvXFwqXFwqKC4qPylcXCpcXCovZywgJyQxJykgLy8gUmVtb3ZlICoqYm9sZCoqXG4gICAgICAucmVwbGFjZSgvXFwqKC4qPylcXCovZywgJyQxJykgLy8gUmVtb3ZlICppdGFsaWMqXG4gICAgICAucmVwbGFjZSgvYChbXmBdKylgL2csICckMScpIC8vIFJlbW92ZSBgY29kZWBcbiAgICAgIC5yZXBsYWNlKC9eXFxzKlstKitdXFxzKy9nbSwgJ+KAoiAnKSAvLyBDb252ZXJ0IG1hcmtkb3duIGxpc3RzIHRvIGJ1bGxldCBwb2ludHNcbiAgICAgIC5yZXBsYWNlKC9eXFxzKlxcZCtcXC5cXHMrL2dtLCAn4oCiICcpIC8vIENvbnZlcnQgbnVtYmVyZWQgbGlzdHMgdG8gYnVsbGV0IHBvaW50c1xuICAgICAgLnJlcGxhY2UoL1xcblxccypcXG5cXHMqXFxuL2csICdcXG5cXG4nKSAvLyBSZWR1Y2UgbXVsdGlwbGUgYmxhbmsgbGluZXMgdG8gZG91YmxlXG4gICAgICAuc3BsaXQoJ1xcbicpIC8vIFNwbGl0IGludG8gbGluZXMgZm9yIHByb2Nlc3NpbmdcbiAgICAgIC5tYXAobGluZSA9PiB7XG4gICAgICAgIC8vIEFkZCBzcGFjaW5nIGFmdGVyIHNlY3Rpb24gaGVhZGVycyAobGluZXMgdGhhdCBkb24ndCBzdGFydCB3aXRoIGJ1bGxldCBwb2ludHMpXG4gICAgICAgIGlmIChsaW5lLnRyaW0oKSAmJiAhbGluZS5zdGFydHNXaXRoKCfigKInKSAmJiAhbGluZS5zdGFydHNXaXRoKCcgJykgJiYgbGluZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgcmV0dXJuIGxpbmUgKyAnXFxuJzsgLy8gQWRkIGV4dHJhIG5ld2xpbmUgYWZ0ZXIgaGVhZGVyc1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBsaW5lO1xuICAgICAgfSlcbiAgICAgIC5qb2luKCdcXG4nKVxuICAgICAgLnJlcGxhY2UoL1xcbnszLH0vZywgJ1xcblxcbicpIC8vIENsZWFuIHVwIGV4Y2Vzc2l2ZSBuZXdsaW5lc1xuICAgICAgLnRyaW0oKTtcbiAgfTtcblxuICAvLyBTaG93IGNvbW1hbmQgaGludHMgd2hlbiB1c2VyIHR5cGVzICcvJ1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldFNob3dDb21tYW5kSGludHMobWVzc2FnZS5zdGFydHNXaXRoKCcvJykgJiYgbWVzc2FnZS5sZW5ndGggPiAxKTtcbiAgfSwgW21lc3NhZ2VdKTtcblxuICAvLyBGaWx0ZXIgY29tbWFuZHMgYmFzZWQgb24gaW5wdXRcbiAgY29uc3QgZmlsdGVyZWRDb21tYW5kcyA9IGNoYXRDb21tYW5kcy5maWx0ZXIoY21kID0+IFxuICAgIG1lc3NhZ2UubGVuZ3RoID4gMSAmJiBjbWQuY29tbWFuZC50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKG1lc3NhZ2UudG9Mb3dlckNhc2UoKSlcbiAgKTtcblxuICAvLyBBdXRvLXNjcm9sbCB0byBib3R0b20gd2hlbiBuZXcgbWVzc2FnZXMgYXJyaXZlXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHNjcm9sbFJlZi5jdXJyZW50KSB7XG4gICAgICBzY3JvbGxSZWYuY3VycmVudC5zY3JvbGxUb3AgPSBzY3JvbGxSZWYuY3VycmVudC5zY3JvbGxIZWlnaHQ7XG4gICAgfVxuICB9LCBbbWVzc2FnZXMsIGlzTG9hZGluZ10pO1xuXG4gICAgLy8gQXV0by1mb2N1cyBpbnB1dCBvbiBtb3VudCBhbmQgYWZ0ZXIgbWVzc2FnZXNcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoaW5wdXRSZWYuY3VycmVudCAmJiAhaXNMb2FkaW5nKSB7XG4gICAgICBpbnB1dFJlZi5jdXJyZW50LmZvY3VzKCk7XG4gICAgfVxuICB9LCBbaXNMb2FkaW5nXSk7XG5cbiAgLy8gRGVidWc6IExvZyBtZXNzYWdlcyB3aGVuIHRoZXkgY2hhbmdlXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc29sZS5sb2coXCLwn5al77iPIE1lc3NhZ2VzIHVwZGF0ZWQ6XCIsIHsgXG4gICAgICB0b3RhbE1lc3NhZ2VzOiBtZXNzYWdlcz8ubGVuZ3RoIHx8IDAsIFxuICAgICAgbWVzc2FnZVR5cGVzOiBtZXNzYWdlcz8ubWFwKG0gPT4gbS5yb2xlKSB8fCBbXSxcbiAgICAgIHRlcm1pbmFsTWVzc2FnZXM6IG1lc3NhZ2VzPy5maWx0ZXIobSA9PiBtLnJvbGUgPT09ICd0ZXJtaW5hbCcpLmxlbmd0aCB8fCAwLFxuICAgICAgbGFzdE1lc3NhZ2U6IG1lc3NhZ2VzPy5bbWVzc2FnZXMubGVuZ3RoIC0gMV0sXG4gICAgICBzZXNzaW9uSWQsXG4gICAgICBzZXNzaW9uU3RhdHVzOiBnZXRTZXNzaW9uU3RhdHVzKCkuc3RhdHVzLFxuICAgICAgbGltaXQ6ICc1MDAgbWVzc2FnZXMnXG4gICAgfSk7XG4gIH0sIFttZXNzYWdlcywgc2Vzc2lvbklkLCBnZXRTZXNzaW9uU3RhdHVzXSk7XG5cbiAgLy8gSGVscGVyIGZ1bmN0aW9uIHRvIGRldGVjdCBNQ1AtcmVsYXRlZCBxdWVyaWVzIChleGNsdWRpbmcgZGlyZWN0IHRvb2wgY29tbWFuZHMpXG4gIGNvbnN0IGlzTUNQUXVlcnkgPSAoaW5wdXQ6IHN0cmluZyk6IGJvb2xlYW4gPT4ge1xuICAgIC8vIERvbid0IHRyZWF0IGRpcmVjdCB0b29sIGNvbW1hbmRzIGFzIE5MUCBxdWVyaWVzXG4gICAgaWYgKGlucHV0LnN0YXJ0c1dpdGgoJy8nKSAmJiBpbnB1dC5pbmNsdWRlcygnZWFjXycpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIFxuICAgIC8vIFNraXAgc2ltcGxlIGdyZWV0aW5ncyBhbmQgc2hvcnQgbWVzc2FnZXNcbiAgICBjb25zdCBtc2cgPSBpbnB1dC50b0xvd2VyQ2FzZSgpLnRyaW0oKTtcbiAgICBpZiAobXNnLmxlbmd0aCA8IDEwIHx8IFxuICAgICAgICBbJ2hpJywgJ2hlbGxvJywgJ2hleScsICd0aGFua3MnLCAndGhhbmsgeW91JywgJ29rJywgJ29rYXknLCAneWVzJywgJ25vJ10uaW5jbHVkZXMobXNnKSB8fFxuICAgICAgICBtc2cubWF0Y2goL14oaGl8aGVsbG98aGV5fHRoYW5rcz98b2t8b2theXx5ZXN8bm8pWyEuP10qJC8pKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgLy8gT25seSB0cmlnZ2VyIG9uIHZlcnkgc3BlY2lmaWMsIGV4cGxpY2l0IHJlcXVlc3RzXG4gICAgY29uc3QgZXhwbGljaXRNQ1BQYXR0ZXJucyA9IFtcbiAgICAgIC9hbmFseXplLisocmVkZGl0fHByb2plY3R8d29ya2Zsb3d8aW50ZWdyYXRpb24pLyxcbiAgICAgIC9nZW5lcmF0ZS4rKHBvc3R8Y29udGVudHxjb21wb25lbnQpLyxcbiAgICAgIC9vcHRpbWl6ZS4rKHdvcmtmbG93fHByb2Nlc3MpLyxcbiAgICAgIC9zaG93LisocmVkZGl0fHByb2plY3R8Y29tcG9uZW50fGFyY2hpdGVjdHVyZSkvLFxuICAgICAgL2NyZWF0ZS4rKHByb2plY3R8Y29tcG9uZW50KS4rLyxcbiAgICAgIC9yZWRkaXQuKyhhbmFseXplfHBvc3R8aW50ZWdyYXRpb24pL1xuICAgIF07XG4gICAgXG4gICAgY29uc3QgbG93ZXJJbnB1dCA9IGlucHV0LnRvTG93ZXJDYXNlKCk7XG4gICAgXG4gICAgcmV0dXJuIGV4cGxpY2l0TUNQUGF0dGVybnMuc29tZShwYXR0ZXJuID0+IHBhdHRlcm4udGVzdChsb3dlcklucHV0KSkgfHxcbiAgICAgICAgICAgaW5wdXQuc3RhcnRzV2l0aCgnL3JlZGRpdCcpIHx8XG4gICAgICAgICAgIGlucHV0LnN0YXJ0c1dpdGgoJy9tY3AnKSB8fFxuICAgICAgICAgICBpbnB1dC5zdGFydHNXaXRoKCcvd29ya2Zsb3cnKTtcbiAgfTtcblxuICAvLyBUb29sU2VsZWN0b3IgaGFuZGxlcnNcbiAgY29uc3QgaGFuZGxlVG9vbFNlbGVjdG9yU2VsZWN0ID0gKGNvbW1hbmQ6IHN0cmluZykgPT4ge1xuICAgIHNldE1lc3NhZ2UoY29tbWFuZCArIFwiIFwiKTtcbiAgICBzZXRTaG93VG9vbFNlbGVjdG9yKGZhbHNlKTtcbiAgICBpbnB1dFJlZi5jdXJyZW50Py5mb2N1cygpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZVRvb2xTZWxlY3RvckNsb3NlID0gKCkgPT4ge1xuICAgIHNldFNob3dUb29sU2VsZWN0b3IoZmFsc2UpO1xuICAgIHNldE1lc3NhZ2UoXCJcIik7XG4gICAgaW5wdXRSZWYuY3VycmVudD8uZm9jdXMoKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVTdWJtaXQgPSBhc3luYyAoZTogUmVhY3QuRm9ybUV2ZW50KSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIFxuICAgIC8vIENoZWNrIHNlc3Npb24gbGltaXQgYmVmb3JlIHByb2Nlc3NpbmdcbiAgICBpZiAoIWNhbkFkZE1lc3NhZ2VzKCkpIHtcbiAgICAgIGNvbnNvbGUud2FybihcIkNhbm5vdCBzZW5kIG1lc3NhZ2U6IFNlc3Npb24gbGltaXQgcmVhY2hlZFwiKTtcbiAgICAgIC8vIE9wdGlvbmFsbHkgYWRkIGEgdGVybWluYWwgZmVlZGJhY2sgbWVzc2FnZSBhYm91dCB0aGUgbGltaXRcbiAgICAgIGF3YWl0IHN0b3JlQ2hhdE1lc3NhZ2Uoe1xuICAgICAgICByb2xlOiBcInRlcm1pbmFsXCIsXG4gICAgICAgIGNvbnRlbnQ6IGBbJHtuZXcgRGF0ZSgpLnRvTG9jYWxlVGltZVN0cmluZygnZW4tVVMnLCB7IFxuICAgICAgICAgIGhvdXIxMjogZmFsc2UsIFxuICAgICAgICAgIGhvdXI6ICcyLWRpZ2l0JywgXG4gICAgICAgICAgbWludXRlOiAnMi1kaWdpdCcsIFxuICAgICAgICAgIHNlY29uZDogJzItZGlnaXQnIFxuICAgICAgICB9KX1dIPCfmqggTWVzc2FnZSBub3Qgc2VudDogU2Vzc2lvbiBsaW1pdCByZWFjaGVkICg1MDAgbWVzc2FnZXMpXG5QbGVhc2Ugc3RhcnQgYSBuZXcgc2Vzc2lvbiB0byBjb250aW51ZSBjaGF0dGluZy5gLFxuICAgICAgICBzZXNzaW9uSWQsXG4gICAgICB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgaWYgKG1lc3NhZ2UudHJpbSgpICYmICFpc0xvYWRpbmcpIHtcbiAgICAgIGNvbnN0IG1lc3NhZ2VDb250ZW50ID0gbWVzc2FnZS50cmltKCk7XG4gICAgICBzZXRNZXNzYWdlKFwiXCIpO1xuICAgICAgc2V0U2hvd01DUFRvb2xzKGZhbHNlKTtcbiAgICAgIHNldFNlbGVjdGVkVG9vbEluZGV4KC0xKTtcbiAgICAgIFxuICAgICAgLy8gQ2hlY2sgZm9yIGFnZW50IHRvb2wgY29tbWFuZHMgKGUuZy4sIC90d2l0dGVyLCAvaW5zdHJ1Y3Rpb25zKVxuICAgICAgaWYgKG1lc3NhZ2VDb250ZW50LnN0YXJ0c1dpdGgoJy8nKSkge1xuICAgICAgICBjb25zdCBjb21tYW5kID0gbWVzc2FnZUNvbnRlbnQuc3BsaXQoJyAnKVswXTtcbiAgICAgICAgXG4gICAgICAgIC8vIEZpbmQgYWdlbnQgdGhhdCBoYXMgdGhpcyBjb21tYW5kXG4gICAgICAgIGxldCB0YXJnZXRBZ2VudCA9IG51bGw7XG4gICAgICAgIGxldCBhZ2VudFRvb2wgPSBudWxsO1xuICAgICAgICBcbiAgICAgICAgZm9yIChjb25zdCBhZ2VudCBvZiBhZ2VudHMpIHtcbiAgICAgICAgICBjb25zdCB0b29sID0gYWdlbnQudG9vbHMuZmluZCh0ID0+IHQuY29tbWFuZCA9PT0gY29tbWFuZCk7XG4gICAgICAgICAgaWYgKHRvb2wpIHtcbiAgICAgICAgICAgIHRhcmdldEFnZW50ID0gYWdlbnQ7XG4gICAgICAgICAgICBhZ2VudFRvb2wgPSB0b29sO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBpZiAodGFyZ2V0QWdlbnQgJiYgYWdlbnRUb29sKSB7XG4gICAgICAgICAgLy8gU2V0IHRoZSBhY3RpdmUgYWdlbnQgaWYgaXQncyBub3QgYWxyZWFkeSBzZXQgb3IgaWYgaXQncyBkaWZmZXJlbnRcbiAgICAgICAgICBpZiAoYWN0aXZlQWdlbnRJZCAhPT0gdGFyZ2V0QWdlbnQuaWQpIHtcbiAgICAgICAgICAgIHNldEFjdGl2ZUFnZW50KHRhcmdldEFnZW50LmlkKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIENyZWF0ZSBDb252ZXggbXV0YXRpb25zIG9iamVjdCBmb3IgZGF0YWJhc2Ugb3BlcmF0aW9uc1xuICAgICAgICAgICAgY29uc3QgY29udmV4TXV0YXRpb25zID0ge1xuICAgICAgICAgICAgICBlbnN1cmVJbnN0cnVjdGlvbnNQcm9qZWN0LFxuICAgICAgICAgICAgICAvLyBPbmx5IHBhc3MgY3JlYXRlSW5zdHJ1Y3Rpb25GaWxlIHRvIHRoZSBpbnN0cnVjdGlvbnMgYWdlbnQsIG5vdCBvdGhlciBhZ2VudHNcbiAgICAgICAgICAgICAgLi4uKHRhcmdldEFnZW50LmlkID09PSAnaW5zdHJ1Y3Rpb25zJyA/IHsgY3JlYXRlSW5zdHJ1Y3Rpb25GaWxlOiBjcmVhdGVJbnN0cnVjdGlvbiB9IDoge30pLFxuICAgICAgICAgICAgICB1cHNlcnRQb3N0LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZXhlY3V0ZUFnZW50VG9vbCh0YXJnZXRBZ2VudC5pZCwgYWdlbnRUb29sLmlkLCBtZXNzYWdlQ29udGVudCwgY29udmV4TXV0YXRpb25zKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLwn46vIEFnZW50IGV4ZWN1dGlvbiBjb21wbGV0ZWQsIHN0b3JpbmcgbWVzc2FnZXMuLi5cIiwgeyByZXN1bHQsIHNlc3Npb25JZCB9KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gRXh0cmFjdCBmaWxlbmFtZSBmcm9tIHJlc3VsdCBmb3IgYmV0dGVyIHRlcm1pbmFsIGZlZWRiYWNrXG4gICAgICAgICAgICBsZXQgZXh0cmFjdGVkRmlsZU5hbWUgPSAndW5rbm93bic7XG4gICAgICAgICAgICBjb25zdCBmaWxlTWF0Y2ggPSByZXN1bHQubWF0Y2goL1xcKlxcKkZpbGU6XFwqXFwqXFxzKmAoW15gXSspYC8pO1xuICAgICAgICAgICAgaWYgKGZpbGVNYXRjaCkge1xuICAgICAgICAgICAgICBleHRyYWN0ZWRGaWxlTmFtZSA9IGZpbGVNYXRjaFsxXTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobWVzc2FnZUNvbnRlbnQuc3RhcnRzV2l0aCgnL3R3aXR0ZXInKSkge1xuICAgICAgICAgICAgICAvLyBUcnkgdG8gZXh0cmFjdCBmcm9tIFR3aXR0ZXIgYWdlbnQgcmVzdWx0XG4gICAgICAgICAgICAgIGNvbnN0IHR3aXR0ZXJGaWxlTWF0Y2ggPSByZXN1bHQubWF0Y2goL0ZpbGU6XFxzKihbXlxcc1xcbl0rKS8pO1xuICAgICAgICAgICAgICBpZiAodHdpdHRlckZpbGVNYXRjaCkge1xuICAgICAgICAgICAgICAgIGV4dHJhY3RlZEZpbGVOYW1lID0gdHdpdHRlckZpbGVNYXRjaFsxXTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBQcmVwYXJlIGFsbCBtZXNzYWdlcyB0byBzdG9yZVxuICAgICAgICAgICAgY29uc3QgbWVzc2FnZXNUb1N0b3JlID0gW1xuICAgICAgICAgICAgICAvLyBVc2VyIG1lc3NhZ2VcbiAgICAgICAgICAgICAgc3RvcmVDaGF0TWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgcm9sZTogXCJ1c2VyXCIsXG4gICAgICAgICAgICAgICAgY29udGVudDogbWVzc2FnZUNvbnRlbnQsXG4gICAgICAgICAgICAgICAgc2Vzc2lvbklkLFxuICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgLy8gQXNzaXN0YW50IHJlc3VsdCBtZXNzYWdlXG4gICAgICAgICAgICAgIHN0b3JlQ2hhdE1lc3NhZ2Uoe1xuICAgICAgICAgICAgICAgIHJvbGU6IFwiYXNzaXN0YW50XCIsXG4gICAgICAgICAgICAgICAgY29udGVudDogYPCfpJYgQWdlbnQgUmVzdWx0OlxcblxcbiR7cmVzdWx0fWAsXG4gICAgICAgICAgICAgICAgc2Vzc2lvbklkLFxuICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIF07XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIEFkZCB0ZXJtaW5hbCBmZWVkYmFjayBtZXNzYWdlXG4gICAgICAgICAgICBjb25zdCBpc0ZpbGVDcmVhdGlvbiA9IG1lc3NhZ2VDb250ZW50LnN0YXJ0c1dpdGgoJy9pbnN0cnVjdGlvbnMnKSB8fCBtZXNzYWdlQ29udGVudC5zdGFydHNXaXRoKCcvdHdpdHRlcicpO1xuICAgICAgICAgICAgY29uc3QgaGFzU3VjY2VzcyA9IHJlc3VsdC5pbmNsdWRlcygnQ3JlYXRlZCBTdWNjZXNzZnVsbHkhJyk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi8J+UjSBUZXJtaW5hbCBmZWVkYmFjayBkZWJ1ZzpcIiwgeyBcbiAgICAgICAgICAgICAgaXNGaWxlQ3JlYXRpb24sIFxuICAgICAgICAgICAgICBoYXNTdWNjZXNzLCBcbiAgICAgICAgICAgICAgbWVzc2FnZUNvbnRlbnQsIFxuICAgICAgICAgICAgICByZXN1bHRTbmlwcGV0OiByZXN1bHQuc3Vic3RyaW5nKDAsIDIwMCkgXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKGlzRmlsZUNyZWF0aW9uICYmIGhhc1N1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgY29uc3QgdGVybWluYWxGZWVkYmFjayA9IGBbJHtuZXcgRGF0ZSgpLnRvTG9jYWxlVGltZVN0cmluZygnZW4tVVMnLCB7IFxuICAgICAgICAgICAgICAgIGhvdXIxMjogZmFsc2UsIFxuICAgICAgICAgICAgICAgIGhvdXI6ICcyLWRpZ2l0JywgXG4gICAgICAgICAgICAgICAgbWludXRlOiAnMi1kaWdpdCcsIFxuICAgICAgICAgICAgICAgIHNlY29uZDogJzItZGlnaXQnIFxuICAgICAgICAgICAgICB9KX1dIOKchSAke3RhcmdldEFnZW50Lm5hbWV9IGZpbGUgY3JlYXRlZDogJHtleHRyYWN0ZWRGaWxlTmFtZX1cbk9wZXJhdGlvbjogJHt0YXJnZXRBZ2VudC5uYW1lfSBjcmVhdGVkICR7bWVzc2FnZUNvbnRlbnQuc3RhcnRzV2l0aCgnL2luc3RydWN0aW9ucycpID8gJ2luc3RydWN0aW9uIGRvY3VtZW50JyA6ICdUd2l0dGVyIHBvc3QnfVxuU3RhdHVzOiBSZWFkeSBmb3IgZWRpdGluZyBhbmQgcHVibGlzaGluZ2A7XG5cbiAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLwn5OdIEFkZGluZyB0ZXJtaW5hbCBmZWVkYmFjazpcIiwgdGVybWluYWxGZWVkYmFjayk7XG5cbiAgICAgICAgICAgICAgbWVzc2FnZXNUb1N0b3JlLnB1c2goXG4gICAgICAgICAgICAgICAgc3RvcmVDaGF0TWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgICByb2xlOiBcInRlcm1pbmFsXCIsXG4gICAgICAgICAgICAgICAgICBjb250ZW50OiB0ZXJtaW5hbEZlZWRiYWNrLFxuICAgICAgICAgICAgICAgICAgc2Vzc2lvbklkLFxuICAgICAgICAgICAgICAgICAgb3BlcmF0aW9uOiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZmlsZV9jcmVhdGVkXCIsXG4gICAgICAgICAgICAgICAgICAgIGRldGFpbHM6IHtcbiAgICAgICAgICAgICAgICAgICAgICBhZ2VudElkOiB0YXJnZXRBZ2VudC5pZCxcbiAgICAgICAgICAgICAgICAgICAgICBhZ2VudE5hbWU6IHRhcmdldEFnZW50Lm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgdG9vbElkOiBhZ2VudFRvb2wuaWQsXG4gICAgICAgICAgICAgICAgICAgICAgZmlsZU5hbWU6IGV4dHJhY3RlZEZpbGVOYW1lLFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaXNGaWxlQ3JlYXRpb24pIHtcbiAgICAgICAgICAgICAgLy8gRmFsbGJhY2sgZm9yIGZpbGUgY3JlYXRpb24gd2l0aG91dCBcIkNyZWF0ZWQgU3VjY2Vzc2Z1bGx5IVwiIFxuICAgICAgICAgICAgICBjb25zdCB0ZXJtaW5hbEZlZWRiYWNrID0gYFske25ldyBEYXRlKCkudG9Mb2NhbGVUaW1lU3RyaW5nKCdlbi1VUycsIHsgXG4gICAgICAgICAgICAgICAgaG91cjEyOiBmYWxzZSwgXG4gICAgICAgICAgICAgICAgaG91cjogJzItZGlnaXQnLCBcbiAgICAgICAgICAgICAgICBtaW51dGU6ICcyLWRpZ2l0JywgXG4gICAgICAgICAgICAgICAgc2Vjb25kOiAnMi1kaWdpdCcgXG4gICAgICAgICAgICAgIH0pfV0g8J+ThCAke3RhcmdldEFnZW50Lm5hbWV9IG9wZXJhdGlvbjogJHtleHRyYWN0ZWRGaWxlTmFtZX1cbk9wZXJhdGlvbjogJHt0YXJnZXRBZ2VudC5uYW1lfSAke21lc3NhZ2VDb250ZW50LnN0YXJ0c1dpdGgoJy9pbnN0cnVjdGlvbnMnKSA/ICdpbnN0cnVjdGlvbiBkb2N1bWVudCcgOiAnVHdpdHRlciBwb3N0J30gcHJvY2Vzc2luZ1xuUmVzdWx0OiAke3Jlc3VsdC5zdWJzdHJpbmcoMCwgMTUwKX0ke3Jlc3VsdC5sZW5ndGggPiAxNTAgPyAnLi4uJyA6ICcnfWA7XG5cbiAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLwn5OdIEFkZGluZyBmYWxsYmFjayB0ZXJtaW5hbCBmZWVkYmFjazpcIiwgdGVybWluYWxGZWVkYmFjayk7XG5cbiAgICAgICAgICAgICAgbWVzc2FnZXNUb1N0b3JlLnB1c2goXG4gICAgICAgICAgICAgICAgc3RvcmVDaGF0TWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgICByb2xlOiBcInRlcm1pbmFsXCIsXG4gICAgICAgICAgICAgICAgICBjb250ZW50OiB0ZXJtaW5hbEZlZWRiYWNrLFxuICAgICAgICAgICAgICAgICAgc2Vzc2lvbklkLFxuICAgICAgICAgICAgICAgICAgb3BlcmF0aW9uOiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZmlsZV9jcmVhdGVkXCIsXG4gICAgICAgICAgICAgICAgICAgIGRldGFpbHM6IHtcbiAgICAgICAgICAgICAgICAgICAgICBhZ2VudElkOiB0YXJnZXRBZ2VudC5pZCxcbiAgICAgICAgICAgICAgICAgICAgICBhZ2VudE5hbWU6IHRhcmdldEFnZW50Lm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgdG9vbElkOiBhZ2VudFRvb2wuaWQsXG4gICAgICAgICAgICAgICAgICAgICAgZmlsZU5hbWU6IGV4dHJhY3RlZEZpbGVOYW1lLFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGNvbnN0IHRlcm1pbmFsRmVlZGJhY2sgPSBgWyR7bmV3IERhdGUoKS50b0xvY2FsZVRpbWVTdHJpbmcoJ2VuLVVTJywgeyBcbiAgICAgICAgICAgICAgICBob3VyMTI6IGZhbHNlLCBcbiAgICAgICAgICAgICAgICBob3VyOiAnMi1kaWdpdCcsIFxuICAgICAgICAgICAgICAgIG1pbnV0ZTogJzItZGlnaXQnLCBcbiAgICAgICAgICAgICAgICBzZWNvbmQ6ICcyLWRpZ2l0JyBcbiAgICAgICAgICAgICAgfSl9XSDwn5SnICR7dGFyZ2V0QWdlbnQubmFtZX0gZXhlY3V0ZWQ6ICR7YWdlbnRUb29sLmNvbW1hbmR9XG5PcGVyYXRpb246IEFnZW50IHRvb2wgZXhlY3V0aW9uIGNvbXBsZXRlZFxuUmVzdWx0OiAke3Jlc3VsdC5zdWJzdHJpbmcoMCwgMTAwKX0ke3Jlc3VsdC5sZW5ndGggPiAxMDAgPyAnLi4uJyA6ICcnfWA7XG5cbiAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLwn5OdIEFkZGluZyB0ZXJtaW5hbCBmZWVkYmFjazpcIiwgdGVybWluYWxGZWVkYmFjayk7XG5cbiAgICAgICAgICAgICAgbWVzc2FnZXNUb1N0b3JlLnB1c2goXG4gICAgICAgICAgICAgICAgc3RvcmVDaGF0TWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgICByb2xlOiBcInRlcm1pbmFsXCIsXG4gICAgICAgICAgICAgICAgICBjb250ZW50OiB0ZXJtaW5hbEZlZWRiYWNrLFxuICAgICAgICAgICAgICAgICAgc2Vzc2lvbklkLFxuICAgICAgICAgICAgICAgICAgb3BlcmF0aW9uOiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwidG9vbF9leGVjdXRlZFwiLFxuICAgICAgICAgICAgICAgICAgICBkZXRhaWxzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgYWdlbnRJZDogdGFyZ2V0QWdlbnQuaWQsXG4gICAgICAgICAgICAgICAgICAgICAgYWdlbnROYW1lOiB0YXJnZXRBZ2VudC5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgIHRvb2xJZDogYWdlbnRUb29sLmlkLFxuICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBTdG9yZSBhbGwgbWVzc2FnZXMgdG9nZXRoZXJcbiAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2VSZXN1bHRzID0gYXdhaXQgUHJvbWlzZS5hbGwobWVzc2FnZXNUb1N0b3JlKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLinIUgQWdlbnQgZXhlY3V0ZWQgYW5kIG1lc3NhZ2VzIHN0b3JlZDpcIiwgeyBcbiAgICAgICAgICAgICAgbWVzc2FnZUNvdW50OiBtZXNzYWdlUmVzdWx0cy5sZW5ndGgsIFxuICAgICAgICAgICAgICBtZXNzYWdlczogbWVzc2FnZVJlc3VsdHMubWFwKG0gPT4gbSA/ICdzdWNjZXNzJyA6ICdmYWlsZWQnKSxcbiAgICAgICAgICAgICAgcmVzdWx0OiByZXN1bHQuc3Vic3RyaW5nKDAsIDEwMCkgKyAnLi4uJyxcbiAgICAgICAgICAgICAgc2Vzc2lvbklkLFxuICAgICAgICAgICAgICB0ZXJtaW5hbE1lc3NhZ2VTdG9yZWQ6IG1lc3NhZ2VSZXN1bHRzWzJdID8gJ1lFUycgOiAnTk8nXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gU21hbGwgZGVsYXkgdG8gZW5zdXJlIGRhdGFiYXNlIGNvbnNpc3RlbmN5LCB0aGVuIHNjcm9sbCB0byBib3R0b21cbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICBpZiAoc2Nyb2xsUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICAgICAgICBzY3JvbGxSZWYuY3VycmVudC5zY3JvbGxUb3AgPSBzY3JvbGxSZWYuY3VycmVudC5zY3JvbGxIZWlnaHQ7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIDEwMCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignQWdlbnQgdG9vbCBlcnJvcjonLCBlcnJvcik7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIEFkZCB0ZXJtaW5hbCBmZWVkYmFjayBmb3IgYWdlbnQgdG9vbCBlcnJvcnNcbiAgICAgICAgICAgIGNvbnN0IHRlcm1pbmFsRmVlZGJhY2sgPSBgWyR7bmV3IERhdGUoKS50b0xvY2FsZVRpbWVTdHJpbmcoJ2VuLVVTJywgeyBcbiAgICAgICAgICAgICAgaG91cjEyOiBmYWxzZSwgXG4gICAgICAgICAgICAgIGhvdXI6ICcyLWRpZ2l0JywgXG4gICAgICAgICAgICAgIG1pbnV0ZTogJzItZGlnaXQnLCBcbiAgICAgICAgICAgICAgc2Vjb25kOiAnMi1kaWdpdCcgXG4gICAgICAgICAgICB9KX1dIOKdjCAke3RhcmdldEFnZW50Lm5hbWV9IGZhaWxlZDogJHthZ2VudFRvb2wuY29tbWFuZH1cbk9wZXJhdGlvbjogQWdlbnQgdG9vbCBleGVjdXRpb24gZmFpbGVkXG5FcnJvcjogJHtlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ31gO1xuXG4gICAgICAgICAgICBhd2FpdCBzdG9yZUNoYXRNZXNzYWdlKHtcbiAgICAgICAgICAgICAgcm9sZTogXCJ0ZXJtaW5hbFwiLFxuICAgICAgICAgICAgICBjb250ZW50OiB0ZXJtaW5hbEZlZWRiYWNrLFxuICAgICAgICAgICAgICBzZXNzaW9uSWQsXG4gICAgICAgICAgICAgIG9wZXJhdGlvbjoge1xuICAgICAgICAgICAgICAgIHR5cGU6IFwiZXJyb3JcIixcbiAgICAgICAgICAgICAgICBkZXRhaWxzOiB7XG4gICAgICAgICAgICAgICAgICBhZ2VudElkOiB0YXJnZXRBZ2VudC5pZCxcbiAgICAgICAgICAgICAgICAgIGFnZW50TmFtZTogdGFyZ2V0QWdlbnQubmFtZSxcbiAgICAgICAgICAgICAgICAgIHRvb2xJZDogYWdlbnRUb29sLmlkLFxuICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InLFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnN0IGVycm9yUmVzdWx0cyA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgICAgICAgICAgc3RvcmVDaGF0TWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgcm9sZTogXCJ1c2VyXCIsXG4gICAgICAgICAgICAgICAgY29udGVudDogbWVzc2FnZUNvbnRlbnQsXG4gICAgICAgICAgICAgICAgc2Vzc2lvbklkLFxuICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgc3RvcmVDaGF0TWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgcm9sZTogXCJhc3Npc3RhbnRcIixcbiAgICAgICAgICAgICAgICBjb250ZW50OiBg4p2MIEFnZW50IHRvb2wgZmFpbGVkOiAke2Vycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InfWAsXG4gICAgICAgICAgICAgICAgc2Vzc2lvbklkLFxuICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCLinYwgRXJyb3IgbWVzc2FnZXMgc3RvcmVkOlwiLCBlcnJvclJlc3VsdHMpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBDaGVjayBpZiBtZXNzYWdlIHN0YXJ0cyB3aXRoIE1DUCB0b29sIGNvbW1hbmQgKGUuZy4sIC9lYWNfcHJvamVjdF9hbmFseXplKVxuICAgICAgaWYgKG1jcENvbm5lY3RlZCAmJiBtZXNzYWdlQ29udGVudC5zdGFydHNXaXRoKCcvJykgJiYgbWVzc2FnZUNvbnRlbnQuaW5jbHVkZXMoJ2VhY18nKSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIEV4dHJhY3QgdG9vbCBuYW1lIGFuZCBhcmd1bWVudHMgZnJvbSB0aGUgY29tbWFuZFxuICAgICAgICAgIGNvbnN0IHBhcnRzID0gbWVzc2FnZUNvbnRlbnQuc2xpY2UoMSkuc3BsaXQoJyAnKTtcbiAgICAgICAgICBjb25zdCB0b29sTmFtZSA9IHBhcnRzWzBdO1xuICAgICAgICAgIGNvbnN0IHF1ZXJ5ID0gcGFydHMuc2xpY2UoMSkuam9pbignICcpIHx8IGBFeGVjdXRlICR7dG9vbE5hbWV9IHdpdGggZGVmYXVsdCBwYXJhbWV0ZXJzYDtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBDcmVhdGUgYSBkaXJlY3QgdG9vbCBjYWxsIHJlcXVlc3QgaW5zdGVhZCBvZiB1c2luZyBuYXR1cmFsIGxhbmd1YWdlIHByb2Nlc3NpbmdcbiAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL21jcCcsIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgIGFjdGlvbjogJ2NhbGwtdG9vbCcsXG4gICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICBuYW1lOiB0b29sTmFtZSxcbiAgICAgICAgICAgICAgICBhcmd1bWVudHM6IHtcbiAgICAgICAgICAgICAgICAgIHF1ZXJ5OiBxdWVyeSxcbiAgICAgICAgICAgICAgICAgIGluY2x1ZGVQYXR0ZXJuczogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgIGluY2x1ZGVSZWNvbW1lbmRhdGlvbnM6IHRydWUsXG4gICAgICAgICAgICAgICAgICBpbmNsdWRlUHJvcHM6IHRydWUsXG4gICAgICAgICAgICAgICAgICBpbmNsdWRlSG9va3M6IHRydWUsXG4gICAgICAgICAgICAgICAgICBpbmNsdWRlVXNhZ2U6IHRydWUsXG4gICAgICAgICAgICAgICAgICBpbmNsdWRlU2NoZW1hOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgaW5jbHVkZUZ1bmN0aW9uczogdHJ1ZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBcbiAgICAgICAgICBjb25zdCBtY3BSZXNwb25zZSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAobWNwUmVzcG9uc2Uuc3VjY2VzcyAmJiBtY3BSZXNwb25zZS5yZXN1bHQpIHtcbiAgICAgICAgICAgIC8vIEV4dHJhY3QgdGV4dCBjb250ZW50IGZyb20gdGhlIGRpcmVjdCB0b29sIHJlc3VsdFxuICAgICAgICAgICAgbGV0IHRleHRDb250ZW50ID0gJyc7XG4gICAgICAgICAgICBpZiAobWNwUmVzcG9uc2UucmVzdWx0LmNvbnRlbnQgJiYgQXJyYXkuaXNBcnJheShtY3BSZXNwb25zZS5yZXN1bHQuY29udGVudCkpIHtcbiAgICAgICAgICAgICAgdGV4dENvbnRlbnQgPSBtY3BSZXNwb25zZS5yZXN1bHQuY29udGVudFxuICAgICAgICAgICAgICAgIC5maWx0ZXIoKGl0ZW06IHsgdHlwZTogc3RyaW5nOyB0ZXh0Pzogc3RyaW5nIH0pID0+IGl0ZW0udHlwZSA9PT0gJ3RleHQnKVxuICAgICAgICAgICAgICAgIC5tYXAoKGl0ZW06IHsgdHlwZTogc3RyaW5nOyB0ZXh0Pzogc3RyaW5nIH0pID0+IGl0ZW0udGV4dCB8fCAnJylcbiAgICAgICAgICAgICAgICAuam9pbignXFxuJyk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBtY3BSZXNwb25zZS5yZXN1bHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIHRleHRDb250ZW50ID0gbWNwUmVzcG9uc2UucmVzdWx0O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdGV4dENvbnRlbnQgPSBKU09OLnN0cmluZ2lmeShtY3BSZXNwb25zZS5yZXN1bHQsIG51bGwsIDIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBTdHJpcCBtYXJrZG93biBmb3JtYXR0aW5nIGFuZCBjb252ZXJ0IHRvIHBsYWluIHRleHRcbiAgICAgICAgICAgIGNvbnN0IHBsYWluVGV4dCA9IHN0cmlwTWFya2Rvd24odGV4dENvbnRlbnQpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBBZGQgdGVybWluYWwgZmVlZGJhY2sgZm9yIE1DUCB0b29sIGV4ZWN1dGlvblxuICAgICAgICAgICAgY29uc3QgdGVybWluYWxGZWVkYmFjayA9IGBbJHtuZXcgRGF0ZSgpLnRvTG9jYWxlVGltZVN0cmluZygnZW4tVVMnLCB7IFxuICAgICAgICAgICAgICBob3VyMTI6IGZhbHNlLCBcbiAgICAgICAgICAgICAgaG91cjogJzItZGlnaXQnLCBcbiAgICAgICAgICAgICAgbWludXRlOiAnMi1kaWdpdCcsIFxuICAgICAgICAgICAgICBzZWNvbmQ6ICcyLWRpZ2l0JyBcbiAgICAgICAgICAgIH0pfV0g8J+UpyBNQ1AgdG9vbCBleGVjdXRlZDogJHt0b29sTmFtZX1cbk9wZXJhdGlvbjogTUNQIHRvb2wgZXhlY3V0aW9uIGNvbXBsZXRlZFxuUmVzdWx0OiAke3BsYWluVGV4dC5zdWJzdHJpbmcoMCwgMTAwKX0ke3BsYWluVGV4dC5sZW5ndGggPiAxMDAgPyAnLi4uJyA6ICcnfWA7XG5cbiAgICAgICAgICAgIGF3YWl0IHN0b3JlQ2hhdE1lc3NhZ2Uoe1xuICAgICAgICAgICAgICByb2xlOiBcInRlcm1pbmFsXCIsXG4gICAgICAgICAgICAgIGNvbnRlbnQ6IHRlcm1pbmFsRmVlZGJhY2ssXG4gICAgICAgICAgICAgIHNlc3Npb25JZCxcbiAgICAgICAgICAgICAgb3BlcmF0aW9uOiB7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJ0b29sX2V4ZWN1dGVkXCIsXG4gICAgICAgICAgICAgICAgZGV0YWlsczoge1xuICAgICAgICAgICAgICAgICAgdG9vbE5hbWU6IHRvb2xOYW1lLFxuICAgICAgICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBhd2FpdCBzZW5kTWVzc2FnZShg8J+UpyAke3Rvb2xOYW1lfSBSZXN1bHRzOlxcblxcbiR7cGxhaW5UZXh0fWApO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBBZGQgdGVybWluYWwgZmVlZGJhY2sgZm9yIGZhaWxlZCBNQ1AgdG9vbCBleGVjdXRpb25cbiAgICAgICAgICAgIGNvbnN0IHRlcm1pbmFsRmVlZGJhY2sgPSBgWyR7bmV3IERhdGUoKS50b0xvY2FsZVRpbWVTdHJpbmcoJ2VuLVVTJywgeyBcbiAgICAgICAgICAgICAgaG91cjEyOiBmYWxzZSwgXG4gICAgICAgICAgICAgIGhvdXI6ICcyLWRpZ2l0JywgXG4gICAgICAgICAgICAgIG1pbnV0ZTogJzItZGlnaXQnLCBcbiAgICAgICAgICAgICAgc2Vjb25kOiAnMi1kaWdpdCcgXG4gICAgICAgICAgICB9KX1dIOKdjCBNQ1AgdG9vbCBmYWlsZWQ6ICR7dG9vbE5hbWV9XG5PcGVyYXRpb246IE1DUCB0b29sIGV4ZWN1dGlvbiBmYWlsZWRcbkVycm9yOiAke21jcFJlc3BvbnNlLmVycm9yIHx8ICdVbmtub3duIGVycm9yJ31gO1xuXG4gICAgICAgICAgICBhd2FpdCBzdG9yZUNoYXRNZXNzYWdlKHtcbiAgICAgICAgICAgICAgcm9sZTogXCJ0ZXJtaW5hbFwiLFxuICAgICAgICAgICAgICBjb250ZW50OiB0ZXJtaW5hbEZlZWRiYWNrLFxuICAgICAgICAgICAgICBzZXNzaW9uSWQsXG4gICAgICAgICAgICAgIG9wZXJhdGlvbjoge1xuICAgICAgICAgICAgICAgIHR5cGU6IFwiZXJyb3JcIixcbiAgICAgICAgICAgICAgICBkZXRhaWxzOiB7XG4gICAgICAgICAgICAgICAgICB0b29sTmFtZTogdG9vbE5hbWUsXG4gICAgICAgICAgICAgICAgICBlcnJvcjogbWNwUmVzcG9uc2UuZXJyb3IgfHwgJ1Vua25vd24gZXJyb3InLFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGF3YWl0IHNlbmRNZXNzYWdlKGDinYwgRmFpbGVkIHRvIGV4ZWN1dGUgJHt0b29sTmFtZX06ICR7bWNwUmVzcG9uc2UuZXJyb3IgfHwgJ1Vua25vd24gZXJyb3InfWApO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdNQ1AgVG9vbCBFcnJvcjonLCBlcnJvcik7XG4gICAgICAgICAgYXdhaXQgc2VuZE1lc3NhZ2UoYOKdjCBFcnJvciBleGVjdXRpbmcgTUNQIHRvb2w6ICR7ZXJyb3J9YCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAobWNwQ29ubmVjdGVkICYmIGlzTUNQUXVlcnkobWVzc2FnZUNvbnRlbnQpKSB7XG4gICAgICAgIC8vIENoZWNrIGlmIHRoaXMgbG9va3MgbGlrZSBhIG5hdHVyYWwgbGFuZ3VhZ2UgTUNQIHF1ZXJ5XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY29uc3QgbWNwUmVzcG9uc2UgPSBhd2FpdCBwcm9jZXNzTmF0dXJhbExhbmd1YWdlKG1lc3NhZ2VDb250ZW50KTtcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAobWNwUmVzcG9uc2Uuc3VjY2VzcyAmJiBtY3BSZXNwb25zZS5jb250ZW50ICYmIG1jcFJlc3BvbnNlLmNvbnRlbnQubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgLy8gRXh0cmFjdCB0aGUgYWN0dWFsIHRleHQgY29udGVudCBmcm9tIHRoZSBNQ1AgcmVzcG9uc2VcbiAgICAgICAgICAgIGNvbnN0IHRleHRDb250ZW50ID0gbWNwUmVzcG9uc2UuY29udGVudFswXS50ZXh0O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBTdHJpcCBtYXJrZG93biBmb3JtYXR0aW5nIGFuZCBjb252ZXJ0IHRvIHBsYWluIHRleHRcbiAgICAgICAgICAgIGNvbnN0IHBsYWluVGV4dCA9IHN0cmlwTWFya2Rvd24odGV4dENvbnRlbnQpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBTZW5kIHRoZSBNQ1AgcmVzcG9uc2Ugd2l0aCBjbGVhbiB0ZXh0IGNvbnRlbnRcbiAgICAgICAgICAgIGF3YWl0IHNlbmRNZXNzYWdlKGDwn6SWIE1DUCBBbmFseXNpczpcXG5cXG4ke3BsYWluVGV4dH1gKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYXdhaXQgc2VuZE1lc3NhZ2UobWVzc2FnZUNvbnRlbnQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdNQ1AgRXJyb3I6JywgZXJyb3IpO1xuICAgICAgICAgIC8vIEZhbGwgYmFjayB0byByZWd1bGFyIGNoYXRcbiAgICAgICAgICBhd2FpdCBzZW5kTWVzc2FnZShtZXNzYWdlQ29udGVudCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFJlZ3VsYXIgY2hhdCBtZXNzYWdlIC0gYWRkIGluc3RydWN0aW9uIGNvbnRleHQgaWYgYXZhaWxhYmxlXG4gICAgICAgIGxldCBjb250ZXh0dWFsTWVzc2FnZSA9IG1lc3NhZ2VDb250ZW50O1xuICAgICAgICBpZiAoaW5zdHJ1Y3Rpb25Db250ZXh0KSB7XG4gICAgICAgICAgY29udGV4dHVhbE1lc3NhZ2UgPSBgJHtpbnN0cnVjdGlvbkNvbnRleHR9XFxuXFxuLS0tXFxuXFxuJHttZXNzYWdlQ29udGVudH1gO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBVc2UgdGhlIHVzZUNoYXQgaG9vayB3aGljaCB3aWxsIGNhbGwgdGhlIHNlbmRDaGF0TWVzc2FnZSBhY3Rpb25cbiAgICAgICAgLy8gV2UgbmVlZCB0byBtb2RpZnkgdGhlIHVzZUNoYXQgaG9vayB0byBzdXBwb3J0IHBhc3NpbmcgdGhlIG9yaWdpbmFsIG1lc3NhZ2VcbiAgICAgICAgYXdhaXQgc2VuZE1lc3NhZ2UoY29udGV4dHVhbE1lc3NhZ2UsIG1lc3NhZ2VDb250ZW50KTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlS2V5RG93biA9IChlOiBSZWFjdC5LZXlib2FyZEV2ZW50KSA9PiB7XG4gICAgLy8gSWYgVG9vbFNlbGVjdG9yIGlzIG9wZW4sIGxldCBpdCBoYW5kbGUga2V5Ym9hcmQgZXZlbnRzXG4gICAgaWYgKHNob3dUb29sU2VsZWN0b3IpIHtcbiAgICAgIHJldHVybjsgLy8gVG9vbFNlbGVjdG9yIGNvbXBvbmVudCB3aWxsIGhhbmRsZSBpdHMgb3duIGtleWJvYXJkIGV2ZW50c1xuICAgIH1cbiAgICBcbiAgICBpZiAoc2hvd01DUFRvb2xzICYmIGZpbHRlcmVkVG9vbHMubGVuZ3RoID4gMCkge1xuICAgICAgaWYgKGUua2V5ID09PSAnQXJyb3dEb3duJykge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHNldFNlbGVjdGVkVG9vbEluZGV4KHByZXYgPT5cbiAgICAgICAgICBwcmV2IDwgZmlsdGVyZWRUb29scy5sZW5ndGggLSAxID8gcHJldiArIDEgOiAwXG4gICAgICAgICk7XG4gICAgICB9IGVsc2UgaWYgKGUua2V5ID09PSAnQXJyb3dVcCcpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBzZXRTZWxlY3RlZFRvb2xJbmRleChwcmV2ID0+XG4gICAgICAgICAgcHJldiA+IDAgPyBwcmV2IC0gMSA6IGZpbHRlcmVkVG9vbHMubGVuZ3RoIC0gMVxuICAgICAgICApO1xuICAgICAgfSBlbHNlIGlmIChlLmtleSA9PT0gJ1RhYicgfHwgZS5rZXkgPT09ICdFbnRlcicpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBpZiAoc2VsZWN0ZWRUb29sSW5kZXggPj0gMCAmJiBzZWxlY3RlZFRvb2xJbmRleCA8IGZpbHRlcmVkVG9vbHMubGVuZ3RoKSB7XG4gICAgICAgICAgY29uc3Qgc2VsZWN0ZWRUb29sID0gZmlsdGVyZWRUb29sc1tzZWxlY3RlZFRvb2xJbmRleF07XG4gICAgICAgICAgY29uc3QgY29tbWFuZFRvVXNlID0gJ2NvbW1hbmQnIGluIHNlbGVjdGVkVG9vbCA/IHNlbGVjdGVkVG9vbC5jb21tYW5kIDogYC8ke3NlbGVjdGVkVG9vbC5uYW1lfWA7XG4gICAgICAgICAgc2V0TWVzc2FnZShgJHtjb21tYW5kVG9Vc2V9IGApO1xuICAgICAgICAgIHNldFNob3dNQ1BUb29scyhmYWxzZSk7XG4gICAgICAgICAgc2V0U2VsZWN0ZWRUb29sSW5kZXgoLTEpO1xuICAgICAgICAgIGlucHV0UmVmLmN1cnJlbnQ/LmZvY3VzKCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoZS5rZXkgPT09ICdFc2NhcGUnKSB7XG4gICAgICAgIHNldFNob3dNQ1BUb29scyhmYWxzZSk7XG4gICAgICAgIHNldFNlbGVjdGVkVG9vbEluZGV4KC0xKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGUua2V5ID09PSAnRW50ZXInICYmICFlLnNoaWZ0S2V5KSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBoYW5kbGVTdWJtaXQoZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUlucHV0Q2hhbmdlID0gKGU6IFJlYWN0LkNoYW5nZUV2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSA9PiB7XG4gICAgY29uc3QgdmFsdWUgPSBlLnRhcmdldC52YWx1ZTtcbiAgICBzZXRNZXNzYWdlKHZhbHVlKTtcbiAgICBcbiAgICAvLyBTaG93IFRvb2xTZWxlY3RvciB3aGVuIG1lc3NhZ2UgaXMgZXhhY3RseSAnLydcbiAgICBpZiAodmFsdWUgPT09ICcvJykge1xuICAgICAgc2V0U2hvd1Rvb2xTZWxlY3Rvcih0cnVlKTtcbiAgICAgIHNldFNlbGVjdGVkU2VsZWN0b3JJbmRleCgwKTtcbiAgICAgIHNldFNob3dNQ1BUb29scyhmYWxzZSk7XG4gICAgICBzZXRTaG93Q29tbWFuZEhpbnRzKGZhbHNlKTtcbiAgICAgIHJldHVybjtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0U2hvd1Rvb2xTZWxlY3RvcihmYWxzZSk7XG4gICAgfVxuICAgIFxuICAgIC8vIFNob3cgdG9vbHMgbWVudSB3aGVuIG1lc3NhZ2Ugc3RhcnRzIHdpdGggJy8nIGFuZCBpcyBqdXN0IG9uZSBjaGFyYWN0ZXIgb3Igd2hlbiB0eXBpbmcgdG9vbCBuYW1lXG4gICAgaWYgKHZhbHVlLnN0YXJ0c1dpdGgoJy8nKSAmJiAhdmFsdWUuaW5jbHVkZXMoJyAnKSkge1xuICAgICAgc2V0U2hvd01DUFRvb2xzKHRydWUpO1xuICAgICAgc2V0U2hvd0NvbW1hbmRIaW50cyhmYWxzZSk7XG4gICAgICAvLyBBdXRvLXNlbGVjdCBmaXJzdCBtYXRjaGluZyB0b29sIGlmIHR5cGluZ1xuICAgICAgaWYgKHZhbHVlLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgY29uc3Qgc2VhcmNoVGVybSA9IHZhbHVlLnNsaWNlKDEpLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRGaWx0ZXJlZCA9IGZpbHRlcmVkVG9vbHMuZmlsdGVyKHRvb2wgPT4ge1xuICAgICAgICAgIGNvbnN0IHRvb2xOYW1lID0gJ2NvbW1hbmQnIGluIHRvb2wgJiYgdG9vbC5jb21tYW5kID8gdG9vbC5jb21tYW5kLnNsaWNlKDEpIDogdG9vbC5uYW1lO1xuICAgICAgICAgIHJldHVybiB0b29sTmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlYXJjaFRlcm0pO1xuICAgICAgICB9KTtcbiAgICAgICAgc2V0U2VsZWN0ZWRUb29sSW5kZXgoY3VycmVudEZpbHRlcmVkLmxlbmd0aCA+IDAgPyAwIDogLTEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0U2VsZWN0ZWRUb29sSW5kZXgoMCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICh2YWx1ZS5zdGFydHNXaXRoKCcvJykgJiYgdmFsdWUuaW5jbHVkZXMoJyAnKSkge1xuICAgICAgLy8gSGlkZSBtZW51IG9uY2UgdXNlciBoYXMgc2VsZWN0ZWQgYSB0b29sIGFuZCBhZGRlZCBzcGFjZVxuICAgICAgc2V0U2hvd01DUFRvb2xzKGZhbHNlKTtcbiAgICAgIHNldFNlbGVjdGVkVG9vbEluZGV4KC0xKTtcbiAgICB9IGVsc2UgaWYgKCF2YWx1ZS5zdGFydHNXaXRoKCcvJykpIHtcbiAgICAgIHNldFNob3dNQ1BUb29scyhmYWxzZSk7XG4gICAgICBzZXRTZWxlY3RlZFRvb2xJbmRleCgtMSk7XG4gICAgICAvLyBTaG93IHJlZ3VsYXIgY29tbWFuZCBoaW50cyBmb3Igb3RoZXIgY29tbWFuZHMgKGtlZXAgZXhpc3RpbmcgbG9naWMpXG4gICAgICBzZXRTaG93Q29tbWFuZEhpbnRzKHZhbHVlLnN0YXJ0c1dpdGgoJy8nKSAmJiB2YWx1ZS5sZW5ndGggPiAxKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gSGVscGVyIGZ1bmN0aW9uIHRvIGdldCBhdmFpbGFibGUgdG9vbHMgYmFzZWQgb24gY3VycmVudCBtb2RlXG4gIGNvbnN0IGdldEF2YWlsYWJsZVRvb2xzID0gKCkgPT4ge1xuICAgIGlmICh0b29sc01vZGUgPT09ICdhZ2VudHMnKSB7XG4gICAgICBpZiAoYWN0aXZlQWdlbnRJZCkge1xuICAgICAgICBjb25zdCBhY3RpdmVBZ2VudCA9IGFnZW50cy5maW5kKGEgPT4gYS5pZCA9PT0gYWN0aXZlQWdlbnRJZCk7XG4gICAgICAgIHJldHVybiBhY3RpdmVBZ2VudD8udG9vbHMubWFwKHRvb2wgPT4gKHtcbiAgICAgICAgICBuYW1lOiB0b29sLmNvbW1hbmQuc2xpY2UoMSksIC8vIFJlbW92ZSB0aGUgJy8nIHByZWZpeFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiB0b29sLmRlc2NyaXB0aW9uLFxuICAgICAgICAgIGNvbW1hbmQ6IHRvb2wuY29tbWFuZFxuICAgICAgICB9KSkgfHwgW107XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBSZXR1cm4gZW1wdHkgYXJyYXkgd2hlbiBpbiBhZ2VudCBtb2RlIGJ1dCBubyBhZ2VudCBpcyBzZWxlY3RlZFxuICAgICAgICByZXR1cm4gW107XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIE1DUCBtb2RlIC0gcmV0dXJuIE1DUCB0b29sc1xuICAgICAgcmV0dXJuIGF2YWlsYWJsZVRvb2xzIHx8IFtdO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBjdXJyZW50VG9vbHMgPSBnZXRBdmFpbGFibGVUb29scygpO1xuXG4gIGNvbnN0IGhhbmRsZVRvb2xTZWxlY3QgPSAodG9vbDogeyBuYW1lOiBzdHJpbmc7IGRlc2NyaXB0aW9uOiBzdHJpbmc7IGNvbW1hbmQ/OiBzdHJpbmcgfSkgPT4ge1xuICAgIGNvbnN0IGNvbW1hbmRUb1VzZSA9IHRvb2wuY29tbWFuZCB8fCBgLyR7dG9vbC5uYW1lfWA7XG4gICAgc2V0TWVzc2FnZShgJHtjb21tYW5kVG9Vc2V9IGApO1xuICAgIHNldFNob3dNQ1BUb29scyhmYWxzZSk7XG4gICAgc2V0U2VsZWN0ZWRUb29sSW5kZXgoLTEpO1xuICAgIGlucHV0UmVmLmN1cnJlbnQ/LmZvY3VzKCk7XG4gIH07XG5cbiAgLy8gRmlsdGVyIHRvb2xzIGJhc2VkIG9uIGlucHV0IGFuZCBjdXJyZW50IG1vZGVcbiAgY29uc3QgZmlsdGVyZWRUb29scyA9IGN1cnJlbnRUb29scy5maWx0ZXIodG9vbCA9PiB7XG4gICAgaWYgKCFtZXNzYWdlLnN0YXJ0c1dpdGgoJy8nKSB8fCBtZXNzYWdlLmxlbmd0aCA9PT0gMSkgcmV0dXJuIHRydWU7XG4gICAgY29uc3Qgc2VhcmNoVGVybSA9IG1lc3NhZ2Uuc2xpY2UoMSkuc3BsaXQoJyAnKVswXS50b0xvd2VyQ2FzZSgpO1xuICAgIGNvbnN0IHRvb2xOYW1lID0gJ2NvbW1hbmQnIGluIHRvb2wgJiYgdG9vbC5jb21tYW5kID8gdG9vbC5jb21tYW5kLnNsaWNlKDEpIDogdG9vbC5uYW1lO1xuICAgIHJldHVybiB0b29sTmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlYXJjaFRlcm0pO1xuICB9KTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgXG4gICAgICByZWY9e3Njcm9sbFJlZn0gXG4gICAgICBjbGFzc05hbWU9XCJmbGV4LTEgb3ZlcmZsb3cteS1hdXRvIGJnLVsjMGUwZTBlXSBwLTIgbWluLWgtMCBzY3JvbGxiYXItaGlkZGVuXCJcbiAgICA+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvbnQtbW9ubyB0ZXh0LXhzIHNwYWNlLXktMiBtaW4taC1mdWxsXCI+XG4gICAgICAgIHsvKiBUZXJtaW5hbCBXZWxjb21lIFRleHQgKi99XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1bI2NjY2NjY10gc3BhY2UteS0xIG1iLTRcIj5cbiAgICAgICAgICA8ZGl2PkVBQyBGaW5hbmNpYWwgRGFzaGJvYXJkIC0gQUkgQXNzaXN0YW50PC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LVsjNGVjOWIwXVwiPuKWsiBOZXh0LmpzIDE1LjAuMCArIENvbnZleCBCYWNrZW5kPC9kaXY+XG4gICAgICAgICAgPGRpdj4tIEFudGhyb3BpYyBDbGF1ZGUgMy41IFNvbm5ldCBJbnRlZ3JhdGlvbjwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgdGV4dC14cyAke21jcENvbm5lY3RlZCA/ICd0ZXh0LVsjNGVjOWIwXScgOiAndGV4dC1bI2Y0ODc3MV0nfWB9PlxuICAgICAgICAgICAg8J+UjCBNQ1AgU2VydmVyOiB7bWNwQ29ubmVjdGVkID8gJ0Nvbm5lY3RlZCcgOiAnRGlzY29ubmVjdGVkJ31cbiAgICAgICAgICAgIHttY3BDb25uZWN0ZWQgJiYgYCAoJHthdmFpbGFibGVUb29scy5sZW5ndGh9IHRvb2xzKWB9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2B0ZXh0LXhzICR7YWN0aXZlQWdlbnRJZCA/ICd0ZXh0LVsjNGVjOWIwXScgOiAndGV4dC1bIzg1ODU4NV0nfWB9PlxuICAgICAgICAgICAg8J+kliBBZ2VudHM6IHthY3RpdmVBZ2VudElkID8gYEFjdGl2ZSAoJHthZ2VudHMuZmluZChhID0+IGEuaWQgPT09IGFjdGl2ZUFnZW50SWQpPy5uYW1lfSlgIDogJ05vbmUgc2VsZWN0ZWQnfVxuICAgICAgICAgICAge2FjdGl2ZUFnZW50SWQgJiYgYCAoJHthZ2VudHMuZmluZChhID0+IGEuaWQgPT09IGFjdGl2ZUFnZW50SWQpPy50b29scy5sZW5ndGggfHwgMH0gdG9vbHMpYH1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICB7bWNwRXJyb3IgJiYgKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LVsjZjQ4NzcxXSB0ZXh0LXhzXCI+TUNQIEVycm9yOiB7bWNwRXJyb3J9PC9kaXY+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtWyM4NTg1ODVdIG10LTJcIj5BSSBBc3Npc3RhbnQgcmVhZHkgZm9yIEVBQyBwcm9qZWN0IHF1ZXN0aW9ucy48L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtWyM4NTg1ODVdIHRleHQteHNcIj5TZXNzaW9uOiB7c2Vzc2lvbklkLnNsaWNlKC04KX08L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtWyM4NTg1ODVdIHRleHQteHNcIj5NZXNzYWdlczoge21lc3NhZ2VDb3VudH0vNTAwPC9kaXY+XG4gICAgICAgICAgXG4gICAgICAgICAgey8qIFNlc3Npb24gTGltaXQgV2FybmluZyAqL31cbiAgICAgICAgICB7aXNBdFNlc3Npb25MaW1pdCAmJiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtWyNmNDg3NzFdIHRleHQteHMgYmctWyMxYTFhMWFdIGJvcmRlciBib3JkZXItWyNmNDg3NzFdIHJvdW5kZWQgcHgtMiBweS0xIG10LTJcIj5cbiAgICAgICAgICAgICAg8J+aqCBTZXNzaW9uIGxpbWl0IHJlYWNoZWQgKDUwMCBtZXNzYWdlcykuIFBsZWFzZSBzdGFydCBhIG5ldyBzZXNzaW9uIHRvIGNvbnRpbnVlLlxuICAgICAgICAgICAgICA8YnV0dG9uIFxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3N0YXJ0TmV3U2Vzc2lvbn1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJtbC0yIHB4LTIgcHktMSBiZy1bIzAwN2FjY10gdGV4dC13aGl0ZSByb3VuZGVkIHRleHQteHMgaG92ZXI6YmctWyMwMDVhOWVdIHRyYW5zaXRpb24tY29sb3JzXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIFN0YXJ0IE5ldyBTZXNzaW9uXG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKX1cbiAgICAgICAgICB7aXNOZWFyU2Vzc2lvbkxpbWl0ICYmICFpc0F0U2Vzc2lvbkxpbWl0ICYmIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1bI2ZmY2MwMl0gdGV4dC14cyBiZy1bIzFhMWExYV0gYm9yZGVyIGJvcmRlci1bI2ZmY2MwMl0gcm91bmRlZCBweC0yIHB5LTEgbXQtMlwiPlxuICAgICAgICAgICAgICDimqDvuI8gQXBwcm9hY2hpbmcgc2Vzc2lvbiBsaW1pdCAoe21lc3NhZ2VDb3VudH0vNTAwIG1lc3NhZ2VzKS4gQ29uc2lkZXIgc3RhcnRpbmcgYSBuZXcgc2Vzc2lvbiBzb29uLlxuICAgICAgICAgICAgICA8YnV0dG9uIFxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3N0YXJ0TmV3U2Vzc2lvbn1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJtbC0yIHB4LTIgcHktMSBiZy1bI2ZmY2MwMl0gdGV4dC1ibGFjayByb3VuZGVkIHRleHQteHMgaG92ZXI6YmctWyNlNmI4MDBdIHRyYW5zaXRpb24tY29sb3JzXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIFN0YXJ0IE5ldyBTZXNzaW9uXG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKX1cbiAgICAgICAgICBcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtWyM4NTg1ODVdIGJvcmRlci10IGJvcmRlci1bIzMzM10gcHQtMiBtdC0zXCI+XG4gICAgICAgICAgICBUeXBlIHlvdXIgcXVlc3Rpb25zIGFib3V0IHByb2plY3RzLCBmaW5hbmNpYWxzLCBSZWRkaXQgaW50ZWdyYXRpb24sIG9yIGRldmVsb3BtZW50IGJlbG93LlxuICAgICAgICAgICAge21jcENvbm5lY3RlZCAmJiA8ZGl2IGNsYXNzTmFtZT1cInRleHQteHMgdGV4dC1bIzRlYzliMF0gbXQtMVwiPkVuaGFuY2VkOiBUcnkgJmxkcXVvO2FuYWx5emUgbXkgcmVkZGl0IGludGVncmF0aW9uJnJkcXVvOyBvciAmbGRxdW87b3B0aW1pemUgbXkgd29ya2Zsb3cmcmRxdW87PC9kaXY+fVxuICAgICAgICAgICAge2FjdGl2ZUFnZW50SWQgJiYgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXhzIHRleHQtWyM0ZWM5YjBdIG10LTFcIj5BZ2VudCBBY3RpdmU6IFR5cGUgJmxkcXVvOy8mcmRxdW87IHRvIHNlZSBhdmFpbGFibGUgYWdlbnQgdG9vbHM8L2Rpdj59XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIHsvKiBDaGF0IE1lc3NhZ2VzICovfVxuICAgICAgICB7bWVzc2FnZXM/Lm1hcCgobXNnKSA9PiAoXG4gICAgICAgICAgPGRpdiBrZXk9e21zZy5faWR9IGNsYXNzTmFtZT1cInNwYWNlLXktMVwiPlxuICAgICAgICAgICAge21zZy5yb2xlID09PSAndXNlcicgJiYgKFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtWyNjY2NjY2NdXCI+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC1bIzAwN2FjY11cIj4kIHVzZXI6PC9zcGFuPiB7bXNnLmNvbnRlbnR9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAge21zZy5yb2xlID09PSAnYXNzaXN0YW50JyAmJiAoXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1bI2NjY2NjY11cIj5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LVsjNGVjOWIwXVwiPiQgc3lzdGVtOjwvc3Bhbj4gPHNwYW4gY2xhc3NOYW1lPVwid2hpdGVzcGFjZS1wcmUtd3JhcFwiPnttc2cuY29udGVudH08L3NwYW4+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAge21zZy5yb2xlID09PSAnc3lzdGVtJyAmJiAoXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1bI2Y0ODc3MV1cIj5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LVsjZjQ4NzcxXVwiPiQgZXJyb3I6PC9zcGFuPiB7bXNnLmNvbnRlbnR9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAge21zZy5yb2xlID09PSAndGVybWluYWwnICYmIChcbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LVsjY2NjY2NjXSBmb250LW1vbm9cIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIndoaXRlc3BhY2UtcHJlLXdyYXAgYmctWyMxYTFhMWFdIGJvcmRlci1sLTIgYm9yZGVyLVsjNGVjOWIwXSBwbC0zIHB5LTEgbXktMVwiPlxuICAgICAgICAgICAgICAgICAge21zZy5jb250ZW50fVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICkpfVxuICAgICAgICBcbiAgICAgICAgey8qIExvYWRpbmcgaW5kaWNhdG9yICovfVxuICAgICAgICB7aXNMb2FkaW5nICYmIChcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtWyNjY2NjY2NdXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LVsjNGVjOWIwXVwiPiQgc3lzdGVtOjwvc3Bhbj4gPHNwYW4gY2xhc3NOYW1lPVwidGV4dC1bIzg1ODU4NV0gYW5pbWF0ZS1wdWxzZVwiPnRoaW5raW5nLi4uPC9zcGFuPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuXG4gICAgICAgIHsvKiBJbmxpbmUgSW5wdXQgKi99XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBmbGV4LWNvbCBwdC0yXCI+XG4gICAgICAgICAgey8qIFRvb2xzIE1lbnUgKi99XG4gICAgICAgICAge3Nob3dNQ1BUb29scyAmJiBjdXJyZW50VG9vbHMgJiYgY3VycmVudFRvb2xzLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYi0yIGJnLVsjMWExYTFhXSBib3JkZXIgYm9yZGVyLVsjMzMzXSByb3VuZGVkIHRleHQteHMgbWF4LWgtNDggb3ZlcmZsb3cteS1hdXRvXCI+XG4gICAgICAgICAgICAgIHsvKiBUb29scyBUb2dnbGUgKi99XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHAtMiBib3JkZXItYiBib3JkZXItWyMzMzNdXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LVsjNGVjOWIwXSB0ZXh0LXhzIGZvbnQtbWVkaXVtXCI+XG4gICAgICAgICAgICAgICAgICB7dG9vbHNNb2RlID09PSAnbWNwJyA/ICdNQ1AgVG9vbHMnIDogJ0FnZW50IFRvb2xzJ30gKHtmaWx0ZXJlZFRvb2xzLmxlbmd0aH0gb2Yge2N1cnJlbnRUb29scy5sZW5ndGh9IGF2YWlsYWJsZSlcbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8VG9vbHNUb2dnbGVcbiAgICAgICAgICAgICAgICAgIG1vZGU9e3Rvb2xzTW9kZX1cbiAgICAgICAgICAgICAgICAgIG9uTW9kZUNoYW5nZT17c2V0VG9vbHNNb2RlfVxuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwic2NhbGUtOTBcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgey8qIFRvb2xzIExpc3QgKi99XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicC0yIHNwYWNlLXktMVwiPlxuICAgICAgICAgICAgICAgIHtmaWx0ZXJlZFRvb2xzLmxlbmd0aCA+IDAgPyAoXG4gICAgICAgICAgICAgICAgICBmaWx0ZXJlZFRvb2xzLm1hcCgodG9vbCwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGlzcGxheU5hbWUgPSAnY29tbWFuZCcgaW4gdG9vbCAmJiB0b29sLmNvbW1hbmQgPyB0b29sLmNvbW1hbmQgOiBgLyR7dG9vbC5uYW1lfWA7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAga2V5PXt0b29sLm5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2B0ZXh0LVsjY2NjY2NjXSBweS0xIHB4LTIgcm91bmRlZCBjdXJzb3ItcG9pbnRlciBob3ZlcjpiZy1bIzJhMmEyYV0gJHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRUb29sSW5kZXggPT09IGluZGV4ID8gJ2JnLVsjMGU2MzljXSB0ZXh0LXdoaXRlJyA6ICcnXG4gICAgICAgICAgICAgICAgICAgICAgICB9YH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IGhhbmRsZVRvb2xTZWxlY3QodG9vbCl9XG4gICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb250LXNlbWlib2xkXCI+e2Rpc3BsYXlOYW1lfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LVsjODU4NTg1XSB0ZXh0LXhzIG10LTAuNVwiPnt0b29sLmRlc2NyaXB0aW9ufTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LVsjODU4NTg1XSBweS0yIHRleHQtY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgIHt0b29sc01vZGUgPT09ICdhZ2VudHMnICYmICFhY3RpdmVBZ2VudElkXG4gICAgICAgICAgICAgICAgICAgICAgPyAnTm8gYWdlbnQgc2VsZWN0ZWQuIFNlbGVjdCBhbiBhZ2VudCBmcm9tIHRoZSBBZ2VudHMgcGFuZWwuJ1xuICAgICAgICAgICAgICAgICAgICAgIDogYE5vICR7dG9vbHNNb2RlID09PSAnbWNwJyA/ICdNQ1AnIDogJ2FnZW50J30gdG9vbHMgYXZhaWxhYmxlLmBcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtWyM4NTg1ODVdIHRleHQteHMgcC0yIGJvcmRlci10IGJvcmRlci1bIzMzM11cIj5cbiAgICAgICAgICAgICAgICDihpHihpMgbmF2aWdhdGUg4oCiIEVudGVyL1RhYiBzZWxlY3Qg4oCiIEVzYyBjYW5jZWxcbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApfVxuXG4gICAgICAgICAgey8qIFRvb2wgU2VsZWN0b3IgKi99XG4gICAgICAgICAge3Nob3dUb29sU2VsZWN0b3IgJiYgKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYi0yIHJlbGF0aXZlXCI+XG4gICAgICAgICAgICAgIDxUb29sU2VsZWN0b3JcbiAgICAgICAgICAgICAgICBvblRvb2xTZWxlY3Q9e2hhbmRsZVRvb2xTZWxlY3RvclNlbGVjdH1cbiAgICAgICAgICAgICAgICBvbkNsb3NlPXtoYW5kbGVUb29sU2VsZWN0b3JDbG9zZX1cbiAgICAgICAgICAgICAgICBzZWxlY3RlZEluZGV4PXtzZWxlY3RlZFNlbGVjdG9ySW5kZXh9XG4gICAgICAgICAgICAgICAgb25JbmRleENoYW5nZT17c2V0U2VsZWN0ZWRTZWxlY3RvckluZGV4fVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKX1cblxuICAgICAgICAgIHsvKiBDb21tYW5kIEhpbnRzICovfVxuICAgICAgICAgIHtzaG93Q29tbWFuZEhpbnRzICYmIGZpbHRlcmVkQ29tbWFuZHMubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1iLTIgcC0yIGJnLVsjMWExYTFhXSBib3JkZXIgYm9yZGVyLVsjMzMzXSByb3VuZGVkIHRleHQteHNcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LVsjNGVjOWIwXSBtYi0xXCI+QXZhaWxhYmxlIENvbW1hbmRzOjwvZGl2PlxuICAgICAgICAgICAgICB7ZmlsdGVyZWRDb21tYW5kcy5zbGljZSgwLCA1KS5tYXAoKGNtZCkgPT4gKFxuICAgICAgICAgICAgICAgIDxkaXYga2V5PXtjbWQuY29tbWFuZH0gY2xhc3NOYW1lPVwidGV4dC1bIzg1ODU4NV0gcHktMC41XCI+XG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LVsjY2NjY2NjXVwiPntjbWQuY29tbWFuZH08L3NwYW4+IC0ge2NtZC5kZXNjcmlwdGlvbn1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApfVxuICAgICAgICAgIFxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXJcIj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtWyMwMDdhY2NdXCI+JCB1c2VyOjwvc3Bhbj5cbiAgICAgICAgICAgIDxmb3JtIG9uU3VibWl0PXtoYW5kbGVTdWJtaXR9IGNsYXNzTmFtZT1cImZsZXgtMSBtbC0xXCI+XG4gICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIHJlZj17aW5wdXRSZWZ9XG4gICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgIHZhbHVlPXttZXNzYWdlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVJbnB1dENoYW5nZX1cbiAgICAgICAgICAgICAgICBvbktleURvd249e2hhbmRsZUtleURvd259XG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e1xuICAgICAgICAgICAgICAgICAgaXNBdFNlc3Npb25MaW1pdCBcbiAgICAgICAgICAgICAgICAgICAgPyBcIlNlc3Npb24gbGltaXQgcmVhY2hlZCAtIFN0YXJ0IG5ldyBzZXNzaW9uIHRvIGNvbnRpbnVlLi4uXCIgXG4gICAgICAgICAgICAgICAgICAgIDogaXNMb2FkaW5nIFxuICAgICAgICAgICAgICAgICAgICAgID8gXCJBSSBpcyB0aGlua2luZy4uLlwiIFxuICAgICAgICAgICAgICAgICAgICAgIDogXCJUeXBlIC8gZm9yIE1DUCB0b29scyBvciBhc2sgYWJvdXQgeW91ciBFQUMgcHJvamVjdC4uLlwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGRpc2FibGVkPXtpc0xvYWRpbmcgfHwgaXNBdFNlc3Npb25MaW1pdH1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2B3LWZ1bGwgYmctdHJhbnNwYXJlbnQgYm9yZGVyLW5vbmUgb3V0bGluZS1ub25lIHBsYWNlaG9sZGVyOnRleHQtWyM4NTg1ODVdIGRpc2FibGVkOm9wYWNpdHktNTAgZGlzYWJsZWQ6Y3Vyc29yLW5vdC1hbGxvd2VkIGNhcmV0LVsjY2NjY2NjXSAke1xuICAgICAgICAgICAgICAgICAgaXNBdFNlc3Npb25MaW1pdCA/ICd0ZXh0LVsjZjQ4NzcxXScgOiAndGV4dC1bI2NjY2NjY10nXG4gICAgICAgICAgICAgICAgfWB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59XG4iXSwibmFtZXMiOlsiYXBpIiwiY2hhdENvbW1hbmRzIiwidXNlQ2hhdCIsInVzZUluc3RydWN0aW9uQ29udGV4dCIsInVzZUluc3RydWN0aW9ucyIsInVzZU1DUCIsInVzZUFnZW50U3RvcmUiLCJ1c2VDaGF0U3RvcmUiLCJ1c2VTZXNzaW9uU3RvcmUiLCJ1c2VVc2VyIiwidXNlTXV0YXRpb24iLCJ1c2VRdWVyeSIsIlJlYWN0IiwidXNlRWZmZWN0IiwidXNlUmVmIiwidXNlU3RhdGUiLCJUb29sU2VsZWN0b3IiLCJUb29sc1RvZ2dsZSIsIkNoYXRNZXNzYWdlcyIsImFnZW50cyIsInNjcm9sbFJlZiIsImlucHV0UmVmIiwibWVzc2FnZSIsInNldE1lc3NhZ2UiLCJzaG93Q29tbWFuZEhpbnRzIiwic2V0U2hvd0NvbW1hbmRIaW50cyIsInNob3dNQ1BUb29scyIsInNldFNob3dNQ1BUb29scyIsInNlbGVjdGVkVG9vbEluZGV4Iiwic2V0U2VsZWN0ZWRUb29sSW5kZXgiLCJ0b29sc01vZGUiLCJzZXRUb29sc01vZGUiLCJzaG93VG9vbFNlbGVjdG9yIiwic2V0U2hvd1Rvb2xTZWxlY3RvciIsInNlbGVjdGVkU2VsZWN0b3JJbmRleCIsInNldFNlbGVjdGVkU2VsZWN0b3JJbmRleCIsInVzZXIiLCJpc0xvYWRlZCIsImluaXRpYWxpemVVc2VyU2Vzc2lvbiIsImFkZFRlcm1pbmFsRmVlZGJhY2siLCJzZXRTZXNzaW9uSWQiLCJsb2FkTWVzc2FnZXNGb3JTZXNzaW9uIiwiYWN0aXZlU2Vzc2lvbklkIiwibWVzc2FnZXMiLCJpc0xvYWRpbmciLCJjaGF0TG9hZGluZyIsInNlbmRNZXNzYWdlIiwic2Vzc2lvbklkIiwic3RvcmVDaGF0TWVzc2FnZSIsInVzZVRlcm1pbmFsRmVlZGJhY2siLCJtZXNzYWdlQ291bnQiLCJpc05lYXJTZXNzaW9uTGltaXQiLCJpc0F0U2Vzc2lvbkxpbWl0IiwiY2FuQWRkTWVzc2FnZXMiLCJnZXRTZXNzaW9uU3RhdHVzIiwic3RhcnROZXdTZXNzaW9uIiwiaXNDb25uZWN0ZWQiLCJtY3BDb25uZWN0ZWQiLCJtY3BMb2FkaW5nIiwiZXJyb3IiLCJtY3BFcnJvciIsInByb2Nlc3NOYXR1cmFsTGFuZ3VhZ2UiLCJhdmFpbGFibGVUb29scyIsImFjdGl2ZUFnZW50SWQiLCJleGVjdXRlQWdlbnRUb29sIiwic2V0QWN0aXZlQWdlbnQiLCJjcmVhdGVJbnN0cnVjdGlvbiIsImVuc3VyZUluc3RydWN0aW9uc1Byb2plY3QiLCJpbnN0cnVjdGlvbkNvbnRleHQiLCJ1cHNlcnRQb3N0Iiwic29jaWFsUG9zdHMiLCJnZXRDaGF0TWVzc2FnZXMiLCJpZCIsInN0cmlwTWFya2Rvd24iLCJ0ZXh0IiwicmVwbGFjZSIsInNwbGl0IiwibWFwIiwibGluZSIsInRyaW0iLCJzdGFydHNXaXRoIiwibGVuZ3RoIiwiam9pbiIsImZpbHRlcmVkQ29tbWFuZHMiLCJmaWx0ZXIiLCJjbWQiLCJjb21tYW5kIiwidG9Mb3dlckNhc2UiLCJpbmNsdWRlcyIsImN1cnJlbnQiLCJzY3JvbGxUb3AiLCJzY3JvbGxIZWlnaHQiLCJmb2N1cyIsImNvbnNvbGUiLCJsb2ciLCJ0b3RhbE1lc3NhZ2VzIiwibWVzc2FnZVR5cGVzIiwibSIsInJvbGUiLCJ0ZXJtaW5hbE1lc3NhZ2VzIiwibGFzdE1lc3NhZ2UiLCJzZXNzaW9uU3RhdHVzIiwic3RhdHVzIiwibGltaXQiLCJpc01DUFF1ZXJ5IiwiaW5wdXQiLCJtc2ciLCJtYXRjaCIsImV4cGxpY2l0TUNQUGF0dGVybnMiLCJsb3dlcklucHV0Iiwic29tZSIsInBhdHRlcm4iLCJ0ZXN0IiwiaGFuZGxlVG9vbFNlbGVjdG9yU2VsZWN0IiwiaGFuZGxlVG9vbFNlbGVjdG9yQ2xvc2UiLCJoYW5kbGVTdWJtaXQiLCJlIiwicHJldmVudERlZmF1bHQiLCJ3YXJuIiwiY29udGVudCIsIkRhdGUiLCJ0b0xvY2FsZVRpbWVTdHJpbmciLCJob3VyMTIiLCJob3VyIiwibWludXRlIiwic2Vjb25kIiwibWVzc2FnZUNvbnRlbnQiLCJ0YXJnZXRBZ2VudCIsImFnZW50VG9vbCIsImFnZW50IiwidG9vbCIsInRvb2xzIiwiZmluZCIsInQiLCJjb252ZXhNdXRhdGlvbnMiLCJjcmVhdGVJbnN0cnVjdGlvbkZpbGUiLCJyZXN1bHQiLCJleHRyYWN0ZWRGaWxlTmFtZSIsImZpbGVNYXRjaCIsInR3aXR0ZXJGaWxlTWF0Y2giLCJtZXNzYWdlc1RvU3RvcmUiLCJpc0ZpbGVDcmVhdGlvbiIsImhhc1N1Y2Nlc3MiLCJyZXN1bHRTbmlwcGV0Iiwic3Vic3RyaW5nIiwidGVybWluYWxGZWVkYmFjayIsIm5hbWUiLCJwdXNoIiwib3BlcmF0aW9uIiwidHlwZSIsImRldGFpbHMiLCJhZ2VudElkIiwiYWdlbnROYW1lIiwidG9vbElkIiwiZmlsZU5hbWUiLCJzdWNjZXNzIiwibWVzc2FnZVJlc3VsdHMiLCJQcm9taXNlIiwiYWxsIiwidGVybWluYWxNZXNzYWdlU3RvcmVkIiwic2V0VGltZW91dCIsIkVycm9yIiwiZXJyb3JSZXN1bHRzIiwicGFydHMiLCJzbGljZSIsInRvb2xOYW1lIiwicXVlcnkiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiYWN0aW9uIiwiZGF0YSIsImFyZ3VtZW50cyIsImluY2x1ZGVQYXR0ZXJucyIsImluY2x1ZGVSZWNvbW1lbmRhdGlvbnMiLCJpbmNsdWRlUHJvcHMiLCJpbmNsdWRlSG9va3MiLCJpbmNsdWRlVXNhZ2UiLCJpbmNsdWRlU2NoZW1hIiwiaW5jbHVkZUZ1bmN0aW9ucyIsIm1jcFJlc3BvbnNlIiwianNvbiIsInRleHRDb250ZW50IiwiQXJyYXkiLCJpc0FycmF5IiwiaXRlbSIsInBsYWluVGV4dCIsImNvbnRleHR1YWxNZXNzYWdlIiwiaGFuZGxlS2V5RG93biIsImZpbHRlcmVkVG9vbHMiLCJrZXkiLCJwcmV2Iiwic2VsZWN0ZWRUb29sIiwiY29tbWFuZFRvVXNlIiwic2hpZnRLZXkiLCJoYW5kbGVJbnB1dENoYW5nZSIsInZhbHVlIiwidGFyZ2V0Iiwic2VhcmNoVGVybSIsImN1cnJlbnRGaWx0ZXJlZCIsImdldEF2YWlsYWJsZVRvb2xzIiwiYWN0aXZlQWdlbnQiLCJhIiwiZGVzY3JpcHRpb24iLCJjdXJyZW50VG9vbHMiLCJoYW5kbGVUb29sU2VsZWN0IiwiZGl2IiwicmVmIiwiY2xhc3NOYW1lIiwiYnV0dG9uIiwib25DbGljayIsInNwYW4iLCJfaWQiLCJtb2RlIiwib25Nb2RlQ2hhbmdlIiwiaW5kZXgiLCJkaXNwbGF5TmFtZSIsIm9uVG9vbFNlbGVjdCIsIm9uQ2xvc2UiLCJzZWxlY3RlZEluZGV4Iiwib25JbmRleENoYW5nZSIsImZvcm0iLCJvblN1Ym1pdCIsIm9uQ2hhbmdlIiwib25LZXlEb3duIiwicGxhY2Vob2xkZXIiLCJkaXNhYmxlZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/_components/terminal/_components/chatMessages.tsx\n"));

/***/ })

});