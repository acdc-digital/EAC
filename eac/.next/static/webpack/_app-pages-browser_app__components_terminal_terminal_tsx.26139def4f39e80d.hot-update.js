"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_app__components_terminal_terminal_tsx",{

/***/ "(app-pages-browser)/./app/_components/terminal/_components/chatMessages.tsx":
/*!***************************************************************!*\
  !*** ./app/_components/terminal/_components/chatMessages.tsx ***!
  \***************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatMessages: () => (/* binding */ ChatMessages)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/../node_modules/.pnpm/next@15.3.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _convex_generated_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/convex/_generated/api */ \"(app-pages-browser)/./convex/_generated/api.js\");\n/* harmony import */ var _lib_hooks_useChat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/hooks/useChat */ \"(app-pages-browser)/./lib/hooks/useChat.ts\");\n/* harmony import */ var _lib_hooks_useInstructions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/hooks/useInstructions */ \"(app-pages-browser)/./lib/hooks/useInstructions.ts\");\n/* harmony import */ var _lib_hooks_useMCP__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/hooks/useMCP */ \"(app-pages-browser)/./lib/hooks/useMCP.ts\");\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/store */ \"(app-pages-browser)/./store/index.ts\");\n/* harmony import */ var _store_terminal_chat__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/store/terminal/chat */ \"(app-pages-browser)/./store/terminal/chat.ts\");\n/* harmony import */ var _store_terminal_session__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/store/terminal/session */ \"(app-pages-browser)/./store/terminal/session.ts\");\n/* harmony import */ var _clerk_nextjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @clerk/nextjs */ \"(app-pages-browser)/../node_modules/.pnpm/@clerk+clerk-react@5.38.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@clerk/clerk-react/dist/index.mjs\");\n/* harmony import */ var convex_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! convex/react */ \"(app-pages-browser)/../node_modules/.pnpm/convex@1.25.4_@clerk+clerk-react@5.38.0_react-dom@18.3.1_react@18.3.1__react@18.3.1__react@18.3.1/node_modules/convex/dist/esm/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../node_modules/.pnpm/next@15.3.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _editInstructionsInput__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./editInstructionsInput */ \"(app-pages-browser)/./app/_components/terminal/_components/editInstructionsInput.tsx\");\n/* harmony import */ var _fileNameInput__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./fileNameInput */ \"(app-pages-browser)/./app/_components/terminal/_components/fileNameInput.tsx\");\n/* harmony import */ var _fileSelector__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./fileSelector */ \"(app-pages-browser)/./app/_components/terminal/_components/fileSelector.tsx\");\n/* harmony import */ var _fileTypeSelector__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./fileTypeSelector */ \"(app-pages-browser)/./app/_components/terminal/_components/fileTypeSelector.tsx\");\n/* harmony import */ var _markdownRenderer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./markdownRenderer */ \"(app-pages-browser)/./app/_components/terminal/_components/markdownRenderer.tsx\");\n/* harmony import */ var _projectNameInput__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./projectNameInput */ \"(app-pages-browser)/./app/_components/terminal/_components/projectNameInput.tsx\");\n/* harmony import */ var _projectSelector__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./projectSelector */ \"(app-pages-browser)/./app/_components/terminal/_components/projectSelector.tsx\");\n// Simplified Chat Messages Component - No Slash Commands\n// /Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\n/* __next_internal_client_entry_do_not_use__ ChatMessages auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction ChatMessages() {\n    _s();\n    const scrollRef = (0,react__WEBPACK_IMPORTED_MODULE_9__.useRef)(null);\n    const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_9__.useRef)(null);\n    const processedOperations = (0,react__WEBPACK_IMPORTED_MODULE_9__.useRef)(new Set());\n    const [message, setMessage] = (0,react__WEBPACK_IMPORTED_MODULE_9__.useState)(\"\");\n    const [activeAgentProcess, setActiveAgentProcess] = (0,react__WEBPACK_IMPORTED_MODULE_9__.useState)(null);\n    // Debug logging for activeAgentProcess changes\n    (0,react__WEBPACK_IMPORTED_MODULE_9__.useEffect)({\n        \"ChatMessages.useEffect\": ()=>{\n            console.log('activeAgentProcess changed:', activeAgentProcess);\n        }\n    }[\"ChatMessages.useEffect\"], [\n        activeAgentProcess\n    ]);\n    const { user, isLoaded } = (0,_clerk_nextjs__WEBPACK_IMPORTED_MODULE_17__.useUser)();\n    const { initializeUserSession, addTerminalFeedback, setSessionId } = (0,_store_terminal_chat__WEBPACK_IMPORTED_MODULE_6__.useChatStore)();\n    const { activeSessionId } = (0,_store_terminal_session__WEBPACK_IMPORTED_MODULE_7__.useSessionStore)();\n    const { messages, isLoading: chatLoading, sendMessage, sendMessageWithStreaming, sessionId, storeChatMessage, addTerminalFeedback: useTerminalFeedback, streamingThinking, isStreamingThinking, messageCount, isNearSessionLimit, isAtSessionLimit, canAddMessages, getSessionStatus, startNewSession } = (0,_lib_hooks_useChat__WEBPACK_IMPORTED_MODULE_2__.useChat)();\n    // Query for agent progress\n    const agentProgress = (0,convex_react__WEBPACK_IMPORTED_MODULE_8__.useQuery)(_convex_generated_api__WEBPACK_IMPORTED_MODULE_1__.api.chat.getAgentProgress, {\n        sessionId\n    });\n    const { isConnected: mcpConnected, isLoading: mcpLoading, error: mcpError, availableTools, processNaturalLanguage } = (0,_lib_hooks_useMCP__WEBPACK_IMPORTED_MODULE_4__.useMCP)();\n    // Agent execution and mutations\n    const { agents, activeAgentId, setActiveAgent, executeAgentTool } = (0,_store__WEBPACK_IMPORTED_MODULE_5__.useAgentStore)();\n    const createInstruction = (0,convex_react__WEBPACK_IMPORTED_MODULE_8__.useMutation)(_convex_generated_api__WEBPACK_IMPORTED_MODULE_1__.api.files.createInstructionFile);\n    const ensureInstructionsProject = (0,convex_react__WEBPACK_IMPORTED_MODULE_8__.useMutation)(_convex_generated_api__WEBPACK_IMPORTED_MODULE_1__.api.projects.ensureInstructionsProject);\n    const upsertPost = (0,convex_react__WEBPACK_IMPORTED_MODULE_8__.useMutation)(_convex_generated_api__WEBPACK_IMPORTED_MODULE_1__.api.socialPosts.upsertPost);\n    const schedulePost = (0,convex_react__WEBPACK_IMPORTED_MODULE_8__.useMutation)(_convex_generated_api__WEBPACK_IMPORTED_MODULE_1__.api.socialPosts.schedulePost);\n    const createContentCreationFile = (0,convex_react__WEBPACK_IMPORTED_MODULE_8__.useMutation)(_convex_generated_api__WEBPACK_IMPORTED_MODULE_1__.api.files.createContentCreationFile);\n    const createProject = (0,convex_react__WEBPACK_IMPORTED_MODULE_8__.useMutation)(_convex_generated_api__WEBPACK_IMPORTED_MODULE_1__.api.projects.createProject);\n    const createFile = (0,convex_react__WEBPACK_IMPORTED_MODULE_8__.useMutation)(_convex_generated_api__WEBPACK_IMPORTED_MODULE_1__.api.files.createFile);\n    const getAllUserFiles = (0,convex_react__WEBPACK_IMPORTED_MODULE_8__.useQuery)(_convex_generated_api__WEBPACK_IMPORTED_MODULE_1__.api.files.getAllUserFiles, {});\n    const updateInteractiveComponent = (0,convex_react__WEBPACK_IMPORTED_MODULE_8__.useMutation)(_convex_generated_api__WEBPACK_IMPORTED_MODULE_1__.api.chat.updateInteractiveComponent);\n    const editFileWithAI = (0,convex_react__WEBPACK_IMPORTED_MODULE_8__.useAction)(_convex_generated_api__WEBPACK_IMPORTED_MODULE_1__.api.editorActions.editFileWithAI);\n    const updateFileContent = (0,convex_react__WEBPACK_IMPORTED_MODULE_8__.useMutation)(_convex_generated_api__WEBPACK_IMPORTED_MODULE_1__.api.files.updateFileContent);\n    const allPosts = (0,convex_react__WEBPACK_IMPORTED_MODULE_8__.useQuery)(_convex_generated_api__WEBPACK_IMPORTED_MODULE_1__.api.socialPosts.getAllPosts, {});\n    const allProjects = (0,convex_react__WEBPACK_IMPORTED_MODULE_8__.useQuery)(_convex_generated_api__WEBPACK_IMPORTED_MODULE_1__.api.projects.getProjects, {});\n    const instructionContext = (0,_lib_hooks_useInstructions__WEBPACK_IMPORTED_MODULE_3__.useInstructionContext)();\n    const { isLoading: instructionsLoading } = (0,_lib_hooks_useInstructions__WEBPACK_IMPORTED_MODULE_3__.useInstructions)();\n    const { createNewFile } = (0,_store__WEBPACK_IMPORTED_MODULE_5__.useEditorStore)();\n    const isLoading = chatLoading || mcpLoading || instructionsLoading;\n    // Auto-scroll to bottom when new messages arrive\n    (0,react__WEBPACK_IMPORTED_MODULE_9__.useEffect)({\n        \"ChatMessages.useEffect\": ()=>{\n            if (scrollRef.current) {\n                scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n            }\n        }\n    }[\"ChatMessages.useEffect\"], [\n        messages\n    ]);\n    // Initialize user session when component mounts and user is loaded\n    (0,react__WEBPACK_IMPORTED_MODULE_9__.useEffect)({\n        \"ChatMessages.useEffect\": ()=>{\n            if (isLoaded && user && !sessionId) {\n                console.log(\"🔄 Initializing user session...\", {\n                    userId: user.id\n                });\n                initializeUserSession(user.id);\n            }\n        }\n    }[\"ChatMessages.useEffect\"], [\n        user,\n        isLoaded,\n        sessionId,\n        initializeUserSession\n    ]);\n    // Sync session ID if active session changes\n    (0,react__WEBPACK_IMPORTED_MODULE_9__.useEffect)({\n        \"ChatMessages.useEffect\": ()=>{\n            if (activeSessionId && activeSessionId !== sessionId) {\n                console.log(\"🔄 Syncing to active session:\", activeSessionId);\n                setSessionId(activeSessionId);\n            }\n        }\n    }[\"ChatMessages.useEffect\"], [\n        activeSessionId,\n        sessionId,\n        setSessionId\n    ]);\n    // Clear active agent process after timeout\n    (0,react__WEBPACK_IMPORTED_MODULE_9__.useEffect)({\n        \"ChatMessages.useEffect\": ()=>{\n            if (activeAgentProcess) {\n                const timeout = setTimeout({\n                    \"ChatMessages.useEffect.timeout\": ()=>{\n                        const age = Date.now() - activeAgentProcess.timestamp;\n                        if (age > 5 * 60 * 1000) {\n                            setActiveAgentProcess(null);\n                        }\n                    }\n                }[\"ChatMessages.useEffect.timeout\"], 5 * 60 * 1000);\n                return ({\n                    \"ChatMessages.useEffect\": ()=>clearTimeout(timeout)\n                })[\"ChatMessages.useEffect\"];\n            }\n        }\n    }[\"ChatMessages.useEffect\"], [\n        activeAgentProcess\n    ]);\n    // DISABLED: Process messages with operations to create UI files\n    // This is now handled by useFileLoad hook which syncs from Convex to local store\n    /*\n  useEffect(() => {\n    if (!messages) return;\n    \n    console.log('🔍 Processing messages for operations:', {\n      totalMessages: messages.length,\n      recentMessagesCount: messages.slice(-10).length,\n      processedCount: processedOperations.current.size\n    });\n    \n    // Look for messages with operations that need UI processing\n    const recentMessages = messages.slice(-10); // Check last 10 messages\n    \n    recentMessages.forEach((message: any, index) => {\n      console.log(`🔍 Message ${index}:`, {\n        id: message._id,\n        role: message.role,\n        hasOperation: !!message.operation,\n        operationType: message.operation?.type,\n        operationDetails: message.operation?.details,\n        contentPreview: message.content?.substring(0, 100),\n        alreadyProcessed: processedOperations.current.has(message._id)\n      });\n      \n      if (message.operation?.type === 'file_created' && message._id) {\n        // Skip if already processed\n        if (processedOperations.current.has(message._id)) {\n          console.log(`⏭️ Skipping already processed message: ${message._id}`);\n          return;\n        }\n        \n        const { fileName, fileType, content, platformData, agentType } = message.operation.details;\n        \n        console.log('🔍 File creation operation found:', {\n          fileName,\n          fileType,\n          agentType,\n          hasContent: !!content,\n          contentLength: content?.length || 0,\n          willProcess: agentType === 'twitter' && content\n        });\n        \n        // Only process Twitter agent files for UI creation that have content\n        if (agentType === 'twitter' && content) {\n          console.log('🔄 Processing social file operation:', {\n            fileName,\n            fileType,\n            content: content,\n            contentLength: content?.length || 0,\n            contentType: typeof content,\n            messageId: message._id,\n            platformData: platformData,\n            allDetails: message.operation.details\n          });\n          \n          // Mark as processed FIRST to prevent race conditions\n          processedOperations.current.add(message._id);\n          \n          // Parse the platform data with error handling\n          let platformDataObj;\n          try {\n            platformDataObj = platformData ? JSON.parse(platformData) : {};\n          } catch (error) {\n            console.warn('⚠️ Failed to parse platform data, using defaults:', error);\n            platformDataObj = {\n              replySettings: 'following',\n              scheduledDate: '',\n              scheduledTime: '',\n              isThread: false\n            };\n          }\n          \n          // Create the content for the Twitter post file in the expected format\n          const postContent = `# ${fileName.replace(/\\.[^/.]+$/, \"\")} - X (Twitter) Post\nPlatform: X (Twitter)\nCreated: ${new Date().toLocaleDateString()}\n\n## Post Content\n${content}\n\n## Settings\n- Reply Settings: ${platformDataObj.replySettings || 'following'}\n- Schedule: ${platformDataObj.scheduledDate && platformDataObj.scheduledTime ? `${platformDataObj.scheduledDate} ${platformDataObj.scheduledTime}` : 'Now'}\n- Thread: ${platformDataObj.isThread ? 'Multi-tweet Thread' : 'Single Tweet'}\n\n## Media\n- Images: []\n- Videos: []\n\n## Analytics\n- Impressions: 0\n- Engagements: 0\n- Likes: 0\n- Shares: 0`;\n\n          // Get the createNewFile function from the store at execution time\n          const { createNewFile, projectFolders } = useEditorStore.getState();\n          \n          // Find the Content Creation folder ID\n          const contentCreationFolder = projectFolders.find(folder => \n            folder.name === 'Content Creation'\n          );\n          \n          if (contentCreationFolder) {\n            // Create the file in the Content Creation folder\n            createNewFile(\n              fileName,\n              'x', // Use 'x' type for Twitter files\n              'project',\n              contentCreationFolder.id,\n              postContent\n            );\n            \n            console.log('✅ Created social file in UI:', fileName);\n          } else {\n            console.warn('⚠️ Content Creation folder not found');\n            \n            // Create without folder ID if folder not found\n            createNewFile(\n              fileName,\n              'x',\n              'project',\n              undefined,\n              postContent\n            );\n          }\n        }\n      }\n    });\n  }, [messages]); // Removed createNewFile from dependencies to prevent re-runs on panel switches\n  */ // Helper function to strip markdown formatting\n    const stripMarkdown = (text)=>{\n        return text.replace(/#{1,6}\\s*/g, '') // Remove headers\n        .replace(/\\*\\*(.*?)\\*\\*/g, '$1') // Remove **bold**\n        .replace(/\\*(.*?)\\*/g, '$1') // Remove *italic*\n        .replace(/`([^`]+)`/g, '$1') // Remove `code`\n        .replace(/^\\s*[-*+]\\s+/gm, '• ') // Convert markdown lists to bullet points\n        .replace(/^\\s*\\d+\\.\\s+/gm, '• ') // Convert numbered lists to bullet points\n        .replace(/\\n\\s*\\n\\s*\\n/g, '\\n\\n') // Reduce multiple blank lines to double\n        .split('\\n') // Split into lines for processing\n        .map((line)=>{\n            // Add spacing after section headers (lines that don't start with bullet points)\n            if (line.trim() && !line.startsWith('•') && !line.startsWith(' ') && line.length > 0) {\n                return line + '\\n'; // Add extra newline after headers\n            }\n            return line;\n        }).join('\\n').replace(/\\n{3,}/g, '\\n\\n') // Clean up excessive newlines\n        .trim();\n    };\n    // Helper function to detect MCP-related queries (excluding direct tool commands)\n    const isMCPQuery = (text)=>{\n        // Don't treat direct tool commands as NLP queries\n        if (text.startsWith('/')) return false;\n        // Look for keywords that suggest MCP analysis would be helpful\n        const mcpKeywords = [\n            'analyze',\n            'examine',\n            'review',\n            'explain',\n            'understand',\n            'architecture',\n            'structure',\n            'code',\n            'component',\n            'function',\n            'implementation',\n            'pattern',\n            'best practice',\n            'issue',\n            'bug',\n            'error',\n            'performance',\n            'optimization',\n            'refactor',\n            'improvement',\n            'documentation',\n            'overview',\n            'summary',\n            'how does',\n            'what is',\n            'why is',\n            'where is',\n            'when is',\n            'which'\n        ];\n        const lowerText = text.toLowerCase();\n        return mcpKeywords.some((keyword)=>lowerText.includes(keyword));\n    };\n    const handleToolSelectorClose = ()=>{\n        var _inputRef_current;\n        setMessage(\"\");\n        (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();\n    };\n    // Helper function to create convexMutations object for agents\n    const createConvexMutations = ()=>{\n        return {\n            ensureInstructionsProject,\n            createInstructionFile: createInstruction,\n            upsertPost,\n            schedulePost,\n            createContentCreationFile,\n            createProject: async (params)=>{\n                return await createProject({\n                    name: params.name,\n                    description: params.description,\n                    status: params.status || 'active',\n                    budget: params.budget\n                });\n            },\n            getProjects: async ()=>{\n                return allProjects || [];\n            },\n            getAllFiles: async ()=>{\n                return getAllUserFiles || [];\n            },\n            storeChatMessage: async (params)=>{\n                return await storeChatMessage({\n                    role: params.role,\n                    content: params.content,\n                    sessionId: params.sessionId || sessionId,\n                    operation: params.operation,\n                    processIndicator: params.processIndicator,\n                    interactiveComponent: params.interactiveComponent\n                });\n            },\n            updateInteractiveComponent: async (params)=>{\n                return await updateInteractiveComponent({\n                    messageId: params.messageId,\n                    status: params.status,\n                    result: params.result\n                });\n            },\n            createFile: async (params)=>{\n                return await createFile({\n                    name: params.name,\n                    type: params.type,\n                    projectId: params.projectId,\n                    content: params.content,\n                    extension: params.extension,\n                    platform: params.platform,\n                    size: params.size\n                });\n            },\n            getAllPosts: async ()=>{\n                return allPosts || [];\n            },\n            editFileWithAI: async (params)=>{\n                return await editFileWithAI({\n                    fileName: params.fileName,\n                    originalContent: params.originalContent,\n                    editInstructions: params.editInstructions,\n                    fileType: params.fileType\n                });\n            },\n            updateFileContent: async (params)=>{\n                return await updateFileContent({\n                    fileId: params.fileId,\n                    content: params.content\n                });\n            },\n            // Campaign-related functions (simplified for now)\n            createCampaign: async (params)=>{\n                // For now, just return a simple campaign ID since the API isn't ready\n                console.log('Campaign creation requested:', params);\n                return {\n                    _id: \"campaign_\".concat(Date.now())\n                };\n            },\n            createPostsBatch: async (params)=>{\n                // For now, just log the batch creation\n                console.log('Batch posts creation requested:', params);\n                return params.posts.map((_, index)=>\"post_\".concat(Date.now(), \"_\").concat(index));\n            }\n        };\n    };\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        // Check session limit before processing\n        if (!canAddMessages()) {\n            console.warn(\"Cannot send message: Session limit reached\");\n            // Add a terminal feedback message about the limit\n            await storeChatMessage({\n                role: \"terminal\",\n                content: \"[\".concat(new Date().toLocaleTimeString('en-US', {\n                    hour12: false,\n                    hour: '2-digit',\n                    minute: '2-digit',\n                    second: '2-digit'\n                }), \"] \\uD83D\\uDEA8 Message not sent: Session limit reached (500 messages)\\nPlease start a new session to continue chatting.\"),\n                sessionId\n            });\n            return;\n        }\n        if (message.trim() && !isLoading) {\n            const messageContent = message.trim();\n            console.log('💬 User submitting message:', messageContent);\n            setMessage(\"\");\n            // Check if this is an agent command when an agent is active\n            // BUT only route to editor agent if it has a selected file and is waiting for edit instructions\n            if (activeAgentId && !messageContent.startsWith('/')) {\n                console.log('🤖 Checking if should route to active agent:', activeAgentId);\n                let shouldRouteToAgent = true;\n                // Special handling for editor agent - only route if file is selected and waiting for edit instructions\n                if (activeAgentId === 'editor') {\n                    const { EditorAgent } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/store/agents/editorAgent */ \"(app-pages-browser)/./store/agents/editorAgent.ts\"));\n                    const hasSelectedFile = EditorAgent.selectedFile !== null;\n                    const isWaitingForEditInstructions = EditorAgent.currentStep === 'edit-request';\n                    console.log('🔍 Editor agent state check:', {\n                        hasSelectedFile,\n                        isWaitingForEditInstructions,\n                        selectedFile: EditorAgent.selectedFile,\n                        currentStep: EditorAgent.currentStep\n                    });\n                    // If no file selected, agent should show file selector\n                    // If file selected and waiting for instructions, agent should process the edit\n                    // Always route to editor agent when it's active\n                    shouldRouteToAgent = true;\n                }\n                if (shouldRouteToAgent) {\n                    console.log('🤖 Routing to active agent:', activeAgentId);\n                    try {\n                        var _lastMessage_processIndicator;\n                        console.log(\"\\uD83E\\uDD16 Executing agent \".concat(activeAgentId, \" with message: \").concat(messageContent));\n                        // Create convex mutations for the agent\n                        const convexMutations = createConvexMutations();\n                        // Check if the last message was an agent waiting for input\n                        const lastMessage = messages && messages.length > 0 ? messages[messages.length - 1] : null;\n                        const isFollowUpToWaitingAgent = lastMessage && lastMessage.role === 'assistant' && ((_lastMessage_processIndicator = lastMessage.processIndicator) === null || _lastMessage_processIndicator === void 0 ? void 0 : _lastMessage_processIndicator.type) === 'waiting';\n                        console.log('Pre-execution state:', {\n                            lastMessage: lastMessage ? {\n                                role: lastMessage.role,\n                                processIndicator: lastMessage.processIndicator,\n                                contentPreview: lastMessage.content.substring(0, 50)\n                            } : null,\n                            isFollowUpToWaitingAgent\n                        });\n                        // Find the active agent and its default tool\n                        const activeAgent = agents.find((agent)=>agent.id === activeAgentId);\n                        if (activeAgent && activeAgent.tools.length > 0) {\n                            const defaultTool = activeAgent.tools[0]; // Use the first tool as default\n                            // ✅ FIX #1: Always store the user message first, regardless of agent result\n                            await storeChatMessage({\n                                role: \"user\",\n                                content: messageContent,\n                                sessionId,\n                                processIndicator: isFollowUpToWaitingAgent ? {\n                                    type: 'continuing',\n                                    processType: 'file-creation',\n                                    color: 'blue'\n                                } : undefined\n                            });\n                            // Execute the agent tool\n                            const result = await executeAgentTool(activeAgentId, defaultTool.id, messageContent, convexMutations, sessionId);\n                            // Handle empty results from interactive components\n                            if (!result || result.trim() === \"\") {\n                                console.log('Agent returned empty result - this is expected for interactive components');\n                                // User message was already stored above - interactive component handles the UI\n                                return;\n                            }\n                            // Check if result indicates waiting for user input (project selection)\n                            const isWaitingForInput = result.includes(\"🎯 Select a project:\") || result.includes(\"💡 **Next message:** Just type your selection!\") || result.includes(\"Which Project?\") || result.includes(\"Available Projects:\");\n                            // Check if result indicates successful completion\n                            const isCompletionResponse = result.includes(\"✅ **File Created Successfully!**\") || result.includes(\"File Created Successfully!\") || result.includes(\"**Next Steps:**\") || result.includes(\"Next Steps:\");\n                            console.log('Agent Execution Debug:', {\n                                activeAgentId,\n                                result: result.substring(0, 200) + '...',\n                                isWaitingForInput,\n                                isCompletionResponse,\n                                isFollowUpToWaitingAgent,\n                                hasSelectProject: result.includes(\"🎯 Select a project:\"),\n                                hasNextMessage: result.includes(\"💡 **Next message:** Just type your selection!\"),\n                                hasWhichProject: result.includes(\"Which Project?\"),\n                                hasAvailableProjects: result.includes(\"Available Projects:\"),\n                                hasFileCreated: result.includes(\"✅ **File Created Successfully!**\"),\n                                hasNextSteps: result.includes(\"**Next Steps:**\")\n                            });\n                            if (isWaitingForInput) {\n                                console.log('Setting active agent process for file creation');\n                                setActiveAgentProcess({\n                                    agentId: activeAgentId,\n                                    processType: 'file-creation',\n                                    timestamp: Date.now()\n                                });\n                            } else {\n                                console.log('Clearing active agent process - agent completed');\n                                // Clear active process when agent completes\n                                setActiveAgentProcess(null);\n                                // For editor agent, keep it active during the file selection workflow\n                                // Only clear it when the editing is actually complete\n                                if (activeAgentId === 'editor') {\n                                    // Check if editor agent is waiting for edit instructions after file selection\n                                    const { EditorAgent } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/store/agents/editorAgent */ \"(app-pages-browser)/./store/agents/editorAgent.ts\"));\n                                    if (EditorAgent.currentStep === 'edit-request' && EditorAgent.selectedFile) {\n                                        console.log('Keeping editor agent active - waiting for edit instructions');\n                                    // Keep the agent active to receive editing instructions\n                                    } else if (EditorAgent.currentStep === 'file-selection') {\n                                        console.log('Keeping editor agent active - waiting for file selection');\n                                    // Keep the agent active during file selection\n                                    } else {\n                                        console.log('Clearing editor agent - editing complete');\n                                        setActiveAgent(null);\n                                    }\n                                } else {\n                                    // Clear active agent ID if the result indicates interactive components are shown\n                                    // This prevents subsequent text input from being routed back to the agent\n                                    if (result.includes(\"Select a file to edit\") || result.includes(\"file_selector\") || result.includes(\"Choose a file from the selector\")) {\n                                        console.log('Clearing active agent ID - interactive component shown');\n                                        setActiveAgent(null);\n                                    }\n                                }\n                            }\n                            // Store agent result with process indicators (user message already stored above)\n                            await storeChatMessage({\n                                role: \"assistant\",\n                                content: \"\\uD83E\\uDD16 **\".concat(activeAgent.name, \" Agent Result:**\\n\\n\").concat(result),\n                                sessionId,\n                                processIndicator: isWaitingForInput || isCompletionResponse || isFollowUpToWaitingAgent ? {\n                                    type: 'waiting',\n                                    processType: 'file-creation',\n                                    color: 'green'\n                                } : undefined\n                            });\n                            // Debug log for what processIndicator was set\n                            console.log('StoreChatMessage Debug:', {\n                                messageType: 'assistant',\n                                willHaveProcessIndicator: !!(isWaitingForInput || isCompletionResponse || isFollowUpToWaitingAgent),\n                                isWaitingForInput,\n                                isCompletionResponse,\n                                isFollowUpToWaitingAgent,\n                                resultSnippet: result.substring(0, 100)\n                            });\n                            return;\n                        }\n                    } catch (error) {\n                        console.error('Agent execution error:', error);\n                        // Store the user message and error\n                        await storeChatMessage({\n                            role: \"user\",\n                            content: messageContent,\n                            sessionId\n                        });\n                        await storeChatMessage({\n                            role: \"assistant\",\n                            content: \"❌ Agent execution failed: \".concat(error instanceof Error ? error.message : 'Unknown error'),\n                            sessionId\n                        });\n                        return;\n                    }\n                } // Close the if (shouldRouteToAgent) block\n            }\n            // Check if this looks like a natural language MCP query\n            if (mcpConnected && isMCPQuery(messageContent)) {\n                try {\n                    const mcpResponse = await processNaturalLanguage(messageContent);\n                    if (mcpResponse.success && mcpResponse.content && mcpResponse.content.length > 0) {\n                        // Extract the actual text content from the MCP response\n                        const textContent = mcpResponse.content[0].text;\n                        // Strip markdown formatting and convert to plain text\n                        const plainText = stripMarkdown(textContent);\n                        // Send the MCP response with clean text content\n                        await sendMessage(\"\\uD83E\\uDD16 MCP Analysis:\\n\\n\".concat(plainText));\n                    } else {\n                        await sendMessage(messageContent);\n                    }\n                } catch (error) {\n                    console.error('MCP Error:', error);\n                    // Fall back to regular chat\n                    await sendMessage(messageContent);\n                }\n            } else {\n                // Regular chat message - add instruction context if available\n                let contextualMessage = messageContent;\n                if (instructionContext) {\n                    contextualMessage = \"\".concat(instructionContext, \"\\n\\n---\\n\\n\").concat(messageContent);\n                }\n                // Always use streaming thinking for all messages (thinking enabled by default)\n                await sendMessageWithStreaming(contextualMessage, messageContent);\n            }\n        }\n    };\n    const handleKeyDown = (e)=>{\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            handleSubmit(e);\n        }\n    };\n    const handleInputChange = (e)=>{\n        const value = e.target.value;\n        setMessage(value);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex-1 flex flex-col min-h-0\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: scrollRef,\n                className: \"flex-1 overflow-y-auto bg-[#0e0e0e] p-2 pb-8 min-h-0 scrollbar-hidden\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"font-mono text-xs space-y-2 min-h-full\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-[#cccccc] space-y-1 mb-4\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: \"EAC Financial Dashboard - AI Assistant\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 665,\n                                    columnNumber: 13\n                                }, this),\n                                mcpError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-[#f48771] text-xs\",\n                                    children: [\n                                        \"MCP Error: \",\n                                        mcpError\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 667,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-[#858585] mt-2\",\n                                    children: \"AI Assistant ready for EAC project questions.\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 669,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-[#858585] text-xs\",\n                                    children: [\n                                        \"Session: \",\n                                        sessionId.slice(-8)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 670,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-[#858585] text-xs\",\n                                    children: [\n                                        \"Messages: \",\n                                        messageCount,\n                                        \"/500\",\n                                        isNearSessionLimit && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"text-[#f48771] ml-2\",\n                                            children: \"⚠️ Approaching limit\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                            lineNumber: 676,\n                                            columnNumber: 17\n                                        }, this),\n                                        isAtSessionLimit && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"text-[#f48771] ml-2\",\n                                            children: \"\\uD83D\\uDEA8 Session full\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                            lineNumber: 679,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 673,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 664,\n                            columnNumber: 11\n                        }, this),\n                        messages === null || messages === void 0 ? void 0 : messages.map((msg, index)=>{\n                            var _msg_processIndicator_processType, _msg_processIndicator, _msg_interactiveComponent_data, _msg_interactiveComponent_data1, _msg_interactiveComponent_result, _msg_interactiveComponent_result1, _msg_interactiveComponent_data2, _msg_interactiveComponent_data3, _msg_interactiveComponent_data4, _msg_interactiveComponent_data5, _msg_interactiveComponent_data6, _msg_interactiveComponent_data7, _msg_interactiveComponent_result2, _msg_interactiveComponent_data8, _msg_interactiveComponent_data9, _msg_interactiveComponent_data10;\n                            // Use the stored processIndicator for visual continuity\n                            const hasProcessIndicator = msg.processIndicator;\n                            const isUserProcessMessage = hasProcessIndicator && msg.role === 'user' && hasProcessIndicator.type === 'continuing';\n                            const isAgentProcessMessage = hasProcessIndicator && msg.role === 'assistant' && hasProcessIndicator.type === 'waiting';\n                            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"space-y-1\",\n                                children: [\n                                    msg.role === 'user' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-[#007acc] \".concat(isUserProcessMessage ? 'border-l-4 border-[#0078d4] pl-3' : ''),\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-[#007acc]\",\n                                                children: \"$ user:\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                lineNumber: 697,\n                                                columnNumber: 21\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"ml-1 text-[#cccccc]\",\n                                                children: msg.content\n                                            }, void 0, false, {\n                                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                lineNumber: 698,\n                                                columnNumber: 21\n                                            }, this),\n                                            isUserProcessMessage && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"text-[10px] text-[#0078d4] mt-1 opacity-80\",\n                                                children: [\n                                                    \"↳ Continuing \",\n                                                    (_msg_processIndicator = msg.processIndicator) === null || _msg_processIndicator === void 0 ? void 0 : (_msg_processIndicator_processType = _msg_processIndicator.processType) === null || _msg_processIndicator_processType === void 0 ? void 0 : _msg_processIndicator_processType.replace('-', ' '),\n                                                    \"...\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                lineNumber: 700,\n                                                columnNumber: 23\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 696,\n                                        columnNumber: 19\n                                    }, this),\n                                    msg.role === 'assistant' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-[#4ec9b0] \".concat(isAgentProcessMessage ? 'border-l-4 border-[#4ec9b0] pl-3' : ''),\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-[#4ec9b0]\",\n                                                children: \"$ assistant:\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                lineNumber: 708,\n                                                columnNumber: 21\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"ml-1\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_markdownRenderer__WEBPACK_IMPORTED_MODULE_14__.MarkdownRenderer, {\n                                                    content: msg.content\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                    lineNumber: 710,\n                                                    columnNumber: 23\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                lineNumber: 709,\n                                                columnNumber: 21\n                                            }, this),\n                                            msg.interactiveComponent && (msg.interactiveComponent.status === 'pending' || msg.interactiveComponent.status === 'completed') && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"mt-3 ml-1\",\n                                                children: [\n                                                    msg.interactiveComponent.type === 'project_selector' && !((_msg_interactiveComponent_data = msg.interactiveComponent.data) === null || _msg_interactiveComponent_data === void 0 ? void 0 : _msg_interactiveComponent_data.projectNameInput) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_projectSelector__WEBPACK_IMPORTED_MODULE_16__.ProjectSelector, {\n                                                        fileDetails: (_msg_interactiveComponent_data1 = msg.interactiveComponent.data) === null || _msg_interactiveComponent_data1 === void 0 ? void 0 : _msg_interactiveComponent_data1.fileDetails,\n                                                        disabled: msg.interactiveComponent.status === 'completed',\n                                                        selectedProject: msg.interactiveComponent.status === 'completed' ? (_msg_interactiveComponent_result = msg.interactiveComponent.result) === null || _msg_interactiveComponent_result === void 0 ? void 0 : _msg_interactiveComponent_result.selectedProject : undefined,\n                                                        onProjectSelected: async (project)=>{\n                                                            try {\n                                                                // Update the component status to completed\n                                                                await updateInteractiveComponent({\n                                                                    messageId: msg._id,\n                                                                    status: 'completed',\n                                                                    result: {\n                                                                        selectedProject: project\n                                                                    }\n                                                                });\n                                                                // Continue the file creation process\n                                                                const convexMutations = createConvexMutations();\n                                                                const fileCreatorAgent = agents.find((a)=>a.id === 'file-creator');\n                                                                if (fileCreatorAgent) {\n                                                                    var _result_trim;\n                                                                    // Simulate user input for project selection\n                                                                    const projectSelectionInput = \"Add it to \".concat(project.name);\n                                                                    // Send user message showing the selection\n                                                                    await storeChatMessage({\n                                                                        role: 'user',\n                                                                        content: \"Selected project: \".concat(project.name),\n                                                                        sessionId: sessionId,\n                                                                        processIndicator: {\n                                                                            type: 'continuing',\n                                                                            processType: 'project_selection',\n                                                                            color: 'blue'\n                                                                        }\n                                                                    });\n                                                                    // Execute the agent with the selection\n                                                                    console.log('🚀 Executing agent with project selection:', projectSelectionInput);\n                                                                    console.log('🔧 Agent details:', {\n                                                                        agentId: fileCreatorAgent.id,\n                                                                        toolId: fileCreatorAgent.tools[0].id,\n                                                                        toolName: fileCreatorAgent.tools[0].name,\n                                                                        convexMutationsAvailable: {\n                                                                            createFile: !!convexMutations.createFile,\n                                                                            getProjects: !!convexMutations.getProjects,\n                                                                            storeChatMessage: !!convexMutations.storeChatMessage\n                                                                        }\n                                                                    });\n                                                                    const result = await executeAgentTool(fileCreatorAgent.id, fileCreatorAgent.tools[0].id, projectSelectionInput, convexMutations, sessionId);\n                                                                    console.log('📥 Agent execution result:', result);\n                                                                    console.log('📏 Result length:', (result === null || result === void 0 ? void 0 : result.length) || 0);\n                                                                    console.log('📋 Result content preview:', result === null || result === void 0 ? void 0 : result.substring(0, 100));\n                                                                    console.log('🔍 Result type:', typeof result);\n                                                                    console.log('🎯 Is result truthy:', !!result);\n                                                                    console.log('🎯 Is result empty string:', result === \"\");\n                                                                    console.log('🎯 Result trimmed length:', (result === null || result === void 0 ? void 0 : (_result_trim = result.trim()) === null || _result_trim === void 0 ? void 0 : _result_trim.length) || 0);\n                                                                    // Only store non-empty results\n                                                                    if (result && result.trim() !== \"\") {\n                                                                        console.log('✅ Storing success message to chat...');\n                                                                        console.log('📋 Current session ID:', sessionId);\n                                                                        console.log('📋 Message content length:', result.length);\n                                                                        // Store the agent's response\n                                                                        const storedMessage = await storeChatMessage({\n                                                                            role: 'assistant',\n                                                                            content: result,\n                                                                            sessionId: sessionId,\n                                                                            processIndicator: {\n                                                                                type: 'waiting',\n                                                                                processType: 'file_creation_complete',\n                                                                                color: 'green'\n                                                                            }\n                                                                        });\n                                                                        console.log('✅ Success message stored to chat!');\n                                                                        console.log('📋 Stored message result:', storedMessage);\n                                                                        // Wait a moment and check if the message appears in the messages array\n                                                                        setTimeout(()=>{\n                                                                            var _messages__content, _messages_, _messages_1;\n                                                                            console.log('🔍 Messages after success storage:', {\n                                                                                totalMessages: (messages === null || messages === void 0 ? void 0 : messages.length) || 0,\n                                                                                lastMessage: (messages === null || messages === void 0 ? void 0 : (_messages_ = messages[messages.length - 1]) === null || _messages_ === void 0 ? void 0 : (_messages__content = _messages_.content) === null || _messages__content === void 0 ? void 0 : _messages__content.substring(0, 50)) + '...',\n                                                                                lastMessageRole: messages === null || messages === void 0 ? void 0 : (_messages_1 = messages[messages.length - 1]) === null || _messages_1 === void 0 ? void 0 : _messages_1.role,\n                                                                                sessionId: sessionId\n                                                                            });\n                                                                        }, 1000);\n                                                                    } else {\n                                                                        console.log('⚠️ Agent returned empty result after project selection');\n                                                                    }\n                                                                }\n                                                            } catch (error) {\n                                                                console.error('Error handling project selection:', error);\n                                                                await storeChatMessage({\n                                                                    role: 'assistant',\n                                                                    content: '❌ Error processing project selection. Please try again.'\n                                                                });\n                                                            }\n                                                        },\n                                                        onCancel: async ()=>{\n                                                            try {\n                                                                await updateInteractiveComponent({\n                                                                    messageId: msg._id,\n                                                                    status: 'cancelled'\n                                                                });\n                                                                await storeChatMessage({\n                                                                    role: 'assistant',\n                                                                    content: '❌ File creation cancelled. You can start a new file creation request anytime.'\n                                                                });\n                                                            } catch (error) {\n                                                                console.error('Error cancelling project selection:', error);\n                                                            }\n                                                        },\n                                                        className: \"mb-2\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                        lineNumber: 717,\n                                                        columnNumber: 27\n                                                    }, this),\n                                                    msg.interactiveComponent.type === 'file_selector' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_fileSelector__WEBPACK_IMPORTED_MODULE_12__.FileSelector, {\n                                                        disabled: msg.interactiveComponent.status === 'completed',\n                                                        selectedFile: msg.interactiveComponent.status === 'completed' ? (_msg_interactiveComponent_result1 = msg.interactiveComponent.result) === null || _msg_interactiveComponent_result1 === void 0 ? void 0 : _msg_interactiveComponent_result1.selectedFile : undefined,\n                                                        onFileSelected: async (file)=>{\n                                                            try {\n                                                                console.log('🔥 [FileSelector] File selected callback triggered:', file);\n                                                                // Use the file name for database storage but pass complete object to agent\n                                                                const filePath = file.name || file.path || file.id;\n                                                                console.log('🔥 [FileSelector] Updating interactive component status');\n                                                                // Update the component status to completed\n                                                                await updateInteractiveComponent({\n                                                                    messageId: msg._id,\n                                                                    status: 'completed',\n                                                                    result: {\n                                                                        selectedFile: filePath\n                                                                    }\n                                                                });\n                                                                console.log('🔥 [FileSelector] Continuing the file selection process');\n                                                                // Continue the file selection process based on the active agent\n                                                                const convexMutations = createConvexMutations();\n                                                                const activeAgent = agents.find((a)=>a.id === activeAgentId);\n                                                                if (activeAgent && activeAgentId === 'director') {\n                                                                    console.log('🔥 [FileSelector] Found director agent, processing campaign instructions');\n                                                                    // Send user message showing the selection\n                                                                    await storeChatMessage({\n                                                                        role: 'user',\n                                                                        content: \"Selected file: \".concat(file.name),\n                                                                        sessionId: sessionId,\n                                                                        processIndicator: {\n                                                                            type: 'continuing',\n                                                                            processType: 'file_selection',\n                                                                            color: 'blue'\n                                                                        }\n                                                                    });\n                                                                    console.log('🔥 [FileSelector] Executing director agent with file selection');\n                                                                    try {\n                                                                        const result = await executeAgentTool(activeAgentId, activeAgent.tools[0].command, \"Selected file: \".concat(file.name), convexMutations, sessionId);\n                                                                        console.log('🔥 [FileSelector] Director agent execution result:', result);\n                                                                        // Store the director agent's response\n                                                                        await storeChatMessage({\n                                                                            role: 'assistant',\n                                                                            content: result,\n                                                                            sessionId,\n                                                                            operation: {\n                                                                                type: 'tool_executed',\n                                                                                details: {\n                                                                                    selectedFile: file.name,\n                                                                                    agentType: 'director'\n                                                                                }\n                                                                            }\n                                                                        });\n                                                                    } catch (error) {\n                                                                        console.error('❌ [FileSelector] Error executing director agent:', error);\n                                                                    }\n                                                                } else if (activeAgent && activeAgentId === 'editor') {\n                                                                    console.log('🔥 [FileSelector] Found editor agent, processing file edit');\n                                                                    // Send user message showing the selection\n                                                                    await storeChatMessage({\n                                                                        role: 'user',\n                                                                        content: \"Selected file: \".concat(file.name),\n                                                                        sessionId: sessionId,\n                                                                        processIndicator: {\n                                                                            type: 'continuing',\n                                                                            processType: 'file_selection',\n                                                                            color: 'blue'\n                                                                        }\n                                                                    });\n                                                                    console.log('🔥 [FileSelector] Calling handleFileSelected method');\n                                                                    // Call the editor agent's handleFileSelected method with complete file object\n                                                                    try {\n                                                                        const { editorAgent: actualEditorAgent } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/store/agents/editorAgent */ \"(app-pages-browser)/./store/agents/editorAgent.ts\"));\n                                                                        console.log('🔥 [FileSelector] Imported actual editor agent instance');\n                                                                        console.log('🔥 [FileSelector] Agent has handleFileSelected:', 'handleFileSelected' in actualEditorAgent);\n                                                                        if ('handleFileSelected' in actualEditorAgent) {\n                                                                            await actualEditorAgent.handleFileSelected(sessionId, file);\n                                                                            console.log('🔥 [FileSelector] handleFileSelected completed successfully');\n                                                                        } else {\n                                                                            console.error('❌ [FileSelector] handleFileSelected method not found on editor agent');\n                                                                        }\n                                                                    } catch (error) {\n                                                                        console.error('❌ [FileSelector] Error calling handleFileSelected:', error);\n                                                                    }\n                                                                    console.log('🔥 [FileSelector] Storing message with edit instructions input');\n                                                                    // Show edit instructions input component\n                                                                    await storeChatMessage({\n                                                                        role: 'assistant',\n                                                                        content: \"✅ **File Selected: \".concat(file.name, \"**\\n\\n\\uD83D\\uDCC4 **The file has been opened in the editor tab.**\"),\n                                                                        sessionId,\n                                                                        interactiveComponent: {\n                                                                            type: 'edit_instructions_input',\n                                                                            status: 'pending',\n                                                                            data: {\n                                                                                fileName: file.name,\n                                                                                placeholder: 'Describe what changes you want to make to this file...',\n                                                                                examples: [\n                                                                                    'Add a section about best practices',\n                                                                                    'Update the pricing information',\n                                                                                    'Make the tone more professional',\n                                                                                    'Fix any grammar or spelling errors',\n                                                                                    'Add examples and code snippets'\n                                                                                ]\n                                                                            }\n                                                                        }\n                                                                    });\n                                                                }\n                                                            } catch (error) {\n                                                                console.error('Error handling file selection:', error);\n                                                            }\n                                                        },\n                                                        onCancel: async ()=>{\n                                                            try {\n                                                                await updateInteractiveComponent({\n                                                                    messageId: msg._id,\n                                                                    status: 'cancelled'\n                                                                });\n                                                                await storeChatMessage({\n                                                                    role: 'assistant',\n                                                                    content: '❌ File editing cancelled. You can start a new edit request anytime.',\n                                                                    sessionId\n                                                                });\n                                                            } catch (error) {\n                                                                console.error('Error cancelling file selection:', error);\n                                                            }\n                                                        },\n                                                        className: \"mb-2\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                        lineNumber: 839,\n                                                        columnNumber: 27\n                                                    }, this),\n                                                    msg.interactiveComponent.type === 'edit_instructions_input' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_editInstructionsInput__WEBPACK_IMPORTED_MODULE_10__.EditInstructionsInput, {\n                                                        placeholder: (_msg_interactiveComponent_data2 = msg.interactiveComponent.data) === null || _msg_interactiveComponent_data2 === void 0 ? void 0 : _msg_interactiveComponent_data2.placeholder,\n                                                        fileName: (_msg_interactiveComponent_data3 = msg.interactiveComponent.data) === null || _msg_interactiveComponent_data3 === void 0 ? void 0 : _msg_interactiveComponent_data3.fileName,\n                                                        examples: (_msg_interactiveComponent_data4 = msg.interactiveComponent.data) === null || _msg_interactiveComponent_data4 === void 0 ? void 0 : _msg_interactiveComponent_data4.examples,\n                                                        onInstructionsSubmitted: async (instructions)=>{\n                                                            try {\n                                                                // Update the component status to completed\n                                                                await updateInteractiveComponent({\n                                                                    messageId: msg._id,\n                                                                    status: 'completed',\n                                                                    result: {\n                                                                        instructions\n                                                                    }\n                                                                });\n                                                                // Send user message showing the edit instructions\n                                                                await storeChatMessage({\n                                                                    role: 'user',\n                                                                    content: instructions,\n                                                                    sessionId: sessionId,\n                                                                    processIndicator: {\n                                                                        type: 'continuing',\n                                                                        processType: 'edit_instructions',\n                                                                        color: 'blue'\n                                                                    }\n                                                                });\n                                                                // Continue the editing process using agent registry\n                                                                const convexMutations = createConvexMutations();\n                                                                const result = await executeAgentTool('editor', 'edit-file', instructions, convexMutations, sessionId);\n                                                                await storeChatMessage({\n                                                                    role: 'assistant',\n                                                                    content: result,\n                                                                    sessionId: sessionId\n                                                                });\n                                                            } catch (error) {\n                                                                console.error('Error processing edit instructions:', error);\n                                                                await storeChatMessage({\n                                                                    role: 'assistant',\n                                                                    content: \"❌ **Error processing edit instructions**\\n\\n\".concat(error instanceof Error ? error.message : 'Unknown error occurred'),\n                                                                    sessionId: sessionId\n                                                                });\n                                                            }\n                                                        },\n                                                        onCancel: async ()=>{\n                                                            try {\n                                                                await updateInteractiveComponent({\n                                                                    messageId: msg._id,\n                                                                    status: 'cancelled'\n                                                                });\n                                                                await storeChatMessage({\n                                                                    role: 'assistant',\n                                                                    content: '❌ Edit instructions cancelled. You can start a new edit request anytime.',\n                                                                    sessionId\n                                                                });\n                                                            } catch (error) {\n                                                                console.error('Error cancelling edit instructions:', error);\n                                                            }\n                                                        },\n                                                        className: \"mb-2\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                        lineNumber: 984,\n                                                        columnNumber: 27\n                                                    }, this),\n                                                    msg.interactiveComponent.type === 'project_selector' && ((_msg_interactiveComponent_data5 = msg.interactiveComponent.data) === null || _msg_interactiveComponent_data5 === void 0 ? void 0 : _msg_interactiveComponent_data5.projectNameInput) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_projectNameInput__WEBPACK_IMPORTED_MODULE_15__.ProjectNameInput, {\n                                                        placeholder: (_msg_interactiveComponent_data6 = msg.interactiveComponent.data) === null || _msg_interactiveComponent_data6 === void 0 ? void 0 : _msg_interactiveComponent_data6.placeholder,\n                                                        defaultValue: (_msg_interactiveComponent_data7 = msg.interactiveComponent.data) === null || _msg_interactiveComponent_data7 === void 0 ? void 0 : _msg_interactiveComponent_data7.defaultValue,\n                                                        onProjectNameSubmitted: async (projectName)=>{\n                                                            try {\n                                                                // Update the component status to completed\n                                                                await updateInteractiveComponent({\n                                                                    messageId: msg._id,\n                                                                    status: 'completed',\n                                                                    result: {\n                                                                        projectName\n                                                                    }\n                                                                });\n                                                                // Continue the project creation process\n                                                                const convexMutations = createConvexMutations();\n                                                                const projectCreatorAgent = agents.find((a)=>a.id === 'project-creator');\n                                                                if (projectCreatorAgent) {\n                                                                    // Send user message showing the project name\n                                                                    await storeChatMessage({\n                                                                        role: 'user',\n                                                                        content: \"Project name: \".concat(projectName),\n                                                                        processIndicator: {\n                                                                            type: 'continuing',\n                                                                            processType: 'project_name_input',\n                                                                            color: 'blue'\n                                                                        }\n                                                                    });\n                                                                    // Execute the agent with the project name\n                                                                    console.log('🚀 Executing agent with project name:', projectName);\n                                                                    const result = await executeAgentTool(projectCreatorAgent.id, projectCreatorAgent.tools[0].id, projectName, convexMutations);\n                                                                    console.log('📥 Agent execution result:', result);\n                                                                    // Only store non-empty results\n                                                                    if (result && result.trim() !== \"\") {\n                                                                        console.log('✅ Storing project creation success message...');\n                                                                        // Store the agent's response\n                                                                        await storeChatMessage({\n                                                                            role: 'assistant',\n                                                                            content: result,\n                                                                            sessionId: sessionId,\n                                                                            processIndicator: {\n                                                                                type: 'waiting',\n                                                                                processType: 'project_creation_complete',\n                                                                                color: 'green'\n                                                                            }\n                                                                        });\n                                                                        console.log('✅ Project creation success message stored!');\n                                                                    } else {\n                                                                        console.log('⚠️ Agent returned empty result after project name input');\n                                                                    }\n                                                                }\n                                                            } catch (error) {\n                                                                console.error('Error handling project name input:', error);\n                                                                await storeChatMessage({\n                                                                    role: 'assistant',\n                                                                    content: '❌ Error processing project name. Please try again.'\n                                                                });\n                                                            }\n                                                        },\n                                                        onCancel: async ()=>{\n                                                            try {\n                                                                await updateInteractiveComponent({\n                                                                    messageId: msg._id,\n                                                                    status: 'cancelled'\n                                                                });\n                                                                await storeChatMessage({\n                                                                    role: 'assistant',\n                                                                    content: '❌ Project creation cancelled. You can start a new project creation request anytime.'\n                                                                });\n                                                            } catch (error) {\n                                                                console.error('Error cancelling project name input:', error);\n                                                            }\n                                                        },\n                                                        className: \"mb-2\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                        lineNumber: 1053,\n                                                        columnNumber: 27\n                                                    }, this),\n                                                    msg.interactiveComponent.type === 'file_type_selector' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_fileTypeSelector__WEBPACK_IMPORTED_MODULE_13__.FileTypeSelector, {\n                                                        onFileTypeSelected: async (fileType)=>{\n                                                            try {\n                                                                // Create a serializable version of the fileType without React components\n                                                                const serializableFileType = {\n                                                                    type: fileType.type,\n                                                                    extension: fileType.extension,\n                                                                    description: fileType.description,\n                                                                    platform: fileType.platform,\n                                                                    available: fileType.available\n                                                                };\n                                                                // Update the component status to completed\n                                                                await updateInteractiveComponent({\n                                                                    messageId: msg._id,\n                                                                    status: 'completed',\n                                                                    result: {\n                                                                        fileType: serializableFileType\n                                                                    }\n                                                                });\n                                                                // Continue the file creation process\n                                                                const convexMutations = createConvexMutations();\n                                                                const fileCreatorAgent = agents.find((a)=>a.id === 'file-creator');\n                                                                if (fileCreatorAgent) {\n                                                                    // Send user message showing the file type selection\n                                                                    await storeChatMessage({\n                                                                        role: 'user',\n                                                                        content: \"Selected file type: \".concat(fileType.description),\n                                                                        sessionId: sessionId,\n                                                                        processIndicator: {\n                                                                            type: 'continuing',\n                                                                            processType: 'file_type_selection',\n                                                                            color: 'blue'\n                                                                        }\n                                                                    });\n                                                                    // Execute the agent with the file type selection\n                                                                    console.log('🚀 Executing file creator agent with file type:', fileType);\n                                                                    const result = await executeAgentTool(fileCreatorAgent.id, fileCreatorAgent.tools[0].id, \"File type: \".concat(fileType.type), convexMutations);\n                                                                    console.log('📥 File creator agent result:', result);\n                                                                    // Only store non-empty results\n                                                                    if (result && result.trim() !== \"\") {\n                                                                        console.log('✅ Storing file type continuation message...');\n                                                                        // Store the agent's response\n                                                                        await storeChatMessage({\n                                                                            role: 'assistant',\n                                                                            content: result,\n                                                                            sessionId: sessionId,\n                                                                            processIndicator: {\n                                                                                type: 'waiting',\n                                                                                processType: 'file_type_continue',\n                                                                                color: 'green'\n                                                                            }\n                                                                        });\n                                                                        console.log('✅ File type continuation message stored!');\n                                                                    } else {\n                                                                        console.log('⚠️ Agent returned empty result after file type selection');\n                                                                    }\n                                                                }\n                                                            } catch (error) {\n                                                                console.error('Error handling file type selection:', error);\n                                                                await storeChatMessage({\n                                                                    role: 'assistant',\n                                                                    content: '❌ Error processing file type selection. Please try again.',\n                                                                    sessionId: sessionId\n                                                                });\n                                                            }\n                                                        },\n                                                        onCancel: async ()=>{\n                                                            try {\n                                                                await updateInteractiveComponent({\n                                                                    messageId: msg._id,\n                                                                    status: 'cancelled'\n                                                                });\n                                                                await storeChatMessage({\n                                                                    role: 'assistant',\n                                                                    content: '❌ File creation cancelled. You can start a new file creation request anytime.',\n                                                                    sessionId\n                                                                });\n                                                            } catch (error) {\n                                                                console.error('Error cancelling file type selection:', error);\n                                                            }\n                                                        },\n                                                        disabled: msg.interactiveComponent.status === 'completed',\n                                                        selectedFileType: msg.interactiveComponent.status === 'completed' ? (_msg_interactiveComponent_result2 = msg.interactiveComponent.result) === null || _msg_interactiveComponent_result2 === void 0 ? void 0 : _msg_interactiveComponent_result2.fileType : undefined,\n                                                        className: \"mb-2\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                        lineNumber: 1139,\n                                                        columnNumber: 27\n                                                    }, this),\n                                                    msg.interactiveComponent.type === 'file_name_input' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_fileNameInput__WEBPACK_IMPORTED_MODULE_11__.FileNameInput, {\n                                                        placeholder: (_msg_interactiveComponent_data8 = msg.interactiveComponent.data) === null || _msg_interactiveComponent_data8 === void 0 ? void 0 : _msg_interactiveComponent_data8.placeholder,\n                                                        defaultValue: (_msg_interactiveComponent_data9 = msg.interactiveComponent.data) === null || _msg_interactiveComponent_data9 === void 0 ? void 0 : _msg_interactiveComponent_data9.defaultValue,\n                                                        fileType: (_msg_interactiveComponent_data10 = msg.interactiveComponent.data) === null || _msg_interactiveComponent_data10 === void 0 ? void 0 : _msg_interactiveComponent_data10.fileType,\n                                                        onFileNameSubmitted: async (fileName)=>{\n                                                            try {\n                                                                // Update the component status to completed\n                                                                await updateInteractiveComponent({\n                                                                    messageId: msg._id,\n                                                                    status: 'completed',\n                                                                    result: {\n                                                                        fileName\n                                                                    }\n                                                                });\n                                                                // Continue the file creation process\n                                                                const convexMutations = createConvexMutations();\n                                                                const fileCreatorAgent = agents.find((a)=>a.id === 'file-creator');\n                                                                if (fileCreatorAgent) {\n                                                                    // Execute the agent with the file name FIRST\n                                                                    console.log('🚀 Executing file creator agent with file name:', fileName);\n                                                                    const result = await executeAgentTool(fileCreatorAgent.id, fileCreatorAgent.tools[0].id, fileName, convexMutations);\n                                                                    // THEN send user message showing the file name (after agent processes it)\n                                                                    await storeChatMessage({\n                                                                        role: 'user',\n                                                                        content: fileName,\n                                                                        sessionId: sessionId,\n                                                                        processIndicator: {\n                                                                            type: 'continuing',\n                                                                            processType: 'file_name_input',\n                                                                            color: 'blue'\n                                                                        }\n                                                                    });\n                                                                    console.log('📥 File creator agent result:', result);\n                                                                    // Only store non-empty results\n                                                                    if (result && result.trim() !== \"\") {\n                                                                        console.log('✅ Storing file creation continuation message...');\n                                                                        // Store the agent's response\n                                                                        await storeChatMessage({\n                                                                            role: 'assistant',\n                                                                            content: result,\n                                                                            sessionId: sessionId,\n                                                                            processIndicator: {\n                                                                                type: 'waiting',\n                                                                                processType: 'file_creation_continue',\n                                                                                color: 'green'\n                                                                            }\n                                                                        });\n                                                                        console.log('✅ File creation continuation message stored!');\n                                                                    } else {\n                                                                        console.log('⚠️ Agent returned empty result after file name input');\n                                                                    }\n                                                                }\n                                                            } catch (error) {\n                                                                console.error('Error handling file name input:', error);\n                                                                await storeChatMessage({\n                                                                    role: 'assistant',\n                                                                    content: '❌ Error processing file name. Please try again.',\n                                                                    sessionId: sessionId\n                                                                });\n                                                            }\n                                                        },\n                                                        onCancel: async ()=>{\n                                                            try {\n                                                                await updateInteractiveComponent({\n                                                                    messageId: msg._id,\n                                                                    status: 'cancelled'\n                                                                });\n                                                                await storeChatMessage({\n                                                                    role: 'assistant',\n                                                                    content: '❌ File creation cancelled. You can start a new file creation request anytime.',\n                                                                    sessionId\n                                                                });\n                                                            } catch (error) {\n                                                                console.error('Error cancelling file name input:', error);\n                                                            }\n                                                        },\n                                                        className: \"mb-2\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                        lineNumber: 1237,\n                                                        columnNumber: 27\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                lineNumber: 715,\n                                                columnNumber: 23\n                                            }, this),\n                                            isAgentProcessMessage && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"text-[10px] mt-1 opacity-80\",\n                                                children: (()=>{\n                                                    // Check for successful file creation with specific file info\n                                                    if (msg.content.includes(\"The comprehensive instruction document has been created and saved to your files.\")) {\n                                                        // Extract filename from the message\n                                                        const fileMatch = msg.content.match(/📄 \\*\\*File:\\*\\* `([^`]+)`/);\n                                                        const fileName = fileMatch ? fileMatch[1] : null;\n                                                        if (fileName) {\n                                                            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                                onClick: ()=>{\n                                                                    const { projectFiles } = _store__WEBPACK_IMPORTED_MODULE_5__.useEditorStore.getState();\n                                                                    const file = projectFiles.find((f)=>f.name === fileName);\n                                                                    if (file) {\n                                                                        _store__WEBPACK_IMPORTED_MODULE_5__.useEditorStore.getState().openTab(file);\n                                                                    }\n                                                                },\n                                                                className: \"text-[#007acc] hover:text-[#4ec9b0] hover:underline cursor-pointer transition-colors\",\n                                                                children: \"↳ Click here to view your file...\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                                lineNumber: 1340,\n                                                                columnNumber: 33\n                                                            }, this);\n                                                        }\n                                                    }\n                                                    // Check for CMO report generation success\n                                                    if (msg.content.includes(\"CMO_REPORT_GENERATED_SUCCESS:\")) {\n                                                        const fileMatch = msg.content.match(/CMO_REPORT_GENERATED_SUCCESS:\\s*(.+)$/);\n                                                        const fileName = fileMatch ? fileMatch[1].trim() : null;\n                                                        if (fileName) {\n                                                            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                                onClick: ()=>{\n                                                                    const { projectFiles } = _store__WEBPACK_IMPORTED_MODULE_5__.useEditorStore.getState();\n                                                                    const file = projectFiles.find((f)=>f.name === fileName);\n                                                                    if (file) {\n                                                                        _store__WEBPACK_IMPORTED_MODULE_5__.useEditorStore.getState().openTab(file);\n                                                                    }\n                                                                },\n                                                                className: \"flex items-center gap-1 text-[#007acc] hover:text-[#4ec9b0] hover:underline cursor-pointer transition-colors text-xs\",\n                                                                children: [\n                                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                        className: \"transform rotate-90\",\n                                                                        children: \"↳\"\n                                                                    }, void 0, false, {\n                                                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                                        lineNumber: 1373,\n                                                                        columnNumber: 35\n                                                                    }, this),\n                                                                    \"Open Instructions File Tab\"\n                                                                ]\n                                                            }, void 0, true, {\n                                                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                                lineNumber: 1363,\n                                                                columnNumber: 33\n                                                            }, this);\n                                                        }\n                                                    }\n                                                    // Check for CMO report that needs manual save\n                                                    if (msg.content.includes(\"CMO_REPORT_MANUAL_SAVE_NEEDED:\")) {\n                                                        const fileMatch = msg.content.match(/CMO_REPORT_MANUAL_SAVE_NEEDED:\\s*(.+)$/);\n                                                        const fileName = fileMatch ? fileMatch[1].trim() : null;\n                                                        if (fileName) {\n                                                            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                                onClick: async ()=>{\n                                                                    try {\n                                                                        const convexMutations = createConvexMutations();\n                                                                        // Use the same report content from the message to create instruction file\n                                                                        const reportMatch = msg.content.match(/📋 \\*\\*Marketing Campaign Report Generated\\*\\*([\\s\\S]*?)⚠️ \\*\\*Note:/);\n                                                                        const reportContent = reportMatch ? reportMatch[1].trim() : 'Marketing Campaign Report';\n                                                                        // Execute the instructions agent to create the file\n                                                                        await executeAgentTool('instructions', 'natural-language-instructions', 'Create marketing campaign instruction file named \"'.concat(fileName, '\" with the campaign strategy report that was just generated'), convexMutations);\n                                                                    } catch (error) {\n                                                                        console.error('Error creating instruction file:', error);\n                                                                    }\n                                                                },\n                                                                className: \"flex items-center gap-1 text-[#007acc] hover:text-[#4ec9b0] hover:underline cursor-pointer transition-colors text-xs\",\n                                                                children: [\n                                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                        className: \"transform rotate-90\",\n                                                                        children: \"↳\"\n                                                                    }, void 0, false, {\n                                                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                                        lineNumber: 1408,\n                                                                        columnNumber: 35\n                                                                    }, this),\n                                                                    \"Create an Instruction File Here\"\n                                                                ]\n                                                            }, void 0, true, {\n                                                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                                lineNumber: 1387,\n                                                                columnNumber: 33\n                                                            }, this);\n                                                        }\n                                                    }\n                                                    // Check for other success indicators\n                                                    if (msg.content.includes(\"✅ **File Created Successfully!**\") || msg.content.includes(\"✅ **Project Created Successfully!**\") || msg.content.includes(\"✅ **Template Applied Successfully!**\")) {\n                                                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            className: \"text-[#4ec9b0]\",\n                                                            children: \"↳ Process completed successfully!\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                            lineNumber: 1419,\n                                                            columnNumber: 36\n                                                        }, this);\n                                                    }\n                                                    // Default waiting message\n                                                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"text-[#4ec9b0]\",\n                                                        children: \"↳ Agent waiting for your input...\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                        lineNumber: 1423,\n                                                        columnNumber: 34\n                                                    }, this);\n                                                })()\n                                            }, void 0, false, {\n                                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                lineNumber: 1330,\n                                                columnNumber: 23\n                                            }, this),\n                                            (()=>{\n                                                const shouldShow = activeAgentId === 'cmo' && msg.role === 'assistant';\n                                                console.log('🔍 Button condition check:', {\n                                                    activeAgentId,\n                                                    msgRole: msg.role,\n                                                    shouldShow,\n                                                    msgContent: msg.content.substring(0, 50)\n                                                });\n                                                return shouldShow;\n                                            })() && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"mt-2 ml-1\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: async ()=>{\n                                                        try {\n                                                            // Extract key information from the Campaign Director's response\n                                                            const content = msg.content;\n                                                            // Generate a descriptive filename based on content\n                                                            let fileName = \"campaign-strategy\";\n                                                            // Try to extract campaign name or type from content\n                                                            const titleMatch = content.match(/(?:^|\\n)#\\s*(.+)$/m);\n                                                            if (titleMatch) {\n                                                                const title = titleMatch[1].trim().toLowerCase().replace(/[^a-z0-9\\s]/g, '').replace(/\\s+/g, '-').substring(0, 50);\n                                                                fileName = title || fileName;\n                                                            }\n                                                            // Add timestamp to ensure uniqueness\n                                                            const timestamp = new Date().toISOString().split('T')[0];\n                                                            const finalFileName = \"\".concat(fileName, \"-\").concat(timestamp);\n                                                            // Format the content as a nice instruction document\n                                                            const instructionContent = \"# Campaign Strategy Instructions\\n\\nThis instruction document was generated from a Campaign Strategy response.\\n\\n---\\n\\n\".concat(content, \"\\n\\n---\\n\\n**Generated:** \").concat(new Date().toLocaleString(), \"\\n**Source:** Campaign Strategy Agent\");\n                                                            // Create the instruction file directly\n                                                            await createInstruction({\n                                                                name: finalFileName,\n                                                                content: instructionContent,\n                                                                topic: \"Campaign Strategy\",\n                                                                audience: \"Marketing Team\"\n                                                            });\n                                                            console.log('✅ Instruction file created successfully:', finalFileName);\n                                                            // Show success feedback\n                                                            const successMessage = \"✅ **Instruction File Created!**\\n\\n\\uD83D\\uDCC4 **File:** `\".concat(finalFileName, \".md`\\n\\uD83C\\uDFAF **Topic:** Campaign Strategy\\n\\uD83D\\uDCC1 **Location:** Instructions Project\\n\\nThe campaign strategy has been saved as an instruction file for future reference.\");\n                                                            // Add success message to chat\n                                                            if (storeChatMessage && sessionId) {\n                                                                await storeChatMessage({\n                                                                    role: 'assistant',\n                                                                    content: successMessage,\n                                                                    sessionId: sessionId\n                                                                });\n                                                            }\n                                                        } catch (error) {\n                                                            console.error('Error creating instruction file:', error);\n                                                            // Show error feedback\n                                                            const errorMessage = \"❌ **Failed to Create Instruction File**\\n\\nThere was an error saving the campaign strategy as an instruction file. Please try again or contact support if the issue persists.\";\n                                                            if (storeChatMessage && sessionId) {\n                                                                await storeChatMessage({\n                                                                    role: 'assistant',\n                                                                    content: errorMessage,\n                                                                    sessionId: sessionId\n                                                                });\n                                                            }\n                                                        }\n                                                    },\n                                                    className: \"flex items-center gap-1 text-[#007acc] hover:text-[#4ec9b0] hover:underline cursor-pointer transition-colors text-xs opacity-60 hover:opacity-100\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            className: \"transform rotate-90\",\n                                                            children: \"↳\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                            lineNumber: 1516,\n                                                            columnNumber: 27\n                                                        }, this),\n                                                        \"Create an Instruction File Here\"\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                    lineNumber: 1440,\n                                                    columnNumber: 25\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                lineNumber: 1439,\n                                                columnNumber: 23\n                                            }, this),\n                                            (msg.content.includes('CMO_REPORT_GENERATED_SUCCESS') || msg.content.includes('CMO_REPORT_MANUAL_SAVE_NEEDED')) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"mt-2 ml-1\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: async ()=>{\n                                                        try {\n                                                            const convexMutations = createConvexMutations();\n                                                            // Create a descriptive prompt from the assistant's response\n                                                            const responseContent = msg.content.substring(0, 200).trim();\n                                                            const prompt = 'Create instruction file from this CMO agent response: \"'.concat(responseContent).concat(msg.content.length > 200 ? '...' : '', '\"');\n                                                            // Execute the instructions agent to create the file\n                                                            await executeAgentTool('instructions', 'generate-instructions', prompt, convexMutations);\n                                                        } catch (error) {\n                                                            console.error('Error creating instruction file:', error);\n                                                        }\n                                                    },\n                                                    className: \"flex items-center gap-1 text-[#007acc] hover:text-[#4ec9b0] hover:underline cursor-pointer transition-colors text-xs opacity-60 hover:opacity-100\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            className: \"transform rotate-90\",\n                                                            children: \"↳\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                            lineNumber: 1547,\n                                                            columnNumber: 27\n                                                        }, this),\n                                                        \"Create an Instruction File Here\"\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                    lineNumber: 1525,\n                                                    columnNumber: 25\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                lineNumber: 1524,\n                                                columnNumber: 23\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 707,\n                                        columnNumber: 19\n                                    }, this),\n                                    msg.role === 'thinking' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-[#d4d4aa]\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-[#d4d4aa]\",\n                                                children: \"\\uD83E\\uDDE0 thinking:\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                lineNumber: 1556,\n                                                columnNumber: 21\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"ml-1 text-[#cccccc] whitespace-pre-wrap text-xs font-mono italic\",\n                                                children: msg.content\n                                            }, void 0, false, {\n                                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                lineNumber: 1557,\n                                                columnNumber: 21\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 1555,\n                                        columnNumber: 19\n                                    }, this),\n                                    msg.role === 'terminal' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-[#858585]\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-[#585858] whitespace-pre-wrap bg-[#1a1a1a] p-1 rounded text-[10px] border-l-2 border-[#333]\",\n                                            children: msg.content\n                                        }, void 0, false, {\n                                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                            lineNumber: 1564,\n                                            columnNumber: 21\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 1563,\n                                        columnNumber: 19\n                                    }, this)\n                                ]\n                            }, index, true, {\n                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                lineNumber: 694,\n                                columnNumber: 15\n                            }, this);\n                        }),\n                        isStreamingThinking && streamingThinking && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-1\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-[#d4d4aa]\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-[#d4d4aa]\",\n                                        children: \"\\uD83E\\uDDE0 thinking:\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 1577,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"ml-1 text-[#cccccc] whitespace-pre-wrap text-xs font-mono italic\",\n                                        children: streamingThinking\n                                    }, void 0, false, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 1578,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                lineNumber: 1576,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 1575,\n                            columnNumber: 13\n                        }, this),\n                        isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-[#4ec9b0]\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-[#4ec9b0]\",\n                                    children: \"\\uD83E\\uDD16 assistant:\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 1588,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"ml-1 text-[#858585]\",\n                                    children: \"thinking...\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 1589,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 1587,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                    lineNumber: 662,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                lineNumber: 658,\n                columnNumber: 7\n            }, this),\n            agentProgress && agentProgress.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-[#0e0e0e] p-2 font-mono text-xs flex-shrink-0\",\n                children: agentProgress.map((progress)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mb-2 last:mb-0\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center justify-between mb-1\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-[#007acc] text-xs\",\n                                        children: [\n                                            \"\\uD83E\\uDD16 \",\n                                            progress.agentType,\n                                            \" Agent\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 1601,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-[#858585] text-xs\",\n                                        children: [\n                                            progress.percentage,\n                                            \"%\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 1604,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                lineNumber: 1600,\n                                columnNumber: 15\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-64 bg-[#333] rounded-full h-1.5 relative overflow-hidden\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"bg-[#007acc] h-1.5 rounded-full transition-all duration-300 absolute left-0 top-0\",\n                                    style: {\n                                        width: \"\".concat(Math.min(100, Math.max(0, progress.percentage)), \"%\")\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 1609,\n                                    columnNumber: 17\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                lineNumber: 1608,\n                                columnNumber: 15\n                            }, this),\n                            progress.status && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-[#858585] text-xs mt-1\",\n                                children: progress.status\n                            }, void 0, false, {\n                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                lineNumber: 1615,\n                                columnNumber: 17\n                            }, this)\n                        ]\n                    }, progress._id, true, {\n                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                        lineNumber: 1599,\n                        columnNumber: 13\n                    }, this))\n            }, void 0, false, {\n                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                lineNumber: 1597,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-[#0e0e0e] p-2 font-mono text-xs flex-shrink-0\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"text-[#007acc]\",\n                            children: \"$ user:\"\n                        }, void 0, false, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 1627,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                            onSubmit: handleSubmit,\n                            className: \"flex-1 ml-1\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                ref: inputRef,\n                                type: \"text\",\n                                value: message,\n                                onChange: handleInputChange,\n                                onKeyDown: handleKeyDown,\n                                placeholder: isAtSessionLimit ? \"Session limit reached - Start new session to continue...\" : isLoading ? \"AI is thinking...\" : \"Ask about your EAC project...\",\n                                disabled: isLoading || isAtSessionLimit,\n                                className: \"w-full bg-transparent border-none outline-none placeholder:text-[#858585] disabled:opacity-50 disabled:cursor-not-allowed caret-[#cccccc] \".concat(isAtSessionLimit ? 'text-[#f48771]' : 'text-[#cccccc]')\n                            }, void 0, false, {\n                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                lineNumber: 1629,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 1628,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                    lineNumber: 1626,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                lineNumber: 1625,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n        lineNumber: 657,\n        columnNumber: 5\n    }, this);\n}\n_s(ChatMessages, \"Vs45R8fQWCEFeqD5uu3KELg5XnQ=\", false, function() {\n    return [\n        _clerk_nextjs__WEBPACK_IMPORTED_MODULE_17__.useUser,\n        _store_terminal_chat__WEBPACK_IMPORTED_MODULE_6__.useChatStore,\n        _store_terminal_session__WEBPACK_IMPORTED_MODULE_7__.useSessionStore,\n        _lib_hooks_useChat__WEBPACK_IMPORTED_MODULE_2__.useChat,\n        convex_react__WEBPACK_IMPORTED_MODULE_8__.useQuery,\n        _lib_hooks_useMCP__WEBPACK_IMPORTED_MODULE_4__.useMCP,\n        _store__WEBPACK_IMPORTED_MODULE_5__.useAgentStore,\n        convex_react__WEBPACK_IMPORTED_MODULE_8__.useMutation,\n        convex_react__WEBPACK_IMPORTED_MODULE_8__.useMutation,\n        convex_react__WEBPACK_IMPORTED_MODULE_8__.useMutation,\n        convex_react__WEBPACK_IMPORTED_MODULE_8__.useMutation,\n        convex_react__WEBPACK_IMPORTED_MODULE_8__.useMutation,\n        convex_react__WEBPACK_IMPORTED_MODULE_8__.useMutation,\n        convex_react__WEBPACK_IMPORTED_MODULE_8__.useMutation,\n        convex_react__WEBPACK_IMPORTED_MODULE_8__.useQuery,\n        convex_react__WEBPACK_IMPORTED_MODULE_8__.useMutation,\n        convex_react__WEBPACK_IMPORTED_MODULE_8__.useAction,\n        convex_react__WEBPACK_IMPORTED_MODULE_8__.useMutation,\n        convex_react__WEBPACK_IMPORTED_MODULE_8__.useQuery,\n        convex_react__WEBPACK_IMPORTED_MODULE_8__.useQuery,\n        _lib_hooks_useInstructions__WEBPACK_IMPORTED_MODULE_3__.useInstructionContext,\n        _lib_hooks_useInstructions__WEBPACK_IMPORTED_MODULE_3__.useInstructions,\n        _store__WEBPACK_IMPORTED_MODULE_5__.useEditorStore\n    ];\n});\n_c = ChatMessages;\nvar _c;\n$RefreshReg$(_c, \"ChatMessages\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/_components/terminal/_components/chatMessages.tsx\n"));

/***/ })

});