"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_app__components_terminal_terminal_tsx",{

/***/ "(app-pages-browser)/./app/_components/terminal/_components/chatMessages.tsx":
/*!***************************************************************!*\
  !*** ./app/_components/terminal/_components/chatMessages.tsx ***!
  \***************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatMessages: () => (/* binding */ ChatMessages)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/../node_modules/.pnpm/next@15.3.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _convex_generated_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/convex/_generated/api */ \"(app-pages-browser)/./convex/_generated/api.js\");\n/* harmony import */ var _lib_chatCommands__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/chatCommands */ \"(app-pages-browser)/./lib/chatCommands.ts\");\n/* harmony import */ var _lib_hooks_useChat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/hooks/useChat */ \"(app-pages-browser)/./lib/hooks/useChat.ts\");\n/* harmony import */ var _lib_hooks_useInstructions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/hooks/useInstructions */ \"(app-pages-browser)/./lib/hooks/useInstructions.ts\");\n/* harmony import */ var _lib_hooks_useMCP__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/hooks/useMCP */ \"(app-pages-browser)/./lib/hooks/useMCP.ts\");\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/store */ \"(app-pages-browser)/./store/index.ts\");\n/* harmony import */ var _store_terminal_chat__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/store/terminal/chat */ \"(app-pages-browser)/./store/terminal/chat.ts\");\n/* harmony import */ var _store_terminal_session__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/store/terminal/session */ \"(app-pages-browser)/./store/terminal/session.ts\");\n/* harmony import */ var _clerk_nextjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @clerk/nextjs */ \"(app-pages-browser)/../node_modules/.pnpm/@clerk+clerk-react@5.38.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@clerk/clerk-react/dist/index.mjs\");\n/* harmony import */ var convex_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! convex/react */ \"(app-pages-browser)/../node_modules/.pnpm/convex@1.25.4_@clerk+clerk-react@5.38.0_react-dom@18.3.1_react@18.3.1__react@18.3.1__react@18.3.1/node_modules/convex/dist/esm/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../node_modules/.pnpm/next@15.3.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _toolSelector__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./toolSelector */ \"(app-pages-browser)/./app/_components/terminal/_components/toolSelector.tsx\");\n/* harmony import */ var _toolsToggle__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./toolsToggle */ \"(app-pages-browser)/./app/_components/terminal/_components/toolsToggle.tsx\");\n// Chat Messages Component with Convex and MCP Integration\n// /Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\n/* __next_internal_client_entry_do_not_use__ ChatMessages auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction ChatMessages() {\n    var _agents_find, _agents_find1;\n    _s();\n    const scrollRef = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);\n    const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);\n    const [message, setMessage] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(\"\");\n    const [showCommandHints, setShowCommandHints] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);\n    const [showMCPTools, setShowMCPTools] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);\n    const [selectedToolIndex, setSelectedToolIndex] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(-1);\n    const [toolsMode, setToolsMode] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)('agents');\n    const [showToolSelector, setShowToolSelector] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);\n    const [selectedSelectorIndex, setSelectedSelectorIndex] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(0);\n    const { user, isLoaded } = (0,_clerk_nextjs__WEBPACK_IMPORTED_MODULE_13__.useUser)();\n    const { initializeUserSession, addTerminalFeedback, setSessionId } = (0,_store_terminal_chat__WEBPACK_IMPORTED_MODULE_7__.useChatStore)();\n    const { activeSessionId } = (0,_store_terminal_session__WEBPACK_IMPORTED_MODULE_8__.useSessionStore)();\n    const { messages, isLoading: chatLoading, sendMessage, sessionId, storeChatMessage, addTerminalFeedback: useTerminalFeedback, messageCount, isNearSessionLimit, isAtSessionLimit, canAddMessages, getSessionStatus, startNewSession } = (0,_lib_hooks_useChat__WEBPACK_IMPORTED_MODULE_3__.useChat)();\n    const { isConnected: mcpConnected, isLoading: mcpLoading, error: mcpError, processNaturalLanguage, availableTools } = (0,_lib_hooks_useMCP__WEBPACK_IMPORTED_MODULE_5__.useMCP)();\n    const { agents, activeAgentId, executeAgentTool, setActiveAgent } = (0,_store__WEBPACK_IMPORTED_MODULE_6__.useAgentStore)();\n    const { createInstruction, ensureInstructionsProject } = (0,_lib_hooks_useInstructions__WEBPACK_IMPORTED_MODULE_4__.useInstructions)();\n    const instructionContext = (0,_lib_hooks_useInstructions__WEBPACK_IMPORTED_MODULE_4__.useInstructionContext)();\n    // Convex mutations for social posts\n    const upsertPost = (0,convex_react__WEBPACK_IMPORTED_MODULE_9__.useMutation)(_convex_generated_api__WEBPACK_IMPORTED_MODULE_1__.api.socialPosts.upsertPost);\n    const getChatMessages = convex_react__WEBPACK_IMPORTED_MODULE_9__.useQuery;\n    const isLoading = chatLoading || mcpLoading;\n    // Initialize user-specific session when user is loaded\n    (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)({\n        \"ChatMessages.useEffect\": ()=>{\n            if (isLoaded && (user === null || user === void 0 ? void 0 : user.id)) {\n                initializeUserSession(user.id);\n            }\n        }\n    }[\"ChatMessages.useEffect\"], [\n        isLoaded,\n        user === null || user === void 0 ? void 0 : user.id,\n        initializeUserSession\n    ]);\n    // Handle session changes - update chat store session ID when active session changes\n    (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)({\n        \"ChatMessages.useEffect\": ()=>{\n            if (activeSessionId && activeSessionId !== sessionId) {\n                setSessionId(activeSessionId);\n            }\n        }\n    }[\"ChatMessages.useEffect\"], [\n        activeSessionId,\n        sessionId,\n        setSessionId\n    ]);\n    // Load messages when session changes\n    (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)({\n        \"ChatMessages.useEffect\": ()=>{\n            const loadSessionMessages = {\n                \"ChatMessages.useEffect.loadSessionMessages\": async ()=>{\n                    if (sessionId && isLoaded && (user === null || user === void 0 ? void 0 : user.id)) {\n                        try {\n                            await loadMessagesForSession(convex_react__WEBPACK_IMPORTED_MODULE_9__.useQuery, sessionId);\n                        } catch (error) {\n                            console.error('Error loading session messages:', error);\n                        }\n                    }\n                }\n            }[\"ChatMessages.useEffect.loadSessionMessages\"];\n            loadSessionMessages();\n        }\n    }[\"ChatMessages.useEffect\"], [\n        sessionId,\n        isLoaded,\n        user === null || user === void 0 ? void 0 : user.id,\n        loadMessagesForSession\n    ]);\n    // Helper function to strip markdown formatting and convert to plain text\n    const stripMarkdown = (text)=>{\n        return text.replace(/^#{1,6}\\s+/gm, '') // Remove # headers\n        .replace(/\\*\\*(.*?)\\*\\*/g, '$1') // Remove **bold**\n        .replace(/\\*(.*?)\\*/g, '$1') // Remove *italic*\n        .replace(/`([^`]+)`/g, '$1') // Remove `code`\n        .replace(/^\\s*[-*+]\\s+/gm, '• ') // Convert markdown lists to bullet points\n        .replace(/^\\s*\\d+\\.\\s+/gm, '• ') // Convert numbered lists to bullet points\n        .replace(/\\n\\s*\\n\\s*\\n/g, '\\n\\n') // Reduce multiple blank lines to double\n        .split('\\n') // Split into lines for processing\n        .map((line)=>{\n            // Add spacing after section headers (lines that don't start with bullet points)\n            if (line.trim() && !line.startsWith('•') && !line.startsWith(' ') && line.length > 0) {\n                return line + '\\n'; // Add extra newline after headers\n            }\n            return line;\n        }).join('\\n').replace(/\\n{3,}/g, '\\n\\n') // Clean up excessive newlines\n        .trim();\n    };\n    // Show command hints when user types '/'\n    (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)({\n        \"ChatMessages.useEffect\": ()=>{\n            setShowCommandHints(message.startsWith('/') && message.length > 1);\n        }\n    }[\"ChatMessages.useEffect\"], [\n        message\n    ]);\n    // Filter commands based on input\n    const filteredCommands = _lib_chatCommands__WEBPACK_IMPORTED_MODULE_2__.chatCommands.filter((cmd)=>message.length > 1 && cmd.command.toLowerCase().includes(message.toLowerCase()));\n    // Auto-scroll to bottom when new messages arrive\n    (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)({\n        \"ChatMessages.useEffect\": ()=>{\n            if (scrollRef.current) {\n                scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n            }\n        }\n    }[\"ChatMessages.useEffect\"], [\n        messages,\n        isLoading\n    ]);\n    // Auto-focus input on mount and after messages\n    (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)({\n        \"ChatMessages.useEffect\": ()=>{\n            if (inputRef.current && !isLoading) {\n                inputRef.current.focus();\n            }\n        }\n    }[\"ChatMessages.useEffect\"], [\n        isLoading\n    ]);\n    // Debug: Log messages when they change\n    (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)({\n        \"ChatMessages.useEffect\": ()=>{\n            console.log(\"🖥️ Messages updated:\", {\n                totalMessages: (messages === null || messages === void 0 ? void 0 : messages.length) || 0,\n                messageTypes: (messages === null || messages === void 0 ? void 0 : messages.map({\n                    \"ChatMessages.useEffect\": (m)=>m.role\n                }[\"ChatMessages.useEffect\"])) || [],\n                terminalMessages: (messages === null || messages === void 0 ? void 0 : messages.filter({\n                    \"ChatMessages.useEffect\": (m)=>m.role === 'terminal'\n                }[\"ChatMessages.useEffect\"]).length) || 0,\n                lastMessage: messages === null || messages === void 0 ? void 0 : messages[messages.length - 1],\n                sessionId,\n                sessionStatus: getSessionStatus().status,\n                limit: '500 messages'\n            });\n        }\n    }[\"ChatMessages.useEffect\"], [\n        messages,\n        sessionId,\n        getSessionStatus\n    ]);\n    // Helper function to detect MCP-related queries (excluding direct tool commands)\n    const isMCPQuery = (input)=>{\n        // Don't treat direct tool commands as NLP queries\n        if (input.startsWith('/') && input.includes('eac_')) {\n            return false;\n        }\n        // Skip simple greetings and short messages\n        const msg = input.toLowerCase().trim();\n        if (msg.length < 10 || [\n            'hi',\n            'hello',\n            'hey',\n            'thanks',\n            'thank you',\n            'ok',\n            'okay',\n            'yes',\n            'no'\n        ].includes(msg) || msg.match(/^(hi|hello|hey|thanks?|ok|okay|yes|no)[!.?]*$/)) {\n            return false;\n        }\n        // Only trigger on very specific, explicit requests\n        const explicitMCPPatterns = [\n            /analyze.+(reddit|project|workflow|integration)/,\n            /generate.+(post|content|component)/,\n            /optimize.+(workflow|process)/,\n            /show.+(reddit|project|component|architecture)/,\n            /create.+(project|component).+/,\n            /reddit.+(analyze|post|integration)/\n        ];\n        const lowerInput = input.toLowerCase();\n        return explicitMCPPatterns.some((pattern)=>pattern.test(lowerInput)) || input.startsWith('/reddit') || input.startsWith('/mcp') || input.startsWith('/workflow');\n    };\n    // ToolSelector handlers\n    const handleToolSelectorSelect = (command)=>{\n        var _inputRef_current;\n        setMessage(command + \" \");\n        setShowToolSelector(false);\n        (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();\n    };\n    const handleToolSelectorClose = ()=>{\n        var _inputRef_current;\n        setShowToolSelector(false);\n        setMessage(\"\");\n        (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();\n    };\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        // Check session limit before processing\n        if (!canAddMessages()) {\n            console.warn(\"Cannot send message: Session limit reached\");\n            // Optionally add a terminal feedback message about the limit\n            await storeChatMessage({\n                role: \"terminal\",\n                content: \"[\".concat(new Date().toLocaleTimeString('en-US', {\n                    hour12: false,\n                    hour: '2-digit',\n                    minute: '2-digit',\n                    second: '2-digit'\n                }), \"] \\uD83D\\uDEA8 Message not sent: Session limit reached (500 messages)\\nPlease start a new session to continue chatting.\"),\n                sessionId\n            });\n            return;\n        }\n        if (message.trim() && !isLoading) {\n            const messageContent = message.trim();\n            setMessage(\"\");\n            setShowMCPTools(false);\n            setSelectedToolIndex(-1);\n            // Check for agent tool commands (e.g., /twitter, /instructions)\n            if (messageContent.startsWith('/')) {\n                const command = messageContent.split(' ')[0];\n                // Find agent that has this command\n                let targetAgent = null;\n                let agentTool = null;\n                for (const agent of agents){\n                    const tool = agent.tools.find((t)=>t.command === command);\n                    if (tool) {\n                        targetAgent = agent;\n                        agentTool = tool;\n                        break;\n                    }\n                }\n                if (targetAgent && agentTool) {\n                    // Set the active agent if it's not already set or if it's different\n                    if (activeAgentId !== targetAgent.id) {\n                        setActiveAgent(targetAgent.id);\n                    }\n                    try {\n                        // Create Convex mutations object for database operations\n                        const convexMutations = {\n                            ensureInstructionsProject,\n                            // Only pass createInstructionFile to the instructions agent, not other agents\n                            ...targetAgent.id === 'instructions' ? {\n                                createInstructionFile: createInstruction\n                            } : {},\n                            upsertPost\n                        };\n                        const result = await executeAgentTool(targetAgent.id, agentTool.id, messageContent, convexMutations);\n                        console.log(\"🎯 Agent execution completed, storing messages...\", {\n                            result,\n                            sessionId\n                        });\n                        // Extract filename from result for better terminal feedback\n                        let extractedFileName = 'unknown';\n                        const fileMatch = result.match(/\\*\\*File:\\*\\*\\s*`([^`]+)`/);\n                        if (fileMatch) {\n                            extractedFileName = fileMatch[1];\n                        } else if (messageContent.startsWith('/twitter')) {\n                            // Try to extract from Twitter agent result\n                            const twitterFileMatch = result.match(/File:\\s*([^\\s\\n]+)/);\n                            if (twitterFileMatch) {\n                                extractedFileName = twitterFileMatch[1];\n                            }\n                        }\n                        // Prepare all messages to store\n                        const messagesToStore = [\n                            // User message\n                            storeChatMessage({\n                                role: \"user\",\n                                content: messageContent,\n                                sessionId\n                            }),\n                            // Assistant result message\n                            storeChatMessage({\n                                role: \"assistant\",\n                                content: \"\\uD83E\\uDD16 Agent Result:\\n\\n\".concat(result),\n                                sessionId\n                            })\n                        ];\n                        // Add terminal feedback message\n                        const isFileCreation = messageContent.startsWith('/instructions') || messageContent.startsWith('/twitter');\n                        const hasSuccess = result.includes('Created Successfully!');\n                        console.log(\"🔍 Terminal feedback debug:\", {\n                            isFileCreation,\n                            hasSuccess,\n                            messageContent,\n                            resultSnippet: result.substring(0, 200)\n                        });\n                        if (isFileCreation && hasSuccess) {\n                            const terminalFeedback = \"[\".concat(new Date().toLocaleTimeString('en-US', {\n                                hour12: false,\n                                hour: '2-digit',\n                                minute: '2-digit',\n                                second: '2-digit'\n                            }), \"] ✅ \").concat(targetAgent.name, \" file created: \").concat(extractedFileName, \"\\nOperation: \").concat(targetAgent.name, \" created \").concat(messageContent.startsWith('/instructions') ? 'instruction document' : 'Twitter post', \"\\nStatus: Ready for editing and publishing\");\n                            console.log(\"📝 Adding terminal feedback:\", terminalFeedback);\n                            messagesToStore.push(storeChatMessage({\n                                role: \"terminal\",\n                                content: terminalFeedback,\n                                sessionId,\n                                operation: {\n                                    type: \"file_created\",\n                                    details: {\n                                        agentId: targetAgent.id,\n                                        agentName: targetAgent.name,\n                                        toolId: agentTool.id,\n                                        fileName: extractedFileName\n                                    }\n                                }\n                            }));\n                        } else if (isFileCreation) {\n                            // Fallback for file creation without \"Created Successfully!\" \n                            const terminalFeedback = \"[\".concat(new Date().toLocaleTimeString('en-US', {\n                                hour12: false,\n                                hour: '2-digit',\n                                minute: '2-digit',\n                                second: '2-digit'\n                            }), \"] \\uD83D\\uDCC4 \").concat(targetAgent.name, \" operation: \").concat(extractedFileName, \"\\nOperation: \").concat(targetAgent.name, \" \").concat(messageContent.startsWith('/instructions') ? 'instruction document' : 'Twitter post', \" processing\\nResult: \").concat(result.substring(0, 150)).concat(result.length > 150 ? '...' : '');\n                            console.log(\"📝 Adding fallback terminal feedback:\", terminalFeedback);\n                            messagesToStore.push(storeChatMessage({\n                                role: \"terminal\",\n                                content: terminalFeedback,\n                                sessionId,\n                                operation: {\n                                    type: \"file_created\",\n                                    details: {\n                                        agentId: targetAgent.id,\n                                        agentName: targetAgent.name,\n                                        toolId: agentTool.id,\n                                        fileName: extractedFileName\n                                    }\n                                }\n                            }));\n                        } else {\n                            const terminalFeedback = \"[\".concat(new Date().toLocaleTimeString('en-US', {\n                                hour12: false,\n                                hour: '2-digit',\n                                minute: '2-digit',\n                                second: '2-digit'\n                            }), \"] \\uD83D\\uDD27 \").concat(targetAgent.name, \" executed: \").concat(agentTool.command, \"\\nOperation: Agent tool execution completed\\nResult: \").concat(result.substring(0, 100)).concat(result.length > 100 ? '...' : '');\n                            console.log(\"📝 Adding terminal feedback:\", terminalFeedback);\n                            messagesToStore.push(storeChatMessage({\n                                role: \"terminal\",\n                                content: terminalFeedback,\n                                sessionId,\n                                operation: {\n                                    type: \"tool_executed\",\n                                    details: {\n                                        agentId: targetAgent.id,\n                                        agentName: targetAgent.name,\n                                        toolId: agentTool.id,\n                                        success: true\n                                    }\n                                }\n                            }));\n                        }\n                        // Store all messages together\n                        const messageResults = await Promise.all(messagesToStore);\n                        console.log(\"✅ Agent executed and messages stored:\", {\n                            messageCount: messageResults.length,\n                            messages: messageResults.map((m)=>m ? 'success' : 'failed'),\n                            result: result.substring(0, 100) + '...',\n                            sessionId,\n                            terminalMessageStored: messageResults[2] ? 'YES' : 'NO'\n                        });\n                        // Small delay to ensure database consistency, then scroll to bottom\n                        setTimeout(()=>{\n                            if (scrollRef.current) {\n                                scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n                            }\n                        }, 100);\n                        return;\n                    } catch (error) {\n                        console.error('Agent tool error:', error);\n                        // Add terminal feedback for agent tool errors\n                        const terminalFeedback = \"[\".concat(new Date().toLocaleTimeString('en-US', {\n                            hour12: false,\n                            hour: '2-digit',\n                            minute: '2-digit',\n                            second: '2-digit'\n                        }), \"] ❌ \").concat(targetAgent.name, \" failed: \").concat(agentTool.command, \"\\nOperation: Agent tool execution failed\\nError: \").concat(error instanceof Error ? error.message : 'Unknown error');\n                        await storeChatMessage({\n                            role: \"terminal\",\n                            content: terminalFeedback,\n                            sessionId,\n                            operation: {\n                                type: \"error\",\n                                details: {\n                                    agentId: targetAgent.id,\n                                    agentName: targetAgent.name,\n                                    toolId: agentTool.id,\n                                    error: error instanceof Error ? error.message : 'Unknown error'\n                                }\n                            }\n                        });\n                        const errorResults = await Promise.all([\n                            storeChatMessage({\n                                role: \"user\",\n                                content: messageContent,\n                                sessionId\n                            }),\n                            storeChatMessage({\n                                role: \"assistant\",\n                                content: \"❌ Agent tool failed: \".concat(error instanceof Error ? error.message : 'Unknown error'),\n                                sessionId\n                            })\n                        ]);\n                        console.log(\"❌ Error messages stored:\", errorResults);\n                        return;\n                    }\n                }\n            }\n            // Check if message starts with MCP tool command (e.g., /eac_project_analyze)\n            if (mcpConnected && messageContent.startsWith('/') && messageContent.includes('eac_')) {\n                try {\n                    // Extract tool name and arguments from the command\n                    const parts = messageContent.slice(1).split(' ');\n                    const toolName = parts[0];\n                    const query = parts.slice(1).join(' ') || \"Execute \".concat(toolName, \" with default parameters\");\n                    // Create a direct tool call request instead of using natural language processing\n                    const response = await fetch('/api/mcp', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({\n                            action: 'call-tool',\n                            data: {\n                                name: toolName,\n                                arguments: {\n                                    query: query,\n                                    includePatterns: true,\n                                    includeRecommendations: true,\n                                    includeProps: true,\n                                    includeHooks: true,\n                                    includeUsage: true,\n                                    includeSchema: true,\n                                    includeFunctions: true\n                                }\n                            }\n                        })\n                    });\n                    const mcpResponse = await response.json();\n                    if (mcpResponse.success && mcpResponse.result) {\n                        // Extract text content from the direct tool result\n                        let textContent = '';\n                        if (mcpResponse.result.content && Array.isArray(mcpResponse.result.content)) {\n                            textContent = mcpResponse.result.content.filter((item)=>item.type === 'text').map((item)=>item.text || '').join('\\n');\n                        } else if (typeof mcpResponse.result === 'string') {\n                            textContent = mcpResponse.result;\n                        } else {\n                            textContent = JSON.stringify(mcpResponse.result, null, 2);\n                        }\n                        // Strip markdown formatting and convert to plain text\n                        const plainText = stripMarkdown(textContent);\n                        // Add terminal feedback for MCP tool execution\n                        const terminalFeedback = \"[\".concat(new Date().toLocaleTimeString('en-US', {\n                            hour12: false,\n                            hour: '2-digit',\n                            minute: '2-digit',\n                            second: '2-digit'\n                        }), \"] \\uD83D\\uDD27 MCP tool executed: \").concat(toolName, \"\\nOperation: MCP tool execution completed\\nResult: \").concat(plainText.substring(0, 100)).concat(plainText.length > 100 ? '...' : '');\n                        await storeChatMessage({\n                            role: \"terminal\",\n                            content: terminalFeedback,\n                            sessionId,\n                            operation: {\n                                type: \"tool_executed\",\n                                details: {\n                                    toolName: toolName,\n                                    success: true\n                                }\n                            }\n                        });\n                        await sendMessage(\"\\uD83D\\uDD27 \".concat(toolName, \" Results:\\n\\n\").concat(plainText));\n                    } else {\n                        // Add terminal feedback for failed MCP tool execution\n                        const terminalFeedback = \"[\".concat(new Date().toLocaleTimeString('en-US', {\n                            hour12: false,\n                            hour: '2-digit',\n                            minute: '2-digit',\n                            second: '2-digit'\n                        }), \"] ❌ MCP tool failed: \").concat(toolName, \"\\nOperation: MCP tool execution failed\\nError: \").concat(mcpResponse.error || 'Unknown error');\n                        await storeChatMessage({\n                            role: \"terminal\",\n                            content: terminalFeedback,\n                            sessionId,\n                            operation: {\n                                type: \"error\",\n                                details: {\n                                    toolName: toolName,\n                                    error: mcpResponse.error || 'Unknown error'\n                                }\n                            }\n                        });\n                        await sendMessage(\"❌ Failed to execute \".concat(toolName, \": \").concat(mcpResponse.error || 'Unknown error'));\n                    }\n                } catch (error) {\n                    console.error('MCP Tool Error:', error);\n                    await sendMessage(\"❌ Error executing MCP tool: \".concat(error));\n                }\n            } else if (mcpConnected && isMCPQuery(messageContent)) {\n                // Check if this looks like a natural language MCP query\n                try {\n                    const mcpResponse = await processNaturalLanguage(messageContent);\n                    if (mcpResponse.success && mcpResponse.content && mcpResponse.content.length > 0) {\n                        // Extract the actual text content from the MCP response\n                        const textContent = mcpResponse.content[0].text;\n                        // Strip markdown formatting and convert to plain text\n                        const plainText = stripMarkdown(textContent);\n                        // Send the MCP response with clean text content\n                        await sendMessage(\"\\uD83E\\uDD16 MCP Analysis:\\n\\n\".concat(plainText));\n                    } else {\n                        await sendMessage(messageContent);\n                    }\n                } catch (error) {\n                    console.error('MCP Error:', error);\n                    // Fall back to regular chat\n                    await sendMessage(messageContent);\n                }\n            } else {\n                // Regular chat message - add instruction context if available\n                let contextualMessage = messageContent;\n                if (instructionContext) {\n                    contextualMessage = \"\".concat(instructionContext, \"\\n\\n---\\n\\n\").concat(messageContent);\n                }\n                // Use the useChat hook which will call the sendChatMessage action\n                // We need to modify the useChat hook to support passing the original message\n                await sendMessage(contextualMessage, messageContent);\n            }\n        }\n    };\n    const handleKeyDown = (e)=>{\n        // If ToolSelector is open, let it handle keyboard events\n        if (showToolSelector) {\n            return; // ToolSelector component will handle its own keyboard events\n        }\n        if (showMCPTools && filteredTools.length > 0) {\n            if (e.key === 'ArrowDown') {\n                e.preventDefault();\n                setSelectedToolIndex((prev)=>prev < filteredTools.length - 1 ? prev + 1 : 0);\n            } else if (e.key === 'ArrowUp') {\n                e.preventDefault();\n                setSelectedToolIndex((prev)=>prev > 0 ? prev - 1 : filteredTools.length - 1);\n            } else if (e.key === 'Tab' || e.key === 'Enter') {\n                e.preventDefault();\n                if (selectedToolIndex >= 0 && selectedToolIndex < filteredTools.length) {\n                    var _inputRef_current;\n                    const selectedTool = filteredTools[selectedToolIndex];\n                    const commandToUse = 'command' in selectedTool ? selectedTool.command : \"/\".concat(selectedTool.name);\n                    setMessage(\"\".concat(commandToUse, \" \"));\n                    setShowMCPTools(false);\n                    setSelectedToolIndex(-1);\n                    (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();\n                }\n            } else if (e.key === 'Escape') {\n                setShowMCPTools(false);\n                setSelectedToolIndex(-1);\n            }\n        } else if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            handleSubmit(e);\n        }\n    };\n    const handleInputChange = (e)=>{\n        const value = e.target.value;\n        setMessage(value);\n        // Show ToolSelector when message is exactly '/'\n        if (value === '/') {\n            setShowToolSelector(true);\n            setSelectedSelectorIndex(0);\n            setShowMCPTools(false);\n            setShowCommandHints(false);\n            return;\n        } else {\n            setShowToolSelector(false);\n        }\n        // Show tools menu when message starts with '/' and is just one character or when typing tool name\n        if (value.startsWith('/') && !value.includes(' ')) {\n            setShowMCPTools(true);\n            setShowCommandHints(false);\n            // Auto-select first matching tool if typing\n            if (value.length > 1) {\n                const searchTerm = value.slice(1).toLowerCase();\n                const currentFiltered = filteredTools.filter((tool)=>{\n                    const toolName = 'command' in tool && tool.command ? tool.command.slice(1) : tool.name;\n                    return toolName.toLowerCase().includes(searchTerm);\n                });\n                setSelectedToolIndex(currentFiltered.length > 0 ? 0 : -1);\n            } else {\n                setSelectedToolIndex(0);\n            }\n        } else if (value.startsWith('/') && value.includes(' ')) {\n            // Hide menu once user has selected a tool and added space\n            setShowMCPTools(false);\n            setSelectedToolIndex(-1);\n        } else if (!value.startsWith('/')) {\n            setShowMCPTools(false);\n            setSelectedToolIndex(-1);\n            // Show regular command hints for other commands (keep existing logic)\n            setShowCommandHints(value.startsWith('/') && value.length > 1);\n        }\n    };\n    // Helper function to get available tools based on current mode\n    const getAvailableTools = ()=>{\n        if (toolsMode === 'agents') {\n            if (activeAgentId) {\n                const activeAgent = agents.find((a)=>a.id === activeAgentId);\n                return (activeAgent === null || activeAgent === void 0 ? void 0 : activeAgent.tools.map((tool)=>({\n                        name: tool.command.slice(1),\n                        description: tool.description,\n                        command: tool.command\n                    }))) || [];\n            } else {\n                // Return empty array when in agent mode but no agent is selected\n                return [];\n            }\n        } else {\n            // MCP mode - return MCP tools\n            return availableTools || [];\n        }\n    };\n    const currentTools = getAvailableTools();\n    const handleToolSelect = (tool)=>{\n        var _inputRef_current;\n        const commandToUse = tool.command || \"/\".concat(tool.name);\n        setMessage(\"\".concat(commandToUse, \" \"));\n        setShowMCPTools(false);\n        setSelectedToolIndex(-1);\n        (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();\n    };\n    // Filter tools based on input and current mode\n    const filteredTools = currentTools.filter((tool)=>{\n        if (!message.startsWith('/') || message.length === 1) return true;\n        const searchTerm = message.slice(1).split(' ')[0].toLowerCase();\n        const toolName = 'command' in tool && tool.command ? tool.command.slice(1) : tool.name;\n        return toolName.toLowerCase().includes(searchTerm);\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: scrollRef,\n        className: \"flex-1 overflow-y-auto bg-[#0e0e0e] p-2 min-h-0 scrollbar-hidden\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"font-mono text-xs space-y-2 min-h-full\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-[#cccccc] space-y-1 mb-4\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: \"EAC Financial Dashboard - AI Assistant\"\n                        }, void 0, false, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 720,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-[#4ec9b0]\",\n                            children: \"▲ Next.js 15.0.0 + Convex Backend\"\n                        }, void 0, false, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 721,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: \"- Anthropic Claude 3.5 Sonnet Integration\"\n                        }, void 0, false, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 722,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-xs \".concat(mcpConnected ? 'text-[#4ec9b0]' : 'text-[#f48771]'),\n                            children: [\n                                \"\\uD83D\\uDD0C MCP Server: \",\n                                mcpConnected ? 'Connected' : 'Disconnected',\n                                mcpConnected && \" (\".concat(availableTools.length, \" tools)\")\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 723,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-xs \".concat(activeAgentId ? 'text-[#4ec9b0]' : 'text-[#858585]'),\n                            children: [\n                                \"\\uD83E\\uDD16 Agents: \",\n                                activeAgentId ? \"Active (\".concat((_agents_find = agents.find((a)=>a.id === activeAgentId)) === null || _agents_find === void 0 ? void 0 : _agents_find.name, \")\") : 'None selected',\n                                activeAgentId && \" (\".concat(((_agents_find1 = agents.find((a)=>a.id === activeAgentId)) === null || _agents_find1 === void 0 ? void 0 : _agents_find1.tools.length) || 0, \" tools)\")\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 727,\n                            columnNumber: 11\n                        }, this),\n                        mcpError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-[#f48771] text-xs\",\n                            children: [\n                                \"MCP Error: \",\n                                mcpError\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 732,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-[#858585] mt-2\",\n                            children: \"AI Assistant ready for EAC project questions.\"\n                        }, void 0, false, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 734,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-[#858585] text-xs\",\n                            children: [\n                                \"Session: \",\n                                sessionId.slice(-8)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 735,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-[#858585] text-xs\",\n                            children: [\n                                \"Messages: \",\n                                messageCount,\n                                \"/500\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 736,\n                            columnNumber: 11\n                        }, this),\n                        isAtSessionLimit && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-[#f48771] text-xs bg-[#1a1a1a] border border-[#f48771] rounded px-2 py-1 mt-2\",\n                            children: [\n                                \"\\uD83D\\uDEA8 Session limit reached (500 messages). Please start a new session to continue.\",\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: startNewSession,\n                                    className: \"ml-2 px-2 py-1 bg-[#007acc] text-white rounded text-xs hover:bg-[#005a9e] transition-colors\",\n                                    children: \"Start New Session\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 742,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 740,\n                            columnNumber: 13\n                        }, this),\n                        isNearSessionLimit && !isAtSessionLimit && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-[#ffcc02] text-xs bg-[#1a1a1a] border border-[#ffcc02] rounded px-2 py-1 mt-2\",\n                            children: [\n                                \"⚠️ Approaching session limit (\",\n                                messageCount,\n                                \"/500 messages). Consider starting a new session soon.\",\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: startNewSession,\n                                    className: \"ml-2 px-2 py-1 bg-[#ffcc02] text-black rounded text-xs hover:bg-[#e6b800] transition-colors\",\n                                    children: \"Start New Session\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 753,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 751,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-[#858585] border-t border-[#333] pt-2 mt-3\",\n                            children: [\n                                \"Type your questions about projects, financials, Reddit integration, or development below.\",\n                                mcpConnected && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-xs text-[#4ec9b0] mt-1\",\n                                    children: \"Enhanced: Try “analyze my reddit integration” or “optimize my workflow”\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 764,\n                                    columnNumber: 30\n                                }, this),\n                                activeAgentId && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-xs text-[#4ec9b0] mt-1\",\n                                    children: \"Agent Active: Type “/” to see available agent tools\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 765,\n                                    columnNumber: 31\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 762,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                    lineNumber: 719,\n                    columnNumber: 9\n                }, this),\n                messages === null || messages === void 0 ? void 0 : messages.map((msg)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-1\",\n                        children: [\n                            msg.role === 'user' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-[#cccccc]\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-[#007acc]\",\n                                        children: \"$ user:\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 774,\n                                        columnNumber: 17\n                                    }, this),\n                                    \" \",\n                                    msg.content\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                lineNumber: 773,\n                                columnNumber: 15\n                            }, this),\n                            msg.role === 'assistant' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-[#cccccc]\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-[#4ec9b0]\",\n                                        children: \"$ system:\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 780,\n                                        columnNumber: 17\n                                    }, this),\n                                    \" \",\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"whitespace-pre-wrap\",\n                                        children: msg.content\n                                    }, void 0, false, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 780,\n                                        columnNumber: 67\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                lineNumber: 779,\n                                columnNumber: 15\n                            }, this),\n                            msg.role === 'system' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-[#f48771]\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-[#f48771]\",\n                                        children: \"$ error:\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 786,\n                                        columnNumber: 17\n                                    }, this),\n                                    \" \",\n                                    msg.content\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                lineNumber: 785,\n                                columnNumber: 15\n                            }, this),\n                            msg.role === 'terminal' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-[#cccccc] font-mono\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"whitespace-pre-wrap bg-[#1a1a1a] border-l-2 border-[#4ec9b0] pl-3 py-1 my-1\",\n                                    children: msg.content\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 792,\n                                    columnNumber: 17\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                lineNumber: 791,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, msg._id, true, {\n                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                        lineNumber: 771,\n                        columnNumber: 11\n                    }, this)),\n                isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-[#cccccc]\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"text-[#4ec9b0]\",\n                            children: \"$ system:\"\n                        }, void 0, false, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 803,\n                            columnNumber: 13\n                        }, this),\n                        \" \",\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"text-[#858585] animate-pulse\",\n                            children: \"thinking...\"\n                        }, void 0, false, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 803,\n                            columnNumber: 63\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                    lineNumber: 802,\n                    columnNumber: 11\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex flex-col pt-2\",\n                    children: [\n                        showMCPTools && currentTools && currentTools.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mb-2 bg-[#1a1a1a] border border-[#333] rounded text-xs max-h-48 overflow-y-auto\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center justify-between p-2 border-b border-[#333]\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-[#4ec9b0] text-xs font-medium\",\n                                            children: [\n                                                toolsMode === 'mcp' ? 'MCP Tools' : 'Agent Tools',\n                                                \" (\",\n                                                filteredTools.length,\n                                                \" of \",\n                                                currentTools.length,\n                                                \" available)\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                            lineNumber: 814,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_toolsToggle__WEBPACK_IMPORTED_MODULE_12__.ToolsToggle, {\n                                            mode: toolsMode,\n                                            onModeChange: setToolsMode,\n                                            className: \"scale-90\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                            lineNumber: 817,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 813,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"p-2 space-y-1\",\n                                    children: filteredTools.length > 0 ? filteredTools.map((tool, index)=>{\n                                        const displayName = 'command' in tool && tool.command ? tool.command : \"/\".concat(tool.name);\n                                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-[#cccccc] py-1 px-2 rounded cursor-pointer hover:bg-[#2a2a2a] \".concat(selectedToolIndex === index ? 'bg-[#0e639c] text-white' : ''),\n                                            onClick: ()=>handleToolSelect(tool),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"font-semibold\",\n                                                    children: displayName\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                    lineNumber: 837,\n                                                    columnNumber: 25\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"text-[#858585] text-xs mt-0.5\",\n                                                    children: tool.description\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                    lineNumber: 838,\n                                                    columnNumber: 25\n                                                }, this)\n                                            ]\n                                        }, tool.name, true, {\n                                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                            lineNumber: 830,\n                                            columnNumber: 23\n                                        }, this);\n                                    }) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-[#858585] py-2 text-center\",\n                                        children: toolsMode === 'agents' && !activeAgentId ? 'No agent selected. Select an agent from the Agents panel.' : \"No \".concat(toolsMode === 'mcp' ? 'MCP' : 'agent', \" tools available.\")\n                                    }, void 0, false, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 843,\n                                        columnNumber: 19\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 825,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-[#858585] text-xs p-2 border-t border-[#333]\",\n                                    children: \"↑↓ navigate • Enter/Tab select • Esc cancel\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 852,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 811,\n                            columnNumber: 13\n                        }, this),\n                        showToolSelector && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mb-2 relative\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_toolSelector__WEBPACK_IMPORTED_MODULE_11__.ToolSelector, {\n                                onToolSelect: handleToolSelectorSelect,\n                                onClose: handleToolSelectorClose,\n                                selectedIndex: selectedSelectorIndex,\n                                onIndexChange: setSelectedSelectorIndex\n                            }, void 0, false, {\n                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                lineNumber: 861,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 860,\n                            columnNumber: 13\n                        }, this),\n                        showCommandHints && filteredCommands.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mb-2 p-2 bg-[#1a1a1a] border border-[#333] rounded text-xs\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-[#4ec9b0] mb-1\",\n                                    children: \"Available Commands:\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 873,\n                                    columnNumber: 15\n                                }, this),\n                                filteredCommands.slice(0, 5).map((cmd)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-[#858585] py-0.5\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"text-[#cccccc]\",\n                                                children: cmd.command\n                                            }, void 0, false, {\n                                                fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                                lineNumber: 876,\n                                                columnNumber: 19\n                                            }, this),\n                                            \" - \",\n                                            cmd.description\n                                        ]\n                                    }, cmd.command, true, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 875,\n                                        columnNumber: 17\n                                    }, this))\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 872,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-[#007acc]\",\n                                    children: \"$ user:\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 883,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                                    onSubmit: handleSubmit,\n                                    className: \"flex-1 ml-1\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        ref: inputRef,\n                                        type: \"text\",\n                                        value: message,\n                                        onChange: handleInputChange,\n                                        onKeyDown: handleKeyDown,\n                                        placeholder: isAtSessionLimit ? \"Session limit reached - Start new session to continue...\" : isLoading ? \"AI is thinking...\" : \"Type / for MCP tools or ask about your EAC project...\",\n                                        disabled: isLoading || isAtSessionLimit,\n                                        className: \"w-full bg-transparent border-none outline-none placeholder:text-[#858585] disabled:opacity-50 disabled:cursor-not-allowed caret-[#cccccc] \".concat(isAtSessionLimit ? 'text-[#f48771]' : 'text-[#cccccc]')\n                                    }, void 0, false, {\n                                        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                        lineNumber: 885,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                                    lineNumber: 884,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                            lineNumber: 882,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n                    lineNumber: 808,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n            lineNumber: 717,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/matthewsimon/Projects/eac/eac/app/_components/terminal/_components/chatMessages.tsx\",\n        lineNumber: 713,\n        columnNumber: 5\n    }, this);\n}\n_s(ChatMessages, \"XHqJSeY1KmGsLw73eopaFSij+3E=\", false, function() {\n    return [\n        _clerk_nextjs__WEBPACK_IMPORTED_MODULE_13__.useUser,\n        _store_terminal_chat__WEBPACK_IMPORTED_MODULE_7__.useChatStore,\n        _store_terminal_session__WEBPACK_IMPORTED_MODULE_8__.useSessionStore,\n        _lib_hooks_useChat__WEBPACK_IMPORTED_MODULE_3__.useChat,\n        _lib_hooks_useMCP__WEBPACK_IMPORTED_MODULE_5__.useMCP,\n        _store__WEBPACK_IMPORTED_MODULE_6__.useAgentStore,\n        _lib_hooks_useInstructions__WEBPACK_IMPORTED_MODULE_4__.useInstructions,\n        _lib_hooks_useInstructions__WEBPACK_IMPORTED_MODULE_4__.useInstructionContext,\n        convex_react__WEBPACK_IMPORTED_MODULE_9__.useMutation\n    ];\n});\n_c = ChatMessages;\nvar _c;\n$RefreshReg$(_c, \"ChatMessages\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/_components/terminal/_components/chatMessages.tsx\n"));

/***/ })

});