"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_ssr_lib_twitter-tools_contentGenerator_ts";
exports.ids = ["_ssr_lib_twitter-tools_contentGenerator_ts"];
exports.modules = {

/***/ "(ssr)/./lib/twitter-tools/contentGenerator.ts":
/*!***********************************************!*\
  !*** ./lib/twitter-tools/contentGenerator.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwitterContentGenerator: () => (/* binding */ TwitterContentGenerator),\n/* harmony export */   contentGenerator: () => (/* binding */ contentGenerator)\n/* harmony export */ });\n// Twitter Content Generator\n// Handles AI-powered content generation with improved templates and variety\n// Content Generation Interface\nclass TwitterContentGenerator {\n    constructor(){}\n    static getInstance() {\n        if (!TwitterContentGenerator.instance) {\n            TwitterContentGenerator.instance = new TwitterContentGenerator();\n        }\n        return TwitterContentGenerator.instance;\n    }\n    async generateContent(request) {\n        const { userInput } = request;\n        // Detect if user wants content generation or is providing literal content\n        const isGenerationRequest = this.detectGenerationRequest(userInput);\n        if (!isGenerationRequest) {\n            return {\n                content: userInput,\n                detectedTopic: 'user-provided',\n                style: 'custom',\n                confidence: 1.0\n            };\n        }\n        // Extract topic and style from user input\n        const detectedTopic = this.extractTopic(userInput);\n        const detectedStyle = this.extractStyle(userInput);\n        // Generate content based on topic and style\n        const content = this.generateTopicContent(detectedTopic, detectedStyle, userInput);\n        return {\n            content,\n            detectedTopic,\n            style: detectedStyle,\n            confidence: 0.85\n        };\n    }\n    detectGenerationRequest(input) {\n        const generationKeywords = [\n            'create',\n            'generate',\n            'write',\n            'make',\n            'post about',\n            'tweet about',\n            'share about',\n            'motivational',\n            'inspirational',\n            'funny',\n            'educational',\n            'professional',\n            'announcement',\n            'tip',\n            'advice',\n            'quote'\n        ];\n        return generationKeywords.some((keyword)=>input.toLowerCase().includes(keyword.toLowerCase()));\n    }\n    extractTopic(input) {\n        const inputLower = input.toLowerCase();\n        // Direct topic extraction patterns\n        const aboutMatch = input.match(/(?:about|on)\\s+([^,\\.!?]+)/i);\n        if (aboutMatch) {\n            return aboutMatch[1].trim();\n        }\n        // Predefined topic detection\n        const topicMap = {\n            'japan': [\n                'japan',\n                'japanese',\n                'tokyo',\n                'kyoto'\n            ],\n            'technology': [\n                'tech',\n                'technology',\n                'ai',\n                'software',\n                'coding'\n            ],\n            'business': [\n                'business',\n                'startup',\n                'entrepreneur',\n                'finance'\n            ],\n            'health': [\n                'health',\n                'fitness',\n                'wellness',\n                'workout'\n            ],\n            'motivation': [\n                'motivation',\n                'inspiration',\n                'success',\n                'goals'\n            ],\n            'travel': [\n                'travel',\n                'trip',\n                'vacation',\n                'tourism'\n            ],\n            'food': [\n                'food',\n                'cooking',\n                'recipe',\n                'cuisine'\n            ],\n            'education': [\n                'education',\n                'learning',\n                'study',\n                'knowledge'\n            ],\n            'productivity': [\n                'productivity',\n                'work',\n                'efficiency',\n                'time'\n            ],\n            'creativity': [\n                'creativity',\n                'art',\n                'design',\n                'creative'\n            ],\n            'music': [\n                'music',\n                'song',\n                'artist',\n                'singer',\n                'album',\n                'concert',\n                'mariah carey',\n                'taylor swift',\n                'beyonce',\n                'drake',\n                'spotify',\n                'playlist'\n            ]\n        };\n        for (const [topic, keywords] of Object.entries(topicMap)){\n            if (keywords.some((keyword)=>inputLower.includes(keyword))) {\n                return topic;\n            }\n        }\n        return 'general';\n    }\n    extractStyle(input) {\n        const inputLower = input.toLowerCase();\n        if (inputLower.includes('motivat') || inputLower.includes('inspir')) return 'motivational';\n        if (inputLower.includes('professional') || inputLower.includes('business')) return 'professional';\n        if (inputLower.includes('educational') || inputLower.includes('tip')) return 'educational';\n        if (inputLower.includes('announcement') || inputLower.includes('news')) return 'announcement';\n        if (inputLower.includes('funny') || inputLower.includes('casual')) return 'casual';\n        return 'general';\n    }\n    generateTopicContent(topic, style, originalInput) {\n        const templates = this.getTemplatesForTopic(topic, style);\n        if (templates.length === 0) {\n            return this.generateFallbackContent(topic, originalInput);\n        }\n        // Select random template for variety\n        const template = templates[Math.floor(Math.random() * templates.length)];\n        return template;\n    }\n    getTemplatesForTopic(topic, style) {\n        const templateMap = {\n            japan: {\n                motivational: [\n                    \"🗾 Japan teaches us that strength comes from adapting to change, just like cherry blossoms bloom and fall. What lesson from nature inspires you today? #JapanWisdom #Resilience #Growth\",\n                    \"🌸 In Japan, they say 'Nana korobi ya oki' - fall seven times, rise eight. What challenge are you ready to rise from today? #JapanMotivation #Perseverance #Success\"\n                ],\n                educational: [\n                    \"🗾 Did you know Japan has over 6,800 islands? From ancient temples to bullet trains, every corner tells a story of innovation meeting tradition. #JapanFacts #Culture #Learning\",\n                    \"🍜 Japanese cuisine goes beyond sushi! Ramen has over 100 varieties, each region crafting unique flavors. What's your favorite Japanese dish? #JapaneseCuisine #Food #Culture\"\n                ],\n                general: [\n                    \"🗾 Japan's breathtaking landscapes blend ancient traditions with modern marvels. From cherry blossoms in Kyoto to neon lights in Tokyo—every moment is magic! #JapanTravel #Tourism #Culture\"\n                ]\n            },\n            technology: {\n                motivational: [\n                    \"💻 Technology isn't just about code—it's about creating solutions that change lives. What problem are you solving today? #TechMotivation #Innovation #Impact\",\n                    \"🚀 Every app started as an idea. Every platform began with a single line of code. Your next breakthrough is just one commit away! #TechSuccess #Coding #Dreams\"\n                ],\n                educational: [\n                    \"🔧 AI isn't replacing developers—it's amplifying our capabilities. Learn to work WITH AI, not against it. The future belongs to human-AI collaboration! #AI #Development #Future\",\n                    \"💡 Did you know? The first computer bug was literally a bug—a moth found in a Harvard computer in 1947! Grace Hopper coined the term. #TechHistory #Programming #Fun\"\n                ],\n                professional: [\n                    \"⚡ The tech industry moves fast, but fundamentals remain constant: clean code, user focus, and continuous learning. What fundamental are you strengthening today? #TechCareer #Programming #Growth\"\n                ]\n            },\n            motivation: {\n                motivational: [\n                    \"🌟 Every expert was once a beginner. Every pro was once an amateur. The only difference? They never gave up. What are you not giving up on today? #Motivation #Growth #Success\",\n                    \"💪 Your future self is counting on the decisions you make today. Make choices that your future self will thank you for! #FutureYou #Goals #Success\",\n                    \"🎯 Progress isn't always visible, but it's always happening. Trust the process, embrace the journey, celebrate small wins! #Progress #Mindset #Growth\"\n                ]\n            },\n            business: {\n                professional: [\n                    \"📊 Great businesses solve real problems for real people. Before building features, build understanding. What problem are you solving today? #Business #Strategy #CustomerFirst\",\n                    \"💼 Revenue is vanity, profit is sanity, but cash flow is reality. Focus on the metrics that actually matter for sustainability. #BusinessTips #Finance #Strategy\"\n                ],\n                motivational: [\n                    \"🚀 Every successful business started with someone believing in an impossible idea. What impossible idea are you working on? #Entrepreneurship #Innovation #Dreams\"\n                ]\n            },\n            health: {\n                motivational: [\n                    \"💪 Your body can do it. It's your mind you need to convince. What mental barrier are you breaking through today? #FitnessMotivation #Health #Mindset\",\n                    \"🌱 Health isn't a destination—it's a daily practice. Small choices compound into life-changing results. What healthy choice are you making today? #Health #Wellness #Habits\"\n                ],\n                educational: [\n                    \"🧠 Did you know? Exercise literally grows new brain cells! Physical activity increases BDNF, which helps create new neural connections. Move your body, grow your mind! #Health #Science #Brain\"\n                ]\n            },\n            music: {\n                motivational: [\n                    \"🎵 Music has the power to heal, inspire, and unite us across all boundaries. What song lifts your spirits when you need it most? #Music #Inspiration #Healing\",\n                    \"🎤 Every artist's journey starts with a single note, a single word, a single dream. Your voice matters—let it be heard! #Music #Dreams #ArtistLife\"\n                ],\n                general: [\n                    \"🎶 Great music transcends time and touches souls. From classic ballads to modern beats, every genre tells a story. What's your soundtrack today? #Music #Life #Soundtrack\",\n                    \"🎵 The beauty of music lies in its ability to express what words cannot. Which artist's voice speaks to your heart? #Music #Emotion #Connection\",\n                    \"🎤 Music is the universal language that connects us all. One song can change a mood, a day, or even a life. What's your go-to anthem? #Music #Universal #Power\"\n                ],\n                professional: [\n                    \"🎼 The music industry continues to evolve with streaming, AI, and new platforms changing how we discover and consume music. What trends excite you most? #MusicIndustry #Innovation #Streaming\"\n                ],\n                educational: [\n                    \"🎵 Did you know? Listening to music releases dopamine in the brain—the same chemical associated with eating and falling in love! What music makes you happiest? #Music #Science #Brain\"\n                ]\n            }\n        };\n        const topicTemplates = templateMap[topic];\n        if (!topicTemplates) return [];\n        const styleTemplates = topicTemplates[style] || topicTemplates['general'] || [];\n        return styleTemplates;\n    }\n    generateFallbackContent(topic, originalInput) {\n        // Try to extract the actual subject from the original input\n        const aboutMatch = originalInput.match(/about\\s+([^,\\.!?]+)/i);\n        const subject = aboutMatch ? aboutMatch[1].trim() : topic;\n        const subjectFormatted = subject.charAt(0).toUpperCase() + subject.slice(1);\n        const hashtag = subject.replace(/\\s+/g, '').replace(/[^a-zA-Z0-9]/g, '');\n        const fallbackTemplates = [\n            `✨ ${subjectFormatted} brings so much joy and inspiration! What's your favorite thing about it? #${hashtag} #Love #Passion`,\n            `🌟 There's something special about ${subjectFormatted} that just captures the heart. Share your thoughts! #${hashtag} #Amazing #Thoughts`,\n            `💫 ${subjectFormatted} has this incredible ability to make us feel alive. What draws you to it? #${hashtag} #Inspiration #Life`,\n            `🎉 Celebrating all things ${subjectFormatted}! What makes it meaningful to you? #${hashtag} #Celebration #Meaningful`,\n            `� ${subjectFormatted} never fails to amaze! What's your latest discovery or favorite moment? #${hashtag} #Amazing #Discovery`\n        ];\n        return fallbackTemplates[Math.floor(Math.random() * fallbackTemplates.length)];\n    }\n}\n// Export singleton instance\nconst contentGenerator = TwitterContentGenerator.getInstance();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./lib/twitter-tools/contentGenerator.ts\n");

/***/ })

};
;